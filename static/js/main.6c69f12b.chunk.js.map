{"version":3,"sources":["components/SoundLibrary.jsx","components/Instruments.jsx","components/SimplePanel.jsx","components/PlayModes.jsx","components/PlaybackModes.jsx","components/PresetsLib.jsx","localization/pl-pl.jsx","components/Locale.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/EditPresetModal.jsx","components/ImportDialog.jsx","components/Config.jsx","components/PresetsManager.jsx","components/SvgClock.jsx","components/Sliders/GeometricSlider.jsx","components/Sliders/RangeEditInPlace.jsx","components/Sliders/AdvancedRange.jsx","components/Sliders/EditInPlace.jsx","components/Sliders/AdvancedSlider.jsx","components/Sliders/DiscreteSlider.jsx","components/ModePanel.jsx","components/TrackView/TrackRow.jsx","components/TrackView/TrackView.jsx","components/SoundMachine.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SoundLibrary","constructor","props","players","Tone","Players","playersArr","reverb","Reverb","toMaster","this","decay","predelay","generate","wet","value","connect","use","idx","instrumentKey","file","instrument","InstrumentsByKey","console","log","process","add","player","get","fullLabel","Samples","find","el","label","getSamples","samples","map","push","key","play","trackIdx","time","loaded","start","setReverb","Instruments","TABLA","ELECTRO_KIT","METRONOME","BASIC_DRUM_KIT","YAMAHA_RX5","Object","keys","item","SimplePanel","Component","render","Container","className","Row","title","children","defaultProps","PlayModes","PlaybackModes","PresetsLib","playMode","byTimeInterval","bpmStep","bpmRange","track","playbackMode","byBarInterval","stepsNum","isHidden","InitPreset","pl","1","2","3","4","5","GetNavigatorLanguage","navigator","languages","length","userLanguage","language","browserLanguage","locale","Tr","text","TrRange","number","l","SimpleProgress","state","style","width","display","Utils","toLocaleDateTime","dateTime","Date","toLocaleString","dateStyle","timeStyle","padTime","t","formatTime","timeInSeconds","formatTimeFull","formatTimeLong","hLabel","mLabel","sLabel","usePad","setSeconds","h","getHours","m","getMinutes","s","getSeconds","o","trim","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","Planner","steps","currentStepIdx","stepProgress","planProgress","isUpDown","isPaused","barRender","b","cls","stepIdx","onClick","startStep","duration","Infinity","durationFormatted","durationBars","Math","floor","bpm","toFixed","makePlan","segments","max","segment","constantBpmSlider","exerciseTime","rev","slice","reverse","shift","concat","isRandom","shuffle","array","temporaryValue","randomIndex","currentIndex","random","onPlanStep","setState","stepChanged","updateProgress","step","getStep","transport","ticks","startTimeTicks","Time","toTicks","endTime","clamp","min","setPlan","config","plan","baseBpm","timeSignature","events","totalPlanTime","i","beatDuration","schedule","durationInBars","bar","calcTimeForBpm","Error","onPlanEnd","prevState","seconds","stepForward","stepBackward","getCurrentStep","onPlaybackChange","newPlaybackMode","onChange","onUpDownBtn","onRandomBtn","height","overflow","Collapse","isOpen","ButtonGroup","size","Button","outline","active","NaN","EditPresetModal","modal","nestedModal","preset","presetId","showDelete","toggle","toggleNested","handleSave","onSave","edit","titleChanged","newTitle","target","handleDelete","onDeleteBtn","renderDelete","color","marginTop","onSaveBtn","Modal","ModalHeader","ModalBody","Input","placeholder","defaultValue","ModalFooter","ImportDialog","showInvalidFileAlert","open","close","onPresetsLoaded","json","JSON","parse","result","onJsonReady","onUploadBtn","reader","FileReader","onload","readAsText","files","onImportBtn","Alert","hidden","Config","TRACKS_NUMBER","MAXIMUM_TIMESIGNATURE","MIN_BPM","MAX_BPM","PROGRESS_UPDATE_FPS","COLOR_PALETTE","0","PresetsManager","super","showEdit","userPresets","storedPresets","localStorage","getItem","Array","fill","validatePreset","interval","accents","beatIdx","beats","beat","convertInstrumentKeyToSamples","filter","onPresetClick","onSelect","onSavePreset","undefined","apply","p","savedDtm","findIndex","saveInLocalStorage","presets","stringify","showDeleteBtn","showEditBtn","hideEditBtn","onPresetDelete","newPresets","splice","onPresetEdit","getPreset","refs","presetEditor","importDialog","renderUserPresets","Col","textAlign","xs","onExport","a","document","createElement","Blob","href","URL","createObjectURL","download","click","onPresetsImport","forEach","userPresetsJson","isHeader","justifyContent","ref","SvgClock","colorEmpty","strokeColor","strokeWidth","setAccents","getCoordinatesForPercent","percent","r","cos","PI","sin","drawSlices","radius","pctStep","slices","volume","subIdx","cumulativePercent","paths","startX","startY","endX","endY","largeArcFlag","pathData","join","d","stroke","drawText","labels","y","textAnchor","transform","setProgress","progress","line","radiusIncrement","circles","cx","cy","container","viewBox","svg","strokeLinecap","x1","y1","x2","y2","partProgress","GeometricSlider","regression","onMinusClick","newValue","btnStep","onPlusClick","exponential","precision","prepareMarks","marks","marksAt","findX","v","predict","equation","setValue","Badge","onBadgeClick","badgeFormatter","included","marksNum","marksStyle","desc","markFormatter","RangeEditInPlace","showInvalidRange","onOk","onMinValueChange","Number","onMaxValueChange","InputGroup","InputGroupAddon","addonType","AdvancedRange","Range","editor","onEdit","bounds","onAfterChange","editInPlace","assign","EditInPlace","onValueChange","val","AdvancedSlider","Slider","disableBtns","DiscreteSlider","innerValue","innerMarks","values","componentDidUpdate","prevProps","theValue","indexOf","onSliderChange","sliderValue","margin","whiteSpace","ModePanel","bpmStepDropdownOpen","onBpmSliderChange","onModeChange","newMode","newState","onBpmRangeChange","onBpmStepChange","onBpmStepSelect","byBarSlider","byTimeSlider","onTimeIntervalChange","onBarIntervalChange","byBarFormatter","barsNum","renderIncreaseBpmDropdown","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","onStepsSliderChange","onExerciseTimeSliderChange","renderTimeSlider","renderStepsSlider","10","15","20","30","40","50","60","70","80","90","100","renderSpeedRange","pushable","200","400","600","800","1000","1200","TrackRow","activeIdx","componentDidMount","onSampleSelect","addBeat","trackRow","onMeasureChange","removeBeat","onSampleChange","sampleDropdownOpen","filename","soundLibrary","sample","alignSelf","vertical","backgroundColor","TrackView","rowRefs","handleCellClick","sampleIdx","columnIdx","indicator","left","minLeft","maxRight","updateDimensions","cellsBBtop","trackRow_0","cellsDiv","getBoundingClientRect","cellsBBbottom","trackRow_3","box","top","bottom","right","offsetLeft","offsetWidth","addEventListener","pop","onTrackRowSignatureChange","trackId","newTimeSignature","indicatorProgress","padding","SoundMachine","initialized","Transport","tone","repeat","setBpm","isNaN","documentTitle","lookAhead","part","Part","note","loop","getConfig","initProgressUpdate","onReady","modePanel","setInterval","onProgress","cancel","position","setTrack","planner","createPoly","setTimeSignature","removeAll","loopEnd","debug","innerHTML","svgClock","trackView","stop","onControlChange","onPresetSelect","onTrackChange","newTrack","onVolumeChange","newVolume","Master","onReverbChange","handleKey","preventDefault","handleKeys","onKeyEvent","isPlaying","block","App","showMask","ReactGA","initialize","trackingId","gaOptions","cookieDomain","pageview","location","pathname","search","removeLoadMask","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","origin","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c69f12b.chunk.js","sourcesContent":["import Tone from 'tone'\r\nimport { Samples, InstrumentsByKey } from './Instruments';\r\n\r\nclass SoundLibrary  {\r\n    players = new Tone.Players({})\r\n    playersArr = []; \r\n  \r\n    reverb = new Tone.Reverb().toMaster();\r\n\r\n    constructor(props) {\r\n        // this is required for convolution rever to generate IR profile\r\n        this.reverb.decay = 4;\r\n        this.reverb.predelay = 0.05;\r\n        this.reverb.generate();\r\n\r\n        this.reverb.wet.value = 0;\r\n        this.players.connect(this.reverb);\r\n        this.players.toMaster();\r\n    }\r\n\r\n   \r\n    use(idx, instrumentKey, file) {\r\n        const instrument = InstrumentsByKey[instrumentKey];\r\n\r\n        console.log('process', process)\r\n        this.players.add('player_' + idx, './audio/' + instrumentKey + '/' + file);// (player) => this.onLoad(player));\r\n        \r\n        let player = this.players.get('player_' + idx);\r\n        player.instrument = instrument;\r\n        player.file = file;\r\n        player.idx = idx;\r\n        player.fullLabel = Samples.find(el => el.file === file).label;\r\n        this.playersArr[idx] = player;\r\n    }\r\n\r\n    getSamples() {\r\n        let samples = [];\r\n        this.playersArr.map(player => {\r\n            samples.push({\r\n                file: player.file,\r\n                instrumentKey: player.instrument.key\r\n            })\r\n            // expected to return value from arrow func\r\n            return true;\r\n        });\r\n        return samples;\r\n    }\r\n\r\n    play(trackIdx, time) {\r\n        const player = this.playersArr[trackIdx];\r\n        if (player && player.loaded) {\r\n            player.start(time);\r\n        }\r\n    }\r\n\r\n    setReverb(wet) {\r\n        this.reverb.wet.value = wet;\r\n    }\r\n}\r\nexport default SoundLibrary;","export const Instruments = {\r\n    TABLA: {\r\n        key: 'tabla',\r\n        label: 'Tabla'\r\n    },\r\n    ELECTRO_KIT: {\r\n        key: 'electrokit',\r\n        label: 'Electronic Kit'\r\n        \r\n    },\r\n    METRONOME: {\r\n        key: 'metronome',\r\n        label: 'Metronome'\r\n        \r\n    },\r\n    BASIC_DRUM_KIT: {\r\n        key: 'basicdrumkit',\r\n        label: 'Basic Drum Kit'\r\n        \r\n    },\r\n    YAMAHA_RX5: {\r\n        key: 'yamaha_rx5',\r\n        label: 'Yamaha RX 5'\r\n    }\r\n};\r\n\r\n\r\nexport const Samples = [\r\n{\r\n        file: \"dha-slide.wav\",\r\n        label: \"Dha\",\r\n        instrumentKey: 'tabla'\r\n    }, {\r\n        file: \"dhin-slide.wav\",\r\n        label: \"Dhin\",\r\n        instrumentKey: 'tabla'\r\n    }, {\r\n        file: \"tin.wav\",\r\n        label: \"Tin\",\r\n        instrumentKey: 'tabla'\r\n    },{\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"Snare.wav\",\r\n        label: \"Snare\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"HiHat.wav\",\r\n        label: \"Hi Hat\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"tap.wav\",\r\n        label: \"Tap\",\r\n        instrumentKey: 'metronome'\r\n    }, {\r\n        file: \"down.wav\",\r\n        label: \"Down\",\r\n        instrumentKey: 'metronome'\r\n    }, {\r\n        file: \"up.wav\",\r\n        label: \"Up\",\r\n        instrumentKey: 'metronome'\r\n    },\r\n    {\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"Snare.wav\",\r\n        label: \"Snare\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"ClosedHat.wav\",\r\n        label: \"Closed Hat\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"OpenHat.wav\",\r\n        label: \"Open Hat\",\r\n        instrumentKey: 'basicdrumkit'\r\n    },\r\n    {\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Rim.wav\",\r\n        label: \"Rim\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Ride.wav\",\r\n        label: \"Ride\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Cowbell.wav\",\r\n        label: \"Cowbell\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Shaker.wav\",\r\n        label: \"Shaker\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst InstrumentsByKey = {}\r\nObject.keys(Instruments).map(function (item, idx) {\r\n    InstrumentsByKey[Instruments[item].key] = Instruments[item];\r\n    // expected to return a value from arrow func\r\n    return true;\r\n});\r\nexport { InstrumentsByKey };\r\n\r\nexport const InstrumentsArray = Object.keys(Instruments)\r\n    .map(item => {\r\n        return Instruments[item]\r\n    });\r\n","import React, { Component } from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","\r\n// NOTE: If we change any of existing string names we will screw up user presets on client's side\r\nexport const PlayModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\",\r\n\tSET_TIME: \"set_time\",\r\n\tCONSTANT: \"constant\"\r\n};","export const PlaybackModes = {\r\n\tSTOP: \"stop\",\r\n\tCYCLE: \"cycle\",\r\n\tREPEAT: \"repeat\",\r\n\tCONTINUE: \"continue\"\r\n};","import { PlayModes } from \"./PlayModes\"\r\nimport { PlaybackModes } from \"./PlaybackModes\"\r\nimport { Instruments } from \"./Instruments\";\r\n\r\nexport const PresetsLib = [\r\n    { \"isHeader\": true, title: \"Basic\" },\r\n    { title: \"Metronome 2/4\", \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"interval\": 300, \"track\": [[2], [1]], \"instrumentKey\": \"metronome\" },\r\n\r\n    {\r\n        title: \"Metronome 4/4\",\r\n        instrumentKey: Instruments.METRONOME.key,\r\n        playMode: PlayModes.BY_TIME,\r\n        byTimeInterval: 60,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 200],\r\n        track: [[2], [1], [1], [1]]\r\n    },\r\n    {\r\n        title: \"Metronome 3/4\",\r\n        instrumentKey: Instruments.METRONOME.key,\r\n        playMode: PlayModes.BY_TIME,\r\n        byTimeInterval: 60,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 200],\r\n        track: [[2], [1], [1]]\r\n    },\r\n    { \"isHeader\": true, title: \"Drum Patterns\" },\r\n    {\r\n        title: \"Levee Break\",\r\n        instrumentKey: 'electrokit',\r\n        bpmRange: [300, 400],\r\n        track: [[0, 2], [0], [2], [], [1, 2], [], [2], [0], [2], [], [0, 2], [0], [1, 2], [], [2], []],\r\n        playMode: PlayModes.BY_BAR,\r\n        playbackMode: PlaybackModes.STOP,\r\n        byTimeInterval: 5,\r\n        byBarInterval: 10,\r\n        stepsNum: 10,\r\n        bpmStep: 10,\r\n        isHidden: true\r\n    },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [0, 2], [], [2, 1], [], [0, 2], [], [2, 0], [], [2, 0], [], [1, 2], [], [2, 0], []], \"instrumentKey\": \"electrokit\", \"title\": \"Basic Rock\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2], [], [2, 1], [], [2], [0, 2], [2, 0], [], [0, 2], [], [1, 2], [], [2, 0], []], \"instrumentKey\": \"electrokit\", \"title\": \"Impeach the President\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [350, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [2], [0, 2], [2], [2, 1], [2], [0, 2], [3, 1], [2], [2, 1], [0, 2], [2, 1], [2, 1], [0, 3], [2], [2, 1]], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Funky Drummer\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2], [], [1, 2], [], [2], [0], [2, 0], [], [0, 2], [], [1, 2], [], [2], []], \"instrumentKey\": \"electrokit\", \"title\": \"Walk This Way\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2, 0], [], [1, 2], [], [2], [], [2], [], [0, 2], [0], [1, 2], [], [2], [0]], \"instrumentKey\": \"electrokit\", \"title\": \"It's a New Day\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0], [], [], [0], [1, 2], [], [0], [], [0], [], [], [], [1, 2], [], [], []], \"instrumentKey\": \"electrokit\", \"title\": \"The Big Beat\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [300, 500], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 300, \"interval\": 120, \"track\": [[0, 2], [], [0, 2], [], [1, 2], [], [0, 2], [], [0, 2], [], [0, 2], [], [1, 2], [], [0, 2], []], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Rock\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [528, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"constant\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 600, \"interval\": 120, \"track\": [[0], [], [3], [], [1, 0], [], [3], [], [0], [2], [3], [], [1, 0], [], [0, 3], []], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Techno\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [528, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"constant\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 400, \"interval\": 120, \"track\": [[0, 2], [], [2], [], [1, 2], [], [2], [0], [2], [], [0, 2], [], [1, 2], [0], [2], [0]], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Hip Hop\" },\r\n\r\n    // Afro-Cuban\r\n    { \"isHeader\": true, title: \"Afro-Cuban\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"interval\": 120, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [1, 2], [0, 2], [0, 2], [2], [1, 2], [0, 2], [1, 2, 0], [2], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Son Clave\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [2], [0, 2, 1], [0, 2], [2], [2, 1], [0, 2], [2, 0, 1], [2], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Rumba\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [2, 1], [0, 2], [0, 2], [2], [2, 1], [0, 2], [2, 0], [2, 1], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Bossa Nova\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 3], [], [], [1, 3], [0], [], [1, 3], [], [0, 1], [3], [3], [1], [0], [], [0, 1], []], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Soukous\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 3], [], [1], [1, 3], [0], [], [1, 3], [1], [0], [], [3, 1], [1], [0], [], [0, 1, 3], [1]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Gahu\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 3], [], [1], [1], [0, 3], [], [1, 3, 0], [1], [0], [], [3, 1], [1], [0, 3], [], [0, 1], [1]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Shiko\" },\r\n\r\n    // Polyrhythms\r\n    { \"isHeader\": true, title: \"Polyrhythms\" },\r\n    { \"title\": \"3 over 4\", \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 100, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"constantBpmSlider\": 300, \"track\": [[1, 0, 0, 0], [0, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0]], \"timeSignature\": 4, \"instrumentKey\": \"basicdrumkit\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[1, 1, 0], [0, 0, 1], [1, 1, 1, 1], [0, 0, 0]], \"timeSignature\": 3, \"instrumentKey\": \"basicdrumkit\", \"title\": \"4 over 3\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [121, 359], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"set_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 122, \"track\": [[1, 0, 1, 0, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], \"timeSignature\": 6, \"instrumentKey\": \"basicdrumkit\", \"title\": \"2 over 3\" },\r\n\r\n    // ancient ones, but leave them for compaitibility\r\n    { \"isHeader\": true, title: \"Other\" },\r\n    { title: \"Balkan 1\", \"bpmRange\": [241, 400], \"accents\": [0, 2, 1, 0, 2, 1, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_bar\", \"interval\": 20, \"bpmStep\": 30 },\r\n    { title: \"Balkan 2\", \"bpmRange\": [293, 400], \"accents\": [0, 1, 2, 0, 1, 2, 1], \"instrument\": Instruments.TABLA, \"playMode\": \"by_bar\", \"interval\": 300, \"bpmStep\": 30 },\r\n    { title: \"Groove 1\", \"bpmRange\": [222, 262], \"accents\": [0, 1, 2, 1, 2, 0, 2, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_time\", \"interval\": 600, \"bpmStep\": 30 },\r\n    { title: \"Groove 2\", \"bpmRange\": [222, 400], \"accents\": [0, 1, 0, 1, 1, 1, 0, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_bar\", \"interval\": 20, \"bpmStep\": 30 },\r\n\r\n];\r\n\r\n\r\n\r\nexport const InitPreset_debug = {\r\n    \"bpmStep\": 50,\r\n    \"bpmRange\": [\r\n        300,\r\n        400\r\n    ],\r\n    // \"currentBpm\": 100,\r\n    \"playbackMode\": \"stop\",\r\n    \"playMode\": PlayModes.CONSTANT,\r\n\r\n    \"exerciseTime\": 60 * 30,    // 30 minutes\r\n    \"stepsNum\": 30,             // 1 minutes per step\r\n    \"byTimeInterval\": 5,\r\n    \"byBarInterval\": 2,\r\n    \"constantBpmSlider\": 300,\r\n    \"track\": [[1, 1, 0, 1], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]],\r\n    \"samples\": [{ instrumentKey: 'tabla', file: 'dha-slide.wav' }, { instrumentKey: 'electrokit', file: 'Kick.wav' }, { instrumentKey: 'metronome', file: 'tap.wav' }],\r\n    \"timeSignature\": 4,\r\n    \"instrumentKey\": Instruments.ELECTRO_KIT.key\r\n}\r\n\r\n\r\nexport const InitPreset = {\r\n    \"bpmStep\": 50,\r\n    \"bpmRange\": [\r\n        300,\r\n        400\r\n    ],\r\n    \"playbackMode\": \"stop\",\r\n    \"playMode\": \"constant\",\r\n    \"stepsNum\": 10,\r\n    \"exerciseTime\": 600,\r\n    \"bpmStepDropdownOpen\": false,\r\n    \"byTimeInterval\": 5,\r\n    \"byBarInterval\": 2,\r\n    \"constantBpmSlider\": 300,\r\n    \"track\": [\r\n        [\r\n            1,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            1,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ],\r\n        [\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            0\r\n        ],\r\n        [\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0\r\n        ],\r\n        [\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ]\r\n    ],\r\n    \"timeSignature\": 16,\r\n    \"samples\": [\r\n        {\r\n            \"file\": \"Kick.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"Snare.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"ClosedHat.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"OpenHat.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        }\r\n    ]\r\n}\r\n","const pl = {\r\n    /* App */\r\n    \"arrow up/down\": \"strzałki góra/dół\",\r\n    \"higher/lower BPM\": \"zwiększ/zmniejsz BPM\",\r\n    \"arrow left/right\": \"strzałki lewa/prawa\",\r\n    \"previous/next step according to plan\": \"poprzedni/następny krok wg planu\",\r\n    \"start/stop\": \"zacznij/zatrzymaj\",\r\n    \"stop\": \"zatrzymaj\",\r\n\r\n    /* SoundMachine */\r\n    \"Control\": \"Kontrola\",\r\n    \"Start / Stop\": \"Zacznij / Zatrzymaj\",\r\n    \"Volume\": \"Głośność\",\r\n    // \"Reverb\": \"Reverb\",\r\n    \"Instrument\": \"Instrument\",\r\n    \"Mode\": \"Tryb\",\r\n    \"Increase speed\": \"Zwiększaj prędkość\",\r\n    \"BPM range\": \"Zakres BPM\",\r\n    \"By bar\": \"Co kilka taktów\",\r\n    \"bar\": \"takt\",\r\n    \"By time\": \"Co jakiś czas\",\r\n    \"Set time\": \"W ustalonym czasie ćwiczeń\",\r\n    \"Constant\": \"Nie zwiększaj\",\r\n    \"Increase speed every\": \"Zwiększ prędkość co\",\r\n    \"Number of steps\": \"Ilość kroków\",\r\n    \"Up and Down\": \"Szybciej i wolniej\",\r\n    \"Shuffle\": \"Losowo\",\r\n    \"Exercise Time\": \"Czas ćwiczenia\",\r\n    \"Total time:\": \"Całkowity czas:\",\r\n    \"Please select\": \"Proszę wybrać\",\r\n    \"Select\": \"Wybierz\",\r\n    // \"BPM\": \"BPM\"\r\n\r\n    /* Planner */\r\n    \"Stop\": \"Zatrzymaj\",\r\n    \"Continue\": \"Kontynuuj\",\r\n    \"Repeat\": \"Od początku\",\r\n    \"After plan\": \"Po zakończeniu\",\r\n    \"Step order\": \"Kolejność\",\r\n\r\n    \"Plan progress\": \"Postęp planu\",\r\n    \"Step progress\": \"Postęp kroku\",\r\n\r\n    /* Presets */\r\n    \"Title\": \"Nazwa\",\r\n    \"Save current settings\": \"Zapisz bieżące ustawienia\",\r\n    \"Edit\": \"Edytuj\",\r\n    \"User presets\": \"Zapisane ustawienia\",\r\n    \"Presets\": \"Presety\",\r\n    \"Delete\": \"Usuń\",\r\n    \"Save Preset\": \"Zapisz Ustawienia\",\r\n    \"Cancel\": \"Anuluj\",\r\n    \"Are you sure?\": \"Czy aby na pewno?\",\r\n    \"Are you sure to delete current preset?\": \"Czy jesteś pewien, że chcesz usunąć to ustawienie?\",\r\n    \"Save\": \"Zapisz\",\r\n    \"Polyrhythms\": \"Polirytmy\",\r\n    \"Basic\": \"Podstawowe\",\r\n    \"Drum Patterns\": \"Motywy perkusyjne\",\r\n    \"Afro-Cuban\": \"Afro-Kubańskie\",\r\n    \"Other\": \"Inne\",\r\n\r\n    /* Import Dialog */\r\n    \"Import Presets\": \"Wczytaj Presety\",\r\n    \"I can't read this file\": \"Nie potrafię odczytać tego pliku\",\r\n    \"Import from file\": \"Importuj z pliku\",\r\n    \"Export to file\": \"Eksportuj do pliku\",\r\n    \"Confirm\": \"Potwierdź\",\r\n\r\n    /* TrackView */\r\n    \"Sequencer\": \"Sekwencer\",\r\n\r\n    /* Keyboard control panel */\r\n    \"Keyboard controls\": \"Skróty klawiszowe\",\r\n\r\n    /* Utils */\r\n\r\n    \"bars\": {\r\n        1: \"takt\",\r\n        2: \"takty\",\r\n        3: \"takty\",\r\n        4: \"takty\",\r\n        5: \"taktów\"\r\n    },\r\n\r\n    \"hours\": {\r\n        1: \"godzina\",\r\n        2: \"godziny\",\r\n        3: \"godziny\",\r\n        4: \"godziny\",\r\n        5: \"godzin\"\r\n    },\r\n\r\n    \"minutes\": {\r\n        1: \"minuta\",\r\n        2: \"minuty\",\r\n        3: \"minuty\",\r\n        4: \"minuty\",\r\n        5: \"minut\"\r\n    },\r\n\r\n    \"seconds\": {\r\n        1: \"sekunda\",\r\n        2: \"sekundy\",\r\n        3: \"sekundy\",\r\n        4: \"sekundy\",\r\n        5: \"sekund\"\r\n    },\r\n\r\n    \"hr\": \"godz.\",\r\n    \"hrs\": \"godz.\"\r\n}\r\n\r\nexport default pl;","import pl from '../localization/pl-pl'\r\n// import it from '../localization/it-it'\r\n\r\n// A bit rough attempt to i18n\r\nexport function GetNavigatorLanguage() {\r\n    return (navigator.languages && navigator.languages.length) ? navigator.languages[0] : navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\r\n}\r\n\r\n// set language for the app\r\nlet locale;\r\nswitch ( GetNavigatorLanguage() )\r\n{\r\n    case 'pl':\r\n    case 'pl-PL':\r\n    case 'pl-pl':\r\n        locale = pl;\r\n        break;\r\n    default:\r\n        locale = {};    // this will default to en\r\n        break;\r\n}\r\n\r\nfunction Tr(text) {\r\n    if (locale[text]) {\r\n        return locale[text];\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\nexport default Tr;\r\n\r\nexport function TrRange(number, label) {\r\n    if (!locale[label]) {\r\n        return label\r\n    }\r\n    else if (locale[label][number]) {\r\n        return locale[label][number]\r\n    }\r\n    else {\r\n        const l =  locale[label];\r\n        // If it's not specified then return last defined term\r\n        // Bit dodgy, but should do the job.\r\n        return l[Object.keys(l)[Object.keys(l).length -1]]\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","import { TrRange, GetNavigatorLanguage } from './Locale'\r\n\r\nconst Utils = {\r\n\r\n\ttoLocaleDateTime: function (dateTime) {\r\n\t\t// safety\r\n\t\tif (!dateTime) return '';\r\n\r\n\t\t// go for it\r\n\t\treturn new Date(dateTime).toLocaleString(GetNavigatorLanguage(), {\r\n\t\t\tdateStyle: \"long\",\r\n\t\t\ttimeStyle: \"short\"\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tpadTime: function (t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\r\n\tformatTime: function (timeInSeconds) {\r\n\t\tif (timeInSeconds) {\r\n\t\t\treturn Utils.formatTimeFull(timeInSeconds, 'h', 'm', 's', true);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTimeLong: function (timeInSeconds) {\r\n\t\tif (timeInSeconds) {\r\n\t\t\treturn Utils.formatTimeFull(timeInSeconds, 'hours', 'minutes', 'seconds', false);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTimeFull: function (timeInSeconds, hLabel, mLabel, sLabel, usePad) {\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tconst h = t.getHours();\r\n\t\tconst m = t.getMinutes();\r\n\t\tconst s = t.getSeconds();\r\n\r\n\t\tlet o = \"\";\r\n\r\n\t\tif (h !== 0) {\r\n\t\t\to += h + ' ' + TrRange(h, hLabel) + \" \";\r\n\t\t}\r\n\r\n\t\tif (m !== 0 || h !== 0) {\r\n\t\t\tif (h !== 0 && m !== 0) {\r\n\t\t\t\to += (usePad ? Utils.padTime(m) : m) + ' ' + TrRange(m, mLabel) + \" \";\r\n\t\t\t}\r\n\t\t\telse if (m !== 0) {\r\n\t\t\t\to += (usePad ? Utils.padTime(m) : m) + ' ' + TrRange(m, mLabel) + \" \";\r\n\t\t\t}\r\n\t\t\tif (s !== 0) {\r\n\t\t\t\to += \"\" + (usePad ? Utils.padTime(s) : s) + ' ' + TrRange(s, sLabel)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\to += t.getSeconds() + ' ' + TrRange(s, sLabel)\r\n\t\t}\r\n\t\treturn o.trim();\r\n\t},\r\n\r\n\tstorageAvailable: function (type) {\r\n\t\tvar storage;\r\n\t\ttry {\r\n\t\t\tstorage = window[type];\r\n\t\t\tvar x = '__storage_test__';\r\n\t\t\tstorage.setItem(x, x);\r\n\t\t\tstorage.removeItem(x);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\treturn e instanceof DOMException && (\r\n\t\t\t\t// everything except Firefox\r\n\t\t\t\te.code === 22 ||\r\n\t\t\t\t// Firefox\r\n\t\t\t\te.code === 1014 ||\r\n\t\t\t\t// test name field too, because code might not be present\r\n\t\t\t\t// everything except Firefox\r\n\t\t\t\te.name === 'QuotaExceededError' ||\r\n\t\t\t\t// Firefox\r\n\t\t\t\te.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n\t\t\t\t// acknowledge QuotaExceededError only if there's something already stored\r\n\t\t\t\t(storage && storage.length !== 0);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport Tone from 'tone'\r\nimport Tr, { TrRange } from './Locale'\r\nimport { Collapse, ButtonGroup, Button } from \"reactstrap\";\r\nimport SimplePanel from \"./SimplePanel\"\r\nimport { PlayModes } from \"./PlayModes\";\r\nimport { PlaybackModes } from \"./PlaybackModes\";\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport Utils from \"./Utils\";\r\nimport { InitPreset } from \"./PresetsLib\";\r\n\r\n// import Control from \"./Control\"\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tplaybackMode: this.props.playbackMode,\r\n\t\tplayMode: this.props.playMode,\r\n\t\tsteps: [],\r\n\t\tcurrentStepIdx: this.props.currentStepIdx,\r\n\t\tstepProgress: 0,\r\n\t\tplanProgress: 0,\r\n\t\tisUpDown: false,\r\n\t\tisPaused: false\r\n\t};\r\n\r\n\tmakePlan(s) {\r\n\t\tlet segments = [];\r\n\t\t// some helpful variables\r\n\t\tconst max = s.bpmRange[1];\r\n\t\tlet bpm = s.bpmRange[0];\r\n\r\n\t\tif (s.playMode === PlayModes.BY_BAR) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tduration: s.byBarInterval\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (s.playMode === PlayModes.BY_TIME) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tduration: s.byTimeInterval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === PlayModes.CONSTANT) {\r\n\t\t\tconst segment = {\r\n\t\t\t\tduration: Infinity,\r\n\t\t\t\tbpm: s.constantBpmSlider\r\n\t\t\t};\r\n\t\t\tsegments.push(segment);\r\n\t\t}\r\n\t\telse if (s.playMode === PlayModes.SET_TIME) {\r\n\r\n\t\t\tconst duration = s.exerciseTime / (s.stepsNum);\r\n\r\n\t\t\tlet bpm = s.bpmRange[0];\r\n\t\t\tconst bpmStep = (s.bpmRange[1] - s.bpmRange[0]) / (s.stepsNum - 1);\r\n\t\t\t// we compare against max+1 as there might be some fractions that will make last step ignored\r\n\t\t\twhile (bpm <= max + 1) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tduration: duration,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.state.isUpDown) {\r\n\t\t\tconst rev = segments.slice().reverse();\r\n\t\t\trev.shift()\r\n\t\t\tsegments = segments.concat(rev);\r\n\t\t}\r\n\t\tif (this.state.isRandom) {\r\n\t\t\tsegments = this.shuffle(segments.slice())\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\tshuffle(array) {\r\n\t\tvar currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n\t\t// While there remain elements to shuffle...\r\n\t\twhile (0 !== currentIndex) {\r\n\r\n\t\t\t// Pick a remaining element...\r\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\t\tcurrentIndex -= 1;\r\n\r\n\t\t\t// And swap it with the current element.\r\n\t\t\ttemporaryValue = array[currentIndex];\r\n\t\t\tarray[currentIndex] = array[randomIndex];\r\n\t\t\tarray[randomIndex] = temporaryValue;\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\r\n\tonPlanStep(idx) {\r\n\t\tthis.setState({ currentStepIdx: idx }, this.stepChanged)\r\n\t}\r\n\r\n\tupdateProgress() {\r\n\t\tconst step = this.getStep(this.state.currentStepIdx);\r\n\t\tconst stepProgress = (this.props.transport.ticks - step.startTimeTicks) / (Tone.Time(step.duration).toTicks());\r\n\t\tconst planProgress = this.props.transport.ticks / this.endTime;\r\n\t\tthis.setState({ stepProgress: this.clamp(stepProgress), planProgress: this.clamp(planProgress) })\r\n\t}\r\n\r\n\tclamp(value, min = 0, max = 1) {\r\n\t\treturn Math.min(Math.max(value, min), max);\r\n\t}\r\n\r\n\tsetPlan(config, stepIdx = 0) {\r\n\t\tconst plan = this.makePlan(config);\r\n\t\tthis.baseBpm = this.props.transport.bpm.value\r\n\r\n\t\tconst timeSignature = config.timeSignature;\r\n\t\tlet t = 0;\r\n\t\tthis.events = [];\r\n\t\tlet steps = []\r\n\t\tlet totalPlanTime = 0;\r\n\r\n\t\tfor (let i = 0; i < plan.length; i++) {\r\n\t\t\tconst s = plan[i];\r\n\t\t\tconst beatDuration = 60 / s.bpm;\r\n\r\n\t\t\t// create  step end event\r\n\t\t\tthis.props.transport.schedule((time) => this.onPlanStep(i), t)\r\n\r\n\t\t\tconst duration = config.playMode === PlayModes.BY_BAR ? beatDuration * timeSignature * s.duration : s.duration;\r\n\t\t\tconst durationInBars = config.playMode === PlayModes.BY_BAR ? s.duration : s.duration / (beatDuration * timeSignature);\r\n\r\n\t\t\tconst bar = {\r\n\t\t\t\tbpm: s.bpm,\r\n\t\t\t\tduration: duration,\r\n\t\t\t\tdurationBars: durationInBars.toFixed(1),\r\n\t\t\t\tdurationFormatted: Utils.formatTime(duration),\r\n\t\t\t\tstepIdx: i,\r\n\t\t\t\ttrack: config.track,\r\n\t\t\t\tplayMode: s.playMode,\r\n\t\t\t\tstartTimeTicks: Tone.Time(t).toTicks()\r\n\t\t\t};\r\n\r\n\r\n\t\t\tswitch (config.playMode) {\r\n\t\t\t\tcase PlayModes.BY_TIME:\r\n\t\t\t\tcase PlayModes.SET_TIME:\r\n\t\t\t\t\tt += this.calcTimeForBpm(s.duration, s.bpm);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase PlayModes.BY_BAR:\r\n\t\t\t\t\tt = s.duration * (i + 1) + \"m\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase PlayModes.CONSTANT:\r\n\t\t\t\t\tt = Infinity\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('Invalid playMode: ' + config.playMode)\r\n\t\t\t}\r\n\r\n\t\t\ttotalPlanTime += duration\r\n\t\t\tsteps.push(bar);\r\n\r\n\t\t}\r\n\r\n\t\tthis.props.transport.schedule((time) => this.onPlanEnd(time), t);\r\n\t\tthis.endTime = Tone.Time(t).toTicks();\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\ttotalPlanTime: totalPlanTime,\r\n\t\t\t\t// hmm this is shit as change in currentStepIdx doesn't move transport, this needs some thinking \r\n\t\t\t\tcurrentStepIdx: 0,\r\n\t\t\t\tsteps: steps,\r\n\t\t\t\tplayMode: config.playMode\r\n\t\t\t}),\r\n\t\t\tthis.stepChanged\r\n\t\t);\r\n\t}\r\n\r\n\tcalcTimeForBpm(seconds, bpm) {\r\n\t\treturn Tone.Time(seconds * bpm / this.baseBpm);\r\n\r\n\t}\r\n\r\n\tstartStep(stepIdx) {\r\n\t\tif (this.state.currentStepIdx !== stepIdx) {\r\n\t\t\tconst s = this.getStep(stepIdx);\r\n\t\t\tthis.props.transport.ticks = s.startTimeTicks;\r\n\t\t\tthis.setState({ currentStepIdx: stepIdx }, this.stepChanged)\r\n\t\t}\r\n\t}\r\n\r\n\tgetStep(idx) {\r\n\t\treturn this.state.steps[idx];\r\n\t}\r\n\r\n\tstepForward() {\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (this.state.currentStepIdx + 1 < this.state.steps.length) {\r\n\t\t\tthis.startStep(this.state.currentStepIdx + 1)\r\n\t\t}\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\tif (this.state.currentStepIdx - 1 >= 0) {\r\n\t\t\tthis.startStep(this.state.currentStepIdx - 1)\r\n\t\t}\r\n\t}\r\n\r\n\tonPlanEnd(time) {\r\n\t\tif (this.state.playbackMode === PlaybackModes.STOP) {\r\n\t\t\tthis.props.onPlanEnd();\r\n\t\t}\r\n\t\telse if (this.state.playbackMode === PlaybackModes.REPEAT) {\r\n\t\t\tthis.startStep(0)\r\n\t\t}\r\n\t}\r\n\tstepChanged() {\r\n\t\tconst bpm = this.getCurrentStep().bpm\r\n\t\tthis.props.onPlanStep(bpm)\r\n\t}\r\n\r\n\tgetCurrentStep() {\r\n\t\tif (this.state.currentStepIdx >= this.state.steps.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.steps[this.state.currentStepIdx];\r\n\t}\r\n\r\n\tonPlaybackChange(newPlaybackMode) {\r\n\t\tthis.setState({ playbackMode: newPlaybackMode }, this.props.onChange);\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStepIdx === b.stepIdx ? \"current-step\" : \"\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.startStep(b.stepIdx)}\r\n\t\t\t\tclassName={\"step clickable \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.stepIdx}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tb.duration !== Infinity\r\n\t\t\t\t\t\t? <>{b.durationFormatted} ({b.durationBars} {TrRange(Math.floor(b.durationBars), \"bars\")}) </>\r\n\t\t\t\t\t\t: ''}\r\n\t\t\t\t@ {b.bpm.toFixed(0)} bpm\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tonUpDownBtn() {\r\n\t\tthis.setState({ isUpDown: !this.state.isUpDown, isRandom: false }, this.props.onChange)\r\n\t}\r\n\r\n\tonRandomBtn() {\r\n\t\tthis.setState({ isRandom: !this.state.isRandom, isUpDown: false }, this.props.onChange)\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.playMode === PlayModes.CONSTANT) {\r\n\t\t\treturn <div />\r\n\t\t}\r\n\t\treturn (\r\n\r\n\t\t\t<SimplePanel title={\"Plan\"}>\r\n\t\t\t\t<div className=\"Planner\">\r\n\t\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t\t<div>{Tr(\"Step progress\")} <SimpleProgress value={this.state.stepProgress * 100} /></div>\r\n\t\t\t\t\t<div>{Tr(\"Plan progress\")} <SimpleProgress value={this.state.planProgress * 100} /></div>\r\n\r\n\t\t\t\t\t{/* <Button onClick={() => this.togglePause()}>\r\n\t\t\t\t\tisPaused:\r\n\t\t\t\t\t{this.state.isPaused === true ? \"paused\" : \"normal\"}\r\n\t\t\t\t</Button> */}\r\n\r\n\t\t\t\t\t<div style={{ height: '200px', overflow: 'auto' }}>\r\n\t\t\t\t\t\t{this.state.steps.map(bar => this.barRender(bar))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"Total time:\")} {Utils.formatTime(this.state.totalPlanTime)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT}>\r\n\t\t\t\t\t<div>{Tr(\"After plan\")}</div>\r\n\t\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.STOP)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.STOP}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Stop\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.CONTINUE)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.CONTINUE}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Continue\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.REPEAT)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.REPEAT}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Repeat\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t<div>{Tr(\"Step order\")}</div>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={(e) => this.onUpDownBtn(e)}\r\n\t\t\t\t\t\t\tactive={this.state.isUpDown}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Up and Down\")}\r\n\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\t// toggle\r\n\t\t\t\t\t\t\tonClick={() => this.onRandomBtn()}\r\n\t\t\t\t\t\t\tactive={this.state.isRandom}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Shuffle\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t</SimplePanel>\r\n\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplaybackMode: InitPreset.playbackMode,\r\n\tplayMode: InitPreset.playMode,\r\n\tonChange: () => { },\r\n\tonPlanStep: () => { },\r\n\tonPlanEnd: () => { },\r\n\tcurrentStepIdx: NaN\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\nimport Tr from \"./Locale\"\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tnestedModal: false,\r\n\t\tpreset: null,\r\n\t\tpresetId: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal,\r\n\t\t\tnestedModal: false\r\n\t\t}));\r\n\t}\r\n\r\n\ttoggleNested = () => {\r\n\t\tthis.setState({ nestedModal: !this.state.nestedModal })\r\n\t}\r\n\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, presetId, title) {\r\n\r\n\t\t// preset = {...presetId};\r\n\t\tif (presetId && title) {\r\n\t\t\tpreset.presetId = presetId;\r\n\t\t\tpreset.title = title;\r\n\r\n\t\t}\r\n\t\t// debugger;\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: presetId ? true : false\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t}\r\n\r\n\thandleDelete() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<Button color=\"warning\" onClick={this.toggleNested}>{Tr(\"Delete\")}</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ marginTop: '0.5em' }}\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\t{Tr(\"Save current settings\")}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>{Tr(\"Save Preset\")}</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tplaceholder={Tr(\"Title\")}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* <div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t<Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\r\n\t\t\t\t\t\t\t<ModalHeader toggle={this.toggleNested}>{Tr(\"Are you sure?\")}</ModalHeader>\r\n\t\t\t\t\t\t\t<ModalBody>{Tr(\"Are you sure to delete current preset?\")}</ModalBody>\r\n\t\t\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t\t\t<Button color=\"warning\" onClick={() => this.handleDelete()}>{Tr(\"Delete\")}</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={this.toggleNested}>{Tr(\"Cancel\")}</Button>\r\n\t\t\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Save\")}\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\t{Tr(\"Cancel\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function (preset) { },\r\n\tonSave: function (title, preset) { },\r\n\tonSaveBtn: function (e, idx) { }\r\n};","import React, { Component } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport Tr from \"./Locale\"\r\n\r\nclass ImportDialog extends Component {\r\n    state = {\r\n        modal: false,\r\n        showInvalidFileAlert: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    open() {\r\n        this.toggle();\r\n    }\r\n\r\n    close() {\r\n        this.setState({modal: false, showInvalidFileAlert: false})\r\n    }\r\n\r\n    onPresetsLoaded(e) {\r\n        try {\r\n            let json = JSON.parse(e.target.result);\r\n            this.setState({showInvalidFileAlert: false})\r\n            this.props.onJsonReady(json);                \r\n        }\r\n        catch (e) {\r\n            this.setState({showInvalidFileAlert: true})\r\n        }\r\n    }\r\n\r\n\r\n    onUploadBtn(e) {\r\n        var reader = new FileReader();\r\n        reader.onload = (reader) => this.onPresetsLoaded(reader);\r\n        reader.readAsText(e.target.files[0]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button\r\n                    style={{ marginTop: '0.5em' }}\r\n                    outline\r\n                    size=\"sm\"\r\n                    color=\"light\"\r\n                    onClick={this.props.onImportBtn}\r\n                >\r\n                    {Tr(\"Import from file\")}\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    className={this.props.className}\r\n                >\r\n                    <ModalHeader toggle={this.toggle}>{Tr(\"Import Presets\")}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Input type='file' onChange={(e) => this.onUploadBtn(e)} />\r\n                        <Alert hidden={!this.state.showInvalidFileAlert} color=\"danger\">\r\n                            {Tr(\"I can't read this file\")}\r\n                        </Alert>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={this.toggle}>\r\n                            {Tr(\"Cancel\")}\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default ImportDialog;\r\n\r\n\r\nImportDialog.defaultProps = {\r\n\tonJsonReady: function () { }\r\n};\r\n","\r\nconst ColorThemes = {\r\n    'ambient' : {\r\n        3: '#FF6355',\r\n        2: '#E1537F',\r\n        1: '#AC5696',\r\n        0: '#705A94'\r\n        // 1: '#40557B',\r\n        // 0: '#2F4858'\r\n    },\r\n    'blueish' : {\r\n        0: '#D1D2F9',\r\n        1: '#A3BCF9',\r\n        2: '#7796CB',\r\n        3: '#576490'\r\n    },\r\n    'rainbow': {\r\n        0: '#FF715B',\r\n        1: '#F9CB40',\r\n        2: '#BCED09',\r\n        3: '#2F52E0'\r\n    }\r\n}\r\n\r\nconst Config = {\r\n    TRACKS_NUMBER: 4,\r\n    MAXIMUM_TIMESIGNATURE: 24,\r\n    MIN_BPM: 10,\r\n    MAX_BPM: 1200,\r\n    PROGRESS_UPDATE_FPS: 30, // TODO: Set this according to device. higher values might cause slower devices to stutter\r\n    COLOR_PALETTE: ColorThemes['rainbow']\r\n}\r\nexport default Config;\r\n\r\n\r\n// old \r\n// 0: '#ff6355',\r\n// \t1: '#ff7155',\r\n// \t2: '#ff8055',\r\n// \t3: '#ff8e55',\r\n// \t4: '#ff9955',\r\n// \t5: '#ff9c55',\r\n// \t6: '#ffaa55'","import React, { Component } from \"react\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport EditPresetModal from \"./EditPresetModal\"\r\nimport ImportDialog from \"./ImportDialog\"\r\nimport { PresetsLib, InitPreset } from './PresetsLib'\r\nimport { Samples } from \"./Instruments\"\r\nimport Tr from './Locale'\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport Utils from \"./Utils\"\r\nimport Config from \"./Config\";\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: [],\r\n\t\tuserPresets: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst storedPresets = localStorage.getItem('userPresets');\r\n\t\tthis.state.userPresets = storedPresets ? JSON.parse(storedPresets) : [];\r\n\r\n\t\tthis.state.showDelete = this.state.userPresets ? Array(this.state.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.state.userPresets ? Array(this.state.userPresets.length).fill(false) : []\r\n\t}\r\n\r\n\t// Old version of app didn't use certain properties.\r\n\t// If user did store some ancient presets in cookie this will make it work again\r\n\tvalidatePreset(preset) {\r\n\r\n\t\tpreset.byBarInterval = preset.byBarInterval || preset.interval || InitPreset.byBarInterval;\r\n\t\tpreset.byTimeInterval = preset.byTimeInterval || preset.interval || InitPreset.byTimeInterval;\r\n\t\t// change from accents into track\r\n\t\tif (!preset.track) {\r\n\t\t\tlet track = [];\r\n\t\t\tpreset.accents.map(item => {\r\n\t\t\t\ttrack.push([item])\r\n\t\t\t\t// expected te return value in arrow function\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\tpreset.track = track;\r\n\t\t}\r\n\r\n\r\n\t\t// if no timeSignature then we're dealing with tracks made before polyrythm support. Fix them now.\r\n\t\tif (!preset.timeSignature) {\r\n\t\t\tconst timeSignature = preset.track.length\r\n\t\t\tpreset.timeSignature = timeSignature\r\n\r\n\t\t\tvar track = new Array(Config.TRACKS_NUMBER).fill(0).map(x => new Array(timeSignature).fill(0));\r\n\r\n\r\n\t\t\tfor (let beatIdx = 0; beatIdx < preset.track.length; beatIdx++) {\r\n\t\t\t\tconst beats = preset.track[beatIdx];\r\n\t\t\t\tfor (let beat = 0; beat < beats.length; beat++) {\r\n\t\t\t\t\ttrack[beats[beat]][beatIdx] = 1;\t// set volume to one, effectively enabling it\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpreset.track = track;\r\n\t\t}\r\n\r\n\t\tif (!preset.samples) {\r\n\t\t\tpreset.samples = this.convertInstrumentKeyToSamples(preset.instrumentKey)\r\n\t\t}\r\n\r\n\t\treturn preset;\r\n\t}\r\n\r\n\tconvertInstrumentKeyToSamples(instrumentKey) {\r\n\t\t// desired result: \"samples\": [{instrumentKey: 'tabla', file: 'dha-slide.wav' }, {instrumentKey: 'electrokit', file: 'Kick.wav'}, {instrumentKey: 'metronome', file: 'tap.wav'}],\r\n\t\tconst samples = Samples.filter(el => el.instrumentKey === instrumentKey);\r\n\t\treturn samples;\r\n\t}\r\n\r\n\tonPresetClick(preset) {\r\n\t\tthis.props.onSelect(this.validatePreset(preset));\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = { title: title, ...o }\r\n\r\n\t\t// if it's got presetId then overwrite preset with such id\r\n\t\t// if no presetId then create it here\r\n\t\tif (preset.presetId === undefined) {\r\n\t\t\tlet presetId = 1;\r\n\t\t\tif (this.state.userPresets.length > 0) {\r\n\t\t\t\t// find max and add 1\r\n\t\t\t\tpresetId = Math.max.apply(Math, this.state.userPresets.map(function (p) { return p.presetId; }));\r\n\t\t\t\tpresetId++\r\n\t\t\t}\r\n\r\n\t\t\t// assign id\r\n\t\t\tpreset.presetId = presetId;\r\n\t\t}\r\n\r\n\r\n\t\t// update date\r\n\t\tpreset.savedDtm = new Date();\r\n\r\n\t\tlet userPresets = this.state.userPresets;\r\n\r\n\t\t// if (!userPresets) {\r\n\t\t// \tuserPresets = [];\r\n\t\t// }\r\n\r\n\t\t// overwrite by presetId\r\n\t\tlet idx = this.state.userPresets.findIndex(o => o.presetId === preset.presetId);\r\n\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\r\n\t\tthis.saveInLocalStorage(userPresets);\r\n\t\t// window.localStorage.setItem(preset.title, preset);\r\n\t}\r\n\r\n\tsaveInLocalStorage(presets) {\r\n\t\tlocalStorage.setItem('userPresets', JSON.stringify(presets))\r\n\t\tthis.setState({ userPresets: presets })\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = { ...this.state };\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({ showDelete });\r\n\t}\r\n\r\n\tshowEditBtn(e, idx, presetId) {\r\n\t\tlet showEdit = { ...this.state };\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({ showEdit });\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({ showEdit: false })\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.state.userPresets.findIndex(o => o.presetId === preset.presetId);\r\n\t\tlet newPresets = this.state.userPresets.slice();\r\n\r\n\t\t// let idx = this.state.userPresets.indexOf(preset)\r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" + preset.title + \" has not been found in the store\")\r\n\t\t}\r\n\r\n\t\t// remove preset\r\n\t\tnewPresets.splice(idx, 1);\r\n\t\tthis.saveInLocalStorage(newPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\tvar p = this.props.getPreset();\r\n\r\n\t\tif (idx !== undefined) {\r\n\r\n\t\t\tthis.refs.presetEditor.edit(p, this.state.userPresets[idx].presetId, this.state.userPresets[idx].title)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.refs.presetEditor.edit(p)\r\n\t\t}\r\n\t}\r\n\r\n\tonImportBtn(e) {\r\n\t\tthis.refs.importDialog.open()\r\n\t}\r\n\r\n\trenderUserPresets(userPresets) {\r\n\t\tif (userPresets.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{Tr(\"User presets\")}:\r\n\t\t\t\t</Row>\r\n\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t<Row className=\"presetItem clickable\"\r\n\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col style={{ textAlign: 'left' }} >\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs=\"auto\" className=\"userPresetSavedDtm\">\r\n\t\t\t\t\t\t\t{Utils.toLocaleDateTime(item.savedDtm)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button size=\"sm\" outline\r\n\t\t\t\t\t\t\t\tonClick={(e) => this.onPresetEdit(e, idx)}>\r\n\t\t\t\t\t\t\t\t{Tr(\"Edit\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* // <div className='editBtn clickable' onClick={(e) =>}></div> */}\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonExport() {\r\n\r\n\t\tconst a = document.createElement('a');\r\n\t\tconst file = new Blob([JSON.stringify(this.state.userPresets)], { type: 'application/json' });\r\n\t\ta.href = URL.createObjectURL(file);\r\n\t\ta.download = 'presets.json';\r\n\t\ta.click();\r\n\t}\r\n\r\n\tonPresetsImport(presets) {\r\n\t\tpresets.forEach(p => {\r\n\t\t\tp = this.validatePreset(p);\r\n\t\t\t// unset presetId so we won't overwrite anything that's there already\r\n\t\t\tp.presetId = undefined\r\n\t\t\tthis.onSavePreset(p.title, p);\r\n\t\t})\r\n\t\t\r\n\t\tthis.refs.importDialog.close();\r\n\t\t// onSavePreset(preset.title, presets)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresetsJson = localStorage.getItem('userPresets');\r\n\t\tlet userPresets = userPresetsJson ? JSON.parse(userPresetsJson) : [];\r\n\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"PresetsManager\" title={Tr(\"Presets\")}>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{PresetsLib.map((item, idx) => {\r\n\t\t\t\t\t\tif (item.isHeader) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tclassName={\"presetHeader\"}\r\n\t\t\t\t\t\t\t\t\tkey={\"header_\" + idx}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{Tr(item.title)}:\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\t\t\tclassName={\"presetItem clickable\"}\r\n\t\t\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{this.renderUserPresets(userPresets)}\r\n\t\t\t\t\t{/* center button */}\r\n\t\t\t\t\t<Row style={{ justifyContent: 'center' }}>\r\n\t\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e, idx) => this.onPresetEdit(e, idx)} onSave={(title, preset) => this.onSavePreset(title, preset)} />\r\n\t\t\t\t\t\t<ImportDialog ref='importDialog' onImportBtn={() => this.onImportBtn()} onJsonReady={(presets) => this.onPresetsImport(presets)}/>\r\n\t\t\t\t\t\t<Button style={{ marginTop: '0.5em' }} outline  size=\"sm\" color=\"light\" onClick={() => this.onExport()}>{Tr(\"Export to file\")}</Button>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function (preset) { }\r\n};\r\n","import React, { Component } from 'react';\r\n// import { accentColor } from './AccentTypes';\r\nimport { InitPreset } from './PresetsLib'\r\nimport Config from './Config';\r\n\r\nclass SvgClock extends Component {\r\n    state = {\r\n        track: this.props.track,\r\n        timeSignature: this.props.timeSignature\r\n    }\r\n    colorEmpty = \"#333\";\r\n    strokeColor = \"#444\";\r\n    strokeWidth = \"0.001em\"\r\n\r\n    setAccents(track) {\r\n        this.setState({ track: track })\r\n        // this.drawSvg()\r\n    }\r\n\r\n    getCoordinatesForPercent(percent, r = 1) {\r\n        const x = r * Math.cos(2 * Math.PI * percent);\r\n        const y = r * Math.sin(2 * Math.PI * percent);\r\n        return [x, y];\r\n    }\r\n\r\n    drawSlices(radius, trackIdx) {\r\n        // Drawing pie charts by David Gilbertson, taken from https://medium.com/hackernoon/a-simple-pie-chart-in-svg-dbdd653b6936\r\n        // if (this.props.track[trackIdx] === undefined) {\r\n        //     // debugger\r\n        // }\r\n        let pctStep = 1 / this.props.track[trackIdx].length;\r\n        let slices = [];\r\n        // let step = pctStep;\r\n        this.props.track[trackIdx].forEach((volume, subIdx) => {\r\n            slices.push({ percent: pctStep, color: volume > 0 ? Config.COLOR_PALETTE[trackIdx] : this.colorEmpty });\r\n\r\n            // if (trackColumn > 0)\r\n\r\n            // step += pctStep;\r\n        })\r\n        let cumulativePercent = 0;\r\n\r\n        let paths = [];\r\n        slices.forEach((slice, idx) => {\r\n            // destructuring assignment sets the two variables at once\r\n            const [startX, startY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n            // each slice starts where the last slice ended, so keep a cumulative percent\r\n            cumulativePercent += slice.percent;\r\n\r\n            const [endX, endY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n            // if the slice is more than 50%, take the large arc (the long way around)\r\n            const largeArcFlag = slice.percent > .5 ? 1 : 0;\r\n\r\n            // create an array and join it just for code readability\r\n            const pathData = [\r\n                `M ${startX} ${startY}`, // Move\r\n                `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY}`, // Arc\r\n                `L 0 0`, // Line\r\n            ].join(' ');\r\n\r\n            // create a <path> and append it to the <svg> element\r\n            paths.push(\r\n                <path key={\"pie_\" + idx} d={pathData} fill={slice.color} stroke={this.strokeColor} strokeWidth={this.strokeWidth} />\r\n            )\r\n        });\r\n        return paths\r\n    }\r\n\r\n    // OLD_drawSlices(radius, filter) {\r\n    //     // Drawing pie charts by David Gilbertson, taken from https://medium.com/hackernoon/a-simple-pie-chart-in-svg-dbdd653b6936\r\n    //     let pctStep = 1 / this.props.track.length;\r\n    //     let slices = [];\r\n    //     // let step = pctStep;\r\n    //     this.props.track.forEach(trackColumn => {\r\n    //         const idx = trackColumn.indexOf(filter);\r\n    //         slices.push({ percent: pctStep, color: idx >= 0 ? accentColor[filter] : this.colorEmpty });\r\n    //         // step += pctStep;\r\n    //     })\r\n    //     let cumulativePercent = 0;\r\n\r\n    //     let paths = [];\r\n    //     slices.forEach((slice, idx) => {\r\n    //         // destructuring assignment sets the two variables at once\r\n    //         const [startX, startY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n    //         // each slice starts where the last slice ended, so keep a cumulative percent\r\n    //         cumulativePercent += slice.percent;\r\n\r\n    //         const [endX, endY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n    //         // if the slice is more than 50%, take the large arc (the long way around)\r\n    //         const largeArcFlag = slice.percent > .5 ? 1 : 0;\r\n\r\n    //         // create an array and join it just for code readability\r\n    //         const pathData = [\r\n    //             `M ${startX} ${startY}`, // Move\r\n    //             `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY}`, // Arc\r\n    //             `L 0 0`, // Line\r\n    //         ].join(' ');\r\n\r\n    //         // create a <path> and append it to the <svg> element\r\n    //         paths.push(\r\n    //             <path key={\"pie_\" + idx} d={pathData} fill={slice.color} stroke={this.strokeColor} strokeWidth={this.strokeWidth}  />\r\n    //         )\r\n    //     });\r\n    //     return paths\r\n    // }\r\n\r\n    drawText() {\r\n        let labels = [];\r\n        const pctStep = 1 / this.props.timeSignature;\r\n        let cumulativePercent = 0;\r\n\r\n        for (let i = 0; i < this.props.timeSignature; i++) {\r\n\r\n            let [x, y] = this.getCoordinatesForPercent(cumulativePercent, 0.9);\r\n            // tweak position of labels\r\n            x -= 0.06\r\n            labels.push(\r\n                <text x={x} y={y} key={\"label_\" + i} textAnchor=\"middle\" transform={\"rotate(90, \" + x + \", \" + y + \")\"} className=\"svgText\">{i + 1}</text>\r\n            )\r\n            cumulativePercent += pctStep\r\n        }\r\n\r\n        return <g>{labels}</g>;\r\n    }\r\n\r\n    setProgress(progress) {\r\n        this.line.style.transform = 'rotate(' + progress * 360 + 'deg)'\r\n    }\r\n    render() {\r\n        let radiusIncrement = 0.5 / Config.TRACKS_NUMBER;\r\n\r\n        let circles = [];\r\n\r\n        for (let i = 0; i < this.props.track.length; i++) {\r\n            // main circles\r\n            circles.push(this.drawSlices(0.8 - radiusIncrement * i, i));\r\n        }\r\n        // inner gray circle\r\n        circles.push(\r\n            <circle key=\"innerCircle\" cx=\"0\" cy=\"0\" r={0.8 - radiusIncrement * Config.TRACKS_NUMBER} fill={this.colorEmpty} stroke={this.strokeColor} strokeWidth={this.strokeWidth} />\r\n        )\r\n\r\n        return (\r\n            <div ref={el => (this.container = el)} className=\"visClockContainer\">\r\n                <svg viewBox=\"-1 -1 2 2\" ref={el => (this.svg = el)}>\r\n                    <g style={{ transform: 'rotate(-90deg)' }}>\r\n                        {\r\n                            circles\r\n                        }\r\n                        {this.drawText()}\r\n                        <line ref={el => (this.line = el)} strokeLinecap=\"round\" x1=\"0\" y1=\"0\" x2=\".7\" y2=\"0\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"0.1\" style={{ transform: 'rotate(' + this.props.partProgress * 360 + 'deg)' }} />\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SvgClock;\r\n\r\nSvgClock.defaultProps = {\r\n    track: InitPreset.track,\r\n    timeSignature: InitPreset.timeSignature\r\n}","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport { Badge, Button } from 'reactstrap'\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n    state = {\r\n        value: this.props.defaultValue,\r\n        regression: undefined\r\n    };\r\n\r\n    constructor(props) {\r\n        // TODO:  \r\n        // currently it works only for min=1 only\r\n        super(props);\r\n\r\n        const d = [[0, this.props.min], [100, this.props.max]];\r\n\r\n        this.state.regression = regression.exponential(d, { precision: 10 })\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n\r\n        this.state.btnStep = props.btnStep || 1;\r\n    }\r\n\r\n    onMinusClick = () => {\r\n        const newValue = this.state.value - this.state.btnStep;\r\n        this.setState({ value: newValue }, this.props.onChange(newValue))\r\n    }\r\n\r\n    onPlusClick = () => {\r\n        const newValue = this.state.value + this.state.btnStep;\r\n        this.setState({ value: newValue }, this.props.onChange(newValue))\r\n    }\r\n\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n\r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[this.findX(this.props.marksAt[i])] = this.props.marksAt[i];\r\n        }\r\n    }\r\n\r\n    onChange(v) {\r\n        const value = Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({ value: value })\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y) / this.state.regression.equation[1];\r\n    }\r\n\r\n    setValue(v) {\r\n        this.setState({ value: v })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onMinusClick}>-</Button>\r\n                    <Badge color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n                    </Badge>\r\n                    <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onPlusClick}>+</Button>\r\n                </div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{ height: '45px' }} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks} />\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function (v) { return v; },\r\n    markFormatter: function (v) { return v; },\r\n    marksAt: []\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport Tr from \"../Locale\"\r\n\r\nclass RangeEditInPlace extends Component {\r\n    state = {\r\n        modal: false,\r\n        value: this.props.value,\r\n        showInvalidRange: false\r\n    };\r\n\r\n    open() {\r\n        this.setState({ modal: true, value: this.props.value, showInvalidRange: false })\r\n    }\r\n\r\n    close() {\r\n        this.setState({ modal: false })\r\n    }\r\n\r\n    onOk() {\r\n        if (this.state.value.min >= this.state.value.max) {\r\n            this.setState({ showInvalidRange: true })\r\n            return\r\n        }\r\n        this.props.onChange(this.state.value)\r\n        this.close();\r\n\r\n    }\r\n\r\n    onMinValueChange(e) {\r\n        let v = Number(e.target.value);\r\n\r\n        let value = this.state.value;\r\n        value.min = v;\r\n        this.setState({ value: value })\r\n    }\r\n\r\n    onMaxValueChange(e) {\r\n        let v = Number(e.target.value);\r\n\r\n        let value = this.state.value;\r\n        value.max = v;\r\n        this.setState({ value: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    className={this.props.className}\r\n                >\r\n                    <ModalBody>\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\">{Tr(\"From\")}</InputGroupAddon>\r\n                            <Input min={this.props.min} max={this.props.max} type=\"number\" value={this.state.value.min} onChange={(e) => this.onMinValueChange(e)} step=\"1\" />\r\n                        </InputGroup>\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\">{Tr(\"To\")}</InputGroupAddon>\r\n                            <Input min={this.props.min} max={this.props.max} type=\"number\" value={this.state.value.max} onChange={(e) => this.onMaxValueChange(e)} step=\"1\" />\r\n                        </InputGroup>\r\n                        <Alert hidden={!this.state.showInvalidRange} color=\"danger\">\r\n                            {Tr(\"Invalid range!\")}\r\n                        </Alert>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={() => this.onOk()}>\r\n                            {Tr(\"OK\")}\r\n                        </Button>\r\n\r\n                        <Button color=\"secondary\" onClick={() => this.close()}>\r\n                            {Tr(\"Cancel\")}\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default RangeEditInPlace;\r\n\r\nRangeEditInPlace.defaultProps = {\r\n    onChange: function () { },\r\n    title: ''\r\n};\r\n","import React from \"react\";\r\nimport { Range } from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\nimport RangeEditInPlace from \"./RangeEditInPlace\";\r\n\r\nclass AdvancedRange extends Range {\r\n\tonBadgeClick() {\r\n\t\tthis.refs.editor.open();\r\n\t}\r\n\r\n\tonEdit(v) {\r\n\t\tthis.setState({ bounds: [v.min, v.max] }, () => this.props.onAfterChange(this.state.bounds))\r\n\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={this.props.editInPlace ? () => this.onBadgeClick() : function () { }}\r\n\t\t\t\t\t\tclassName={this.props.editInPlace ? \"clickable\" : ''}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bounds[0]} - {this.state.bounds[1]}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t\t<RangeEditInPlace\r\n\t\t\t\t\t\tref={\"editor\"}\r\n\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t\tvalue={{ min: this.state.bounds[0], max: this.state.bounds[1] }}\r\n\t\t\t\t\t\tmin={this.props.min}\r\n\t\t\t\t\t\tmax={this.props.max}\r\n\t\t\t\t\t\tonChange={(v) => this.onEdit(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t{super.render()}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AdvancedRange;\r\n\r\n// inherit props from base class\r\nAdvancedRange.defaultProps = Object.assign({}, Range.defaultProps, {\r\n\teditInPlace: false,\r\n\ttitle: ''\r\n});","import React, { Component } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport Tr from \"./../Locale\"\r\n\r\nclass EditInPlace extends Component {\r\n    state = {\r\n        modal: false,\r\n        value: this.props.value\r\n    };\r\n\r\n    open() {\r\n        this.setState({modal: true, value: this.props.value})\r\n    }\r\n\r\n    close() {\r\n        this.setState({ modal: false })\r\n    }\r\n\r\n    onOk() {\r\n        this.props.onChange(this.state.value)\r\n        this.close();\r\n    }\r\n\r\n    onValueChange(e, v) {\r\n        let val = Number(e.target.value);\r\n        this.setState({ value: val })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    className={this.props.className}\r\n                >\r\n                    <ModalBody>\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\">{this.props.title}</InputGroupAddon>\r\n                            <Input min={this.props.min} max={this.props.max} type=\"number\" value={this.state.value} onChange={(e) => this.onValueChange(e)} step=\"1\" />\r\n                        </InputGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={() => this.onOk()}>\r\n                            {Tr(\"OK\")}\r\n                        </Button>\r\n\r\n                        <Button color=\"secondary\" onClick={() => this.close()}>\r\n                            {Tr(\"Cancel\")}\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default EditInPlace;\r\n\r\n\r\nEditInPlace.defaultProps = {\r\n    onChange: function () { },\r\n    title: ''\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport EditInPlace from \"./EditInPlace\"\r\n\r\nclass AdvancedSlider extends Slider {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state.btnStep = props.btnStep || 1;\r\n\t}\r\n\tonMinusClick = () => {\r\n\t\tconst newValue = this.state.value - this.state.btnStep;\r\n\t\tthis.setState({ value: newValue }, this.props.onChange(newValue))\r\n\t}\r\n\r\n\tonPlusClick = () => {\r\n\t\tconst newValue = this.state.value + this.state.btnStep;\r\n\t\tthis.setState({ value: newValue }, this.props.onChange(newValue))\r\n\t}\r\n\r\n\tonEdit(value) {\r\n\t\tif (value >= this.props.min && value <= this.props.max) {\r\n\t\t\tthis.setState({ value: value }, this.props.onChange(value));\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"advancedSlider\">\r\n\t\t\t\t\t{this.props.disableBtns === true ? '' : <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onMinusClick}>-</Button>}\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tonClick={this.props.editInPlace ? (e) => this.onBadgeClick(e) : function(){}}\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tclassName={this.props.editInPlace? \"clickable\" : ''}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t\t{/* {this.props.badgeFormatter(this.state.value)} */}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t\t{this.props.editInPlace ? <EditInPlace ref={\"editor\"} title={this.props.title} value={this.state.value} min={this.props.min} max={this.props.max} onChange={(v) => this.onEdit(v)} /> : ''}\r\n\t\t\t\t\t{this.props.disableBtns === true ? '' : <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onPlusClick}>+</Button>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick(e) {\r\n\t\tif (this.refs.editor) {\r\n\t\t\tthis.refs.editor.open();\r\n\t\t}\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n\r\n// inherit props from base class\r\nAdvancedSlider.defaultProps = Object.assign({}, Slider.defaultProps, {\r\n\teditInPlace: false,\r\n\ttitle: ''\r\n});","import React, { Component } from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass DiscreteSlider extends Component {\r\n\r\n    state = {\r\n        value: undefined,\r\n        innerValue: 0\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        // helpful to display marks properly (need to be an object)\r\n        this.state.innerMarks = {};\r\n        Object.values(this.props.marks).map((el, idx)  => {\r\n            this.state.innerMarks[idx] = {label: el.label};\r\n            return true;\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // TODO: apply this componentDidUpdate to remaining custom sliders\r\n        var value = this.props.value;\r\n        var theValue = value !== undefined ? value : prevState.value;\r\n        var innerValue = Object.keys(this.props.marks).indexOf(theValue+ '');\r\n        \r\n        if ( innerValue !== prevState.innerValue) {\r\n            this.setState({innerValue: innerValue, value: value});\r\n        }\r\n    }\r\n\r\n    onSliderChange(sliderValue) {\r\n        const value = Object.values(this.props.marks)[sliderValue].value;\r\n        this.setState({ innerValue: sliderValue, value: value })\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Badge\r\n                        color=\"light\"\r\n                        className=\"d-i\"\r\n                    >\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n                    </Badge>\r\n                </div>\r\n                {/* render it slightly narrower so we fit marks which usually falls outside the container */}\r\n                <div style={{ height: \"3.5em\", width: '95%', margin: 'auto', whiteSpace: 'nowrap' }}>\r\n                    <Slider ref=\"slider\"\r\n                        included={false}\r\n                        value={this.state.innerValue}\r\n                        style={{ height: '3.5em' }}\r\n                        onChange={(v) => this.onSliderChange(v)}\r\n                        min={0}\r\n                        max={Object.keys(this.props.marks).length - 1}\r\n                        step={1}\r\n                        marks={this.state.innerMarks} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default DiscreteSlider;\r\n\r\n\r\nDiscreteSlider.defaultProps = {\r\n    badgeFormatter: function (v) { return v; },\r\n    markFormatter: function (v) { return v; },\r\n    defaultValue: 0\r\n}","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {\r\n\tButtonGroup,\r\n\tButton,\r\n\tCollapse,\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownItem,\r\n\tDropdownMenu\r\n} from \"reactstrap\";\r\nimport { PlayModes } from \"./PlayModes\";\r\nimport GeometricSlider from \"./Sliders/GeometricSlider\";\r\nimport AdvancedRange from \"./Sliders/AdvancedRange\"\r\nimport AdvancedSlider from \"./Sliders/AdvancedSlider\"\r\nimport DiscreteSlider from \"./Sliders/DiscreteSlider\"\r\nimport Utils from \"./Utils\";\r\nimport { InitPreset } from \"./PresetsLib\";\r\nimport Tr, { TrRange } from \"./Locale\"\r\nimport Config from \"./Config\";\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tbpmStep: this.props.bpmStep,\r\n\t\tbpmRange: this.props.bpmRange,\r\n\t\t// currentBpm: this.props.bpmRange[0],\r\n\t\tplaybackMode: this.props.playbackMode,\r\n\t\tplayMode: this.props.playMode,\r\n\t\tstepsNum: this.props.stepsNum,\r\n\t\texerciseTime: this.props.exerciseTime,\r\n\t\tbpmStepDropdownOpen: false,\r\n\t\tbyTimeInterval: this.props.byTimeInterval,\r\n\t\tbyBarInterval: this.props.byBarInterval,\r\n\t\tconstantBpmSlider: this.props.constantBpmSlider\r\n\t}\r\n\r\n\tonAfterChange(e) {\r\n\t\tthis.props.onChange()\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n\r\n\t\tlet newState = {...this.state};\r\n\r\n\t\t// maintain current bpm when changing to CONSTANT playmode\r\n\t\tif (newMode === PlayModes.CONSTANT && newMode !== this.state.playMode) {\r\n\t\t\tnewState.constantBpmSlider =  this.props.transport.bpm.value;\r\n\t\t}\r\n\t\tnewState.playMode = newMode;\r\n\t\tthis.setState(newState, this.onAfterChange);\r\n\t}\r\n\r\n\r\n\r\n\tonBpmRangeChange(bpmRange) {\r\n\t\tthis.setState({ bpmRange: bpmRange }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBpmSliderChange = (value) => {\r\n\t\tthis.setState({ constantBpmSlider: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tsetValue(o) {\r\n\t\tthis.refs.byBarSlider.setValue(o.byBarInterval || InitPreset.byBarInterval)\r\n\t\tthis.refs.byTimeSlider.setValue(o.byTimeInterval || InitPreset.byTimeInterval)\r\n\t\t// this.refs.exerciseTimeSlider.setValue(o.exerciseTime || InitPreset.exerciseTime);\r\n\r\n\t\tthis.refs.bpmRange.setState({ bounds: o.bpmRange })\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tplayMode: o.playMode,\r\n\t\t\t\tplaybackMode: o.playbackMode || this.state.playbackMode,\r\n\t\t\t\tbpmStep: o.bpmStep,\r\n\t\t\t\texerciseTime: o.exerciseTime || this.state.exerciseTime,\r\n\t\t\t\tstepsNum: o.stepsNum || this.state.stepsNum,\r\n\t\t\t\tbyBarInterval: o.byBarInterval,// || this.state.byBarInterval,\r\n\t\t\t\tbyTimeInterval: o.byTimeInterval, //|| this.state.byTimeInterval,\r\n\t\t\t\tbpmRange: o.bpmRange,\r\n\r\n\t\t\t\tconstantBpmSlider: o.constantBpmSlider || this.state.constantBpmSlider\r\n\r\n\t\t\t},\r\n\t\t\tthis.onAfterChange\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({ byTimeInterval: v, interval: v }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({ byBarInterval: v, interval: v }, this.onAfterChange);\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\treturn barsNum + \" \" + TrRange(barsNum, \"bars\");\r\n\t}\r\n\r\n\trenderIncreaseBpmDropdown() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ButtonDropdown\r\n\t\t\t\t\tstyle={{ margin: \"0px 5px\" }}\r\n\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\ttoggle={() => this.onBpmStepChange()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t{[1,2,3,5,10,15,20,30,50,100].map(el => {\r\n\t\t\t\t\t\t\treturn <DropdownItem key={\"bpm_\"+el} onClick={() => {this.onBpmStepSelect(el)}}>{el}</DropdownItem>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</ButtonDropdown>\r\n\t\t\t\tbpm\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonStepsSliderChange(value) {\r\n\t\tthis.setState({ stepsNum: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tonExerciseTimeSliderChange(value) {\r\n\t\tthis.setState({ exerciseTime: value }, this.onAfterChange);\r\n\t}\r\n\r\n\r\n\r\n\trenderTimeSlider() {\r\n\t\tconst marks = {}\r\n\t\tconst mArr = [300,600,900,1200,1800,3600,7200,10800]\r\n\r\n\t\tmArr.map(el => {\r\n\t\t\tmarks[el] = {value: el, label: Utils.formatTime(el)};\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"Exercise Time\")}\r\n\t\t\t<DiscreteSlider\r\n\t\t\t\tref=\"exerciseTimeSlider\"\r\n\t\t\t\tbadgeFormatter={Utils.formatTimeLong}\r\n\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\tmarks={marks}\r\n\t\t\t\tvalue={this.state.exerciseTime}\r\n\t\t\t\tonChange={(value) => this.onExerciseTimeSliderChange(value)}\r\n\t\t\t/>\r\n\r\n\t\t</div>);\r\n\t}\r\n\r\n\trenderStepsSlider() {\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"Number of steps\")}\r\n\t\t\t<AdvancedSlider\r\n\t\t\t\tref=\"stepsSlider\"\r\n\t\t\t\tmin={2}\r\n\t\t\t\tincluded={false}\r\n\t\t\t\tmax={100}\r\n\t\t\t\tmarks={{ 1: '1', 5: '5', 10: '10', 15: '15', 20: '20', 30: '30', 40: '40', 50: '50', 60: '60', 70: '70', 80: '80', 90: '90', 100: '100' }}\r\n\t\t\t\tvalue={this.state.stepsNum}\r\n\t\t\t\tonChange={(value) => this.onStepsSliderChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\trenderSpeedRange() {\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"BPM range\")}\r\n\t\t\t<AdvancedRange\r\n\t\t\t\tref=\"bpmRange\"\r\n\t\t\t\tmin={Config.MIN_BPM}\r\n\t\t\t\tmax={Config.MAX_BPM}\r\n\t\t\t\tdefaultValue={[\r\n\t\t\t\t\tthis.state.bpmRange[0],\r\n\t\t\t\t\tthis.state.bpmRange[1]\r\n\t\t\t\t]}\r\n\t\t\t\teditInPlace={true}\r\n\t\t\t\tpushable={true}\r\n\t\t\t\tonAfterChange={(value) => this.onBpmRangeChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\" width=\"300px\">\r\n\t\t\t\t<h6>{Tr('Increase speed')}</h6>\r\n\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.SET_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.SET_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"Set time\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"By bar\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"By time\")}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.CONSTANT)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.CONSTANT}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"Constant\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\r\n\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT}>\r\n\t\t\t\t\t{this.renderSpeedRange()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.SET_TIME}>\r\n\t\t\t\t\t{this.renderTimeSlider()}\r\n\t\t\t\t\t{this.renderStepsSlider()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.BY_BAR}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"Increase speed every\")}\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byBarSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byBarInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byBarFormatter}\r\n\t\t\t\t\t\t\tonChange={v => this.onBarIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={301}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 20, 50, 100, 300]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.BY_TIME}>\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t{Tr(\"Increase speed every\")}\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byTimeSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byTimeInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={Utils.formatTimeLong}\r\n\t\t\t\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\t\t\t\tonChange={v => this.onTimeIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={1200}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 30, 60, 120, 240, 600, 1200]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT && this.state.playMode !== PlayModes.SET_TIME}>\r\n\t\t\t\t\t{this.renderIncreaseBpmDropdown()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.CONSTANT}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"BPM\")}\r\n\r\n\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\tref=\"constantBpmSlider\"\r\n\t\t\t\t\t\t\ttitle= {Tr(\"BPM\")}\r\n\t\t\t\t\t\t\tincluded={false}\r\n\t\t\t\t\t\t\teditInPlace={true}\r\n\t\t\t\t\t\t\tmin={Config.MIN_BPM}\r\n\t\t\t\t\t\t\tbtnStep={10}\r\n\t\t\t\t\t\t\tmax={Config.MAX_BPM}\r\n\t\t\t\t\t\t\tmarks={{ 30: '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\tvalue={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\tonChange={this.onBpmSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tplayMode: InitPreset.playMode,\r\n\tplaybackMode: InitPreset.playbackMode,\r\n\tinterval: InitPreset.interval,\r\n\tbpmStep: InitPreset.bpmStep,\r\n\tbpmRange: InitPreset.bpmRange,\r\n\tbyTimeInterval: InitPreset.byTimeInterval,\r\n\tbyBarInterval: InitPreset.byBarInterval,\r\n\tstepsNum: InitPreset.stepsNum,\r\n\texerciseTime: InitPreset.exerciseTime,\r\n\tconstantBpmSlider: InitPreset.constantBpmSlider,\r\n\t// currentBpm: InitPreset.bpmRange[0],\r\n\tonAfterChange: null\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Badge, ButtonGroup, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Samples, InstrumentsByKey } from '../Instruments'\r\nimport { InitPreset } from '../PresetsLib'\r\nimport Tr from './../Locale'\r\nimport Config from \"../Config\";\r\nclass TrackRow extends Component {\r\n\r\n    state = {\r\n        activeIdx: null,\r\n        label: Tr(\"Please select\")\r\n\r\n        // instrument: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        // load initial sample defined in InitPreset\r\n        if (!InitPreset.samples[this.props.idx]) {\r\n            return\r\n        }\r\n\r\n        // TODO: I think I can find better place for this code. It's doing the job though and I'm lazy so...\r\n        const instrument = InstrumentsByKey[InitPreset.samples[this.props.idx].instrumentKey];\r\n        const file = InitPreset.samples[this.props.idx].file;\r\n        this.onSampleSelect(instrument.key, file);\r\n    }\r\n\r\n    addBeat() {\r\n        if (this.props.trackRow.length < Config.MAXIMUM_TIMESIGNATURE) {\r\n            this.props.onMeasureChange(this.props.trackRow.length + 1)\r\n        }\r\n    }\r\n\r\n    removeBeat() {\r\n        if (this.props.trackRow.length > 1) {\r\n            this.props.onMeasureChange(this.props.trackRow.length - 1)\r\n        }\r\n    }\r\n\r\n    onSampleChange() {\r\n        this.setState(prevState => ({\r\n            sampleDropdownOpen: !prevState.sampleDropdownOpen\r\n        }));\r\n\r\n    }\r\n\r\n    onSampleSelect(instrumentKey, filename) {\r\n        this.props.soundLibrary.use(this.props.idx, instrumentKey, filename)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"trackRow\">\r\n                <div className=\"label\">\r\n                    <ButtonDropdown\r\n                        isOpen={this.state.sampleDropdownOpen}\r\n                        toggle={() => this.onSampleChange()}\r\n                    >\r\n                        <DropdownToggle\r\n                            caret\r\n                            size=\"sm\"\r\n                            outline\r\n                            // className='w-100'\r\n                            style={{ width: '6rem' }}\r\n                            color=\"light\"\r\n                            ref=\"dropdown\"\r\n                        >\r\n                            {this.props.soundLibrary.playersArr[this.props.idx] ? this.props.soundLibrary.playersArr[this.props.idx].fullLabel : Tr('Select')}\r\n                            {/* {(this.props.instrument && this.props.instrument.file) || 'Please select'} */}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            {\r\n                                Samples.map((sample, idx) => {\r\n                                    return (\r\n                                        <DropdownItem key={'row_' + idx} onClick={() => this.onSampleSelect(sample.instrumentKey, sample.file)}>\r\n                                            {InstrumentsByKey[sample.instrumentKey].label} - {sample.label}\r\n                                        </DropdownItem>);\r\n                                })\r\n                            }\r\n                        </DropdownMenu>\r\n                    </ButtonDropdown>\r\n\r\n                    <Badge color=\"outline\" style={{ alignSelf: 'center', width: '1.2rem'}}>{ this.props.trackRow.length }</Badge>\r\n                    {/* <Badge color=\"outline\">{this.props.trackRow.length != this.props.timeSignature ? this.props.trackRow.length : ''}</Badge> */}\r\n                    \r\n                    <ButtonGroup size=\"xs\" vertical>\r\n                        <Button onClick={() => this.addBeat()}>+</Button>\r\n                        <Button onClick={() => this.removeBeat()}>-</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n\r\n                <div className=\"cells\" ref=\"cellsDiv\">\r\n                    {/* <div className='indicator' style={{ left: this.props.progress + '%', position: 'relative' }}>|</div> */}\r\n                    {\r\n                        this.props.trackRow.map((el, idx) => {\r\n                            const style = {}\r\n                            if (this.props.trackRow[idx]) {\r\n                                style.backgroundColor = Config.COLOR_PALETTE[this.props.idx]\r\n                            }\r\n                            return (\r\n                                <div\r\n                                    key={\"cell_\" + idx}\r\n                                    className=\"clickable cell\"\r\n                                    style={style}\r\n                                    onClick={() => this.props.onClick(this.props.idx, idx)} />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackRow;\r\n\r\nTrackRow.defaultProps = {\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport TrackRow from './TrackRow'\r\nimport SimplePanel from \"../SimplePanel\";\r\nimport { Badge, Button, ButtonGroup } from 'reactstrap'\r\nimport { InitPreset } from \"../PresetsLib\";\r\nimport Tr from \"../Locale\"\r\nimport Config from \"../Config\";\r\n\r\nclass TrackView extends Component {\r\n    state = {\r\n        // track: this.props.track,\r\n        // trackInstruments: [],\r\n        timeSignature: this.props.timeSignature\r\n    }\r\n\r\n    rowRefs = [];\r\n\r\n    handleCellClick(sampleIdx, columnIdx) {\r\n        // copy array\r\n        let track = [...this.props.track];\r\n\r\n        let v = track[sampleIdx][columnIdx];\r\n\r\n        if (v > 0) {\r\n            track[sampleIdx][columnIdx] = 0;\r\n        }\r\n        else {\r\n            track[sampleIdx][columnIdx] = 1;\r\n        }\r\n        this.props.onChange(track, this.props.timeSignature);\r\n    }\r\n\r\n    setProgress(progress) {\r\n        this.indicator.style.left = this.indicator.minLeft + progress * (this.indicator.maxRight - this.indicator.minLeft) + 'px'\r\n    }\r\n\r\n    updateDimensions() {\r\n        // TODO: this is quite ugly\r\n        const cellsBBtop = this.refs.trackRow_0.refs.cellsDiv.getBoundingClientRect();\r\n        const cellsBBbottom = this.refs.trackRow_3.refs.cellsDiv.getBoundingClientRect();\r\n        const box = { left: cellsBBtop.left, top: cellsBBtop.top, bottom: cellsBBbottom.bottom, right: cellsBBbottom.right };\r\n        const indicator = this.refs.indicator;\r\n\r\n        const left = this.refs.trackRow_0.refs.cellsDiv.offsetLeft;\r\n        indicator.minLeft = this.refs.trackRow_0.refs.cellsDiv.offsetLeft;\r\n        const right = left + this.refs.trackRow_0.refs.cellsDiv.offsetWidth;\r\n        indicator.style.left = left + 'px'\r\n        indicator.maxRight = right;\r\n\r\n        indicator.style.height = box.bottom - box.top + 'px'\r\n        this.indicator = indicator;\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => this.updateDimensions());\r\n        this.updateDimensions();\r\n    }\r\n\r\n    addBeat() {\r\n        // add silent beat to each track, make sure we don't exceed max allowed timesignature\r\n\r\n        if (this.props.timeSignature < Config.MAXIMUM_TIMESIGNATURE) {\r\n            let track = [...this.props.track]\r\n\r\n            for (let i = 0; i < track.length; i++) {\r\n                if (track[i].length < Config.MAXIMUM_TIMESIGNATURE) {\r\n                    track[i].push(0)\r\n                }\r\n            }\r\n            this.props.onChange(track, this.props.timeSignature + 1)\r\n        }\r\n    }\r\n\r\n    removeBeat() {\r\n        // remove a beat from each track, making sure there won't be negative timeSignatures on any track\r\n\r\n        if (this.props.timeSignature > 1) {\r\n            let track = [...this.props.track];\r\n\r\n            for (let i = 0; i < track.length; i++) {\r\n                if (track[i].length > 1) {\r\n                    track[i].pop()\r\n                }\r\n            }\r\n            this.props.onChange(track, this.props.timeSignature - 1)\r\n\r\n        }\r\n    }\r\n\r\n    onTrackRowSignatureChange(trackId, newTimeSignature) {\r\n\r\n        if (newTimeSignature < 24) {\r\n            let track = [...this.props.track]\r\n            if (newTimeSignature > track[trackId].length) {\r\n                // add silent beat\r\n                track[trackId].push(0);\r\n\r\n            }\r\n            else {\r\n                track[trackId].pop();\r\n            }\r\n\r\n            this.props.onChange(track, this.props.timeSignature)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updateDimensions();\r\n    }\r\n\r\n    render() {\r\n\r\n        let indicatorProgress = 0;\r\n        if (this.indicator) {\r\n            indicatorProgress = this.indicator.minLeft + this.props.partProgress * (this.indicator.maxRight - this.indicator.minLeft) + 'px';\r\n        }\r\n\r\n        return (\r\n            <SimplePanel style={{ padding: '15px' }} title={Tr(\"Sequencer\")}>\r\n                <div className=\"trackView\">\r\n                    <div className=\"trackContainer\">\r\n                        <div className=\"indicator\" ref='indicator' style={{ left: indicatorProgress }} />\r\n                        {\r\n                            // TODO: get rid of this hardcoded stuff\r\n                            [0, 1, 2, 3].map(idx => {\r\n                                return (\r\n                                    <TrackRow\r\n                                        idx={idx}\r\n                                        ref={\"trackRow_\" + idx}\r\n                                        soundLibrary={this.props.soundLibrary}//.use(idx, instrument, file);\r\n                                        onMeasureChange={(newTimeSignature) => this.onTrackRowSignatureChange(idx, newTimeSignature)}\r\n                                        key={\"trackRow_\" + idx}\r\n                                        timeSignature={this.props.timeSignature}\r\n                                        progress={this.props.progress}\r\n                                        trackRow={this.props.track[idx]}\r\n                                        onClick={(sampleIdx, trackIdx) => this.handleCellClick(sampleIdx, trackIdx)}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"btnContainer\">\r\n                        <ButtonGroup size=\"sm\" vertical>\r\n                            <Button onClick={() => this.addBeat()}>+</Button>\r\n                            <Button onClick={() => this.removeBeat()}>-</Button>\r\n                        </ButtonGroup>\r\n                        <div height=\"1em\">\r\n                            <Badge className=\"beatsCntBadge\" color=\"dark\">{this.props.timeSignature}</Badge>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </SimplePanel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackView;\r\n\r\nTrackView.defaultProps = {\r\n    track: InitPreset.track\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport SimplePanel from './SimplePanel'\r\nimport { Button } from 'reactstrap'\r\nimport { InitPreset } from './PresetsLib'\r\nimport Planner from './Planner'\r\nimport Tr from './Locale'\r\nimport PresetsManager from './PresetsManager'\r\nimport SvgClock from \"./SvgClock\";\r\nimport ModePanel from './ModePanel'\r\nimport TrackView from './TrackView/TrackView'\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler'\r\nimport Config from './Config'\r\nimport SoundLibrary from \"./SoundLibrary\";\r\nimport AdvancedSlider from \"./Sliders/AdvancedSlider\";\r\n\r\nclass SoundMachine extends Component {\r\n\tsoundLibrary = new SoundLibrary();\r\n\r\n\tstate = {\r\n\t\tinitialized: false,\r\n\t\tconfig: InitPreset,\r\n\t\ttrack: this.props.track,\r\n\t\ttimeSignature: this.props.timeSignature\r\n\t};\r\n\r\n\ttransport = Tone.Transport;\r\n\ttone = Tone;\r\n\r\n\tcomponentDidMount() {\r\n\t\tTone.Transport.lookAhead = 10;\r\n\r\n\t\t// initialize main loop\r\n\t\tthis.part = new Tone.Part((time, note) => this.repeat(time, note), [])\r\n\t\tthis.part.loop = true;\r\n\t\t// this.part.humanize = true;\r\n\t\tthis.part.start(0)\r\n\r\n\r\n\t\tconst config = this.getConfig();\r\n\t\tthis.setPlan(config);\r\n\r\n\t\tthis.initProgressUpdate();\r\n\t\tthis.documentTitle = document.title;\r\n\r\n\t\tthis.setState({ initialized: true })\r\n\t\tthis.props.onReady();\r\n\t}\r\n\r\n\tgetConfig() {\r\n\t\treturn { ...this.refs.modePanel.state, ...{ track: this.state.track }, ...{ timeSignature: this.state.timeSignature }, ...{ samples: this.soundLibrary.getSamples() } };\r\n\t}\r\n\r\n\tinitProgressUpdate() {\r\n\t\tsetInterval(() => this.onProgress(), 1000 / Config.PROGRESS_UPDATE_FPS)\r\n\t}\r\n\r\n\tsetPlan(config) {\r\n\t\t// cancel all events\r\n\t\tthis.transport.cancel();\r\n\t\tthis.transport.position = 0;\r\n\t\tthis.setTrack(config.track.slice(), config.timeSignature);\t// TODO: Unsure why we need to pass copy\r\n\t\tthis.refs.planner.setPlan(config);\r\n\r\n\t}\r\n\r\n\t// trackRow.length determine polyrhythm measure, timeSignature is main time signature we relate polyrythms to\r\n\tcreatePoly(trackRow, trackIdx, timeSignature) {\r\n\t\tconst ticks = this.tone.Time(\"1m\").toTicks();\r\n\t\tconst interval = ticks / trackRow.length;\r\n\r\n\t\tfor (let i = 0; i < trackRow.length; i++) {\r\n\t\t\tif (trackRow[i] > 0) {\r\n\t\t\t\tthis.part.add(interval.toFixed(0) * i + 'i', trackIdx);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetTrack(track, timeSignature) {\r\n\t\tif (this.state.track === track) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// make sure we have 4 tracks\r\n\t\tif (track.length < Config.TRACKS_NUMBER) {\r\n\t\t\ttrack.push(new Array(timeSignature).fill(0));\r\n\t\t}\r\n\t\tthis.setTimeSignature(timeSignature);\r\n\r\n\t\tthis.part.removeAll();\r\n\r\n\t\tfor (let i = 0; i < track.length; i++) {\r\n\t\t\tthis.createPoly(track[i], i, timeSignature)\r\n\t\t}\r\n\t\tthis.part.loopEnd = '1m'\r\n\t\tthis.part.start(0);\r\n\r\n\t\tthis.setState({ track: track, timeSignature: timeSignature })\r\n\r\n\t}\r\n\r\n\tonProgress() {\r\n\t\tif (this.transport.state === 'stopped') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.refs.debug) {\r\n\t\t\tthis.refs.debug.innerHTML = this.transport.seconds.toFixed(1)\r\n\t\t}\r\n\r\n\t\tif (this.refs.planner) { this.refs.planner.updateProgress() }\r\n\r\n\t\tthis.refs.svgClock.setProgress(this.part.progress)\r\n\t\tthis.refs.trackView.setProgress(this.part.progress)\r\n\t}\r\n\r\n\trepeat = (time, trackIdx) => {\r\n\t\tthis.soundLibrary.play(trackIdx, time)\r\n\t}\r\n\r\n\tcalcTimeForBpm(seconds, bpm) {\r\n\t\treturn Tone.Time(seconds * bpm / this.baseBpm);\r\n\t}\r\n\r\n\tsetTimeSignature(timeSignature) {\r\n\t\tif (timeSignature !== this.transport.timeSignature) {\r\n\t\t\tthis.transport.timeSignature = timeSignature;\r\n\t\t}\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\r\n\t\tif (isNaN(bpm) || bpm <= 0 || bpm > 1200) {\r\n\t\t\tthrow new Error(\"Invalid BPM value: \" + bpm)\r\n\t\t}\r\n\r\n\t\tif (bpm !== this.transport.bpm.value) {\r\n\t\t\tTone.Transport.bpm.value = bpm;\r\n\r\n\t\t\tdocument.title = bpm.toFixed(0) + ' | ' + this.documentTitle;\r\n\r\n\t\t\t// the animation and overflow retrigger seems to make metronome bit jiggery, unsure if we should implement it\r\n\t\t\t// this.refs.bpmInfo.classList.remove('bump')\r\n\t\t\t// void this.refs.bpmInfo.offsetWidth;\r\n\t\t\t// this.refs.bpmInfo.classList.add('bump');\r\n\t\t\t// const bpmInfo = this.refs.bpmInfo\r\n\t\t\t// bpmInfo.addEventListener( \"animationend\",  function() {\r\n\t\t\t// \tbpmInfo.classList.remove(\"bump\");\r\n\t\t\t//   } );\r\n\t\t\tthis.setState({ bpm: bpm })\r\n\t\t}\r\n\t};\r\n\r\n\ttoggle() {\r\n\t\tTone.Transport.state === 'started' ? this.stop() : this.start();\r\n\t};\r\n\r\n\tonPlanStep(bpm) {\r\n\t\tthis.setBpm(bpm);\r\n\t}\r\n\r\n\tonControlChange() {\r\n\t\tconst v = this.getConfig();\r\n\r\n\t\tthis.setPlan(v);\r\n\t}\r\n\r\n\tonPresetSelect(preset) {\r\n\t\t// set preset's stuff\r\n\t\tthis.setState({ track: preset.track, timeSignature: preset.timeSignature }, function () {\r\n\t\t\tthis.refs.modePanel.setValue(preset)\r\n\t\t});\r\n\r\n\t\t// set instruments\r\n\t\tfor (let i = 0; i < preset.samples.length; i++) {\r\n\t\t\tthis.soundLibrary.use(i, preset.samples[i].instrumentKey, preset.samples[i].file)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonTrackChange(newTrack, timeSignature) {\r\n\t\tif (this.state.timeSignature !== timeSignature) {\r\n\t\t\t// length changed so after setting track, recreate Plan\r\n\t\t\tconst config = this.getConfig();\r\n\t\t\tconfig.track = newTrack;\r\n\t\t\tconfig.timeSignature = timeSignature;\r\n\t\t\tthis.setPlan(config);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setTrack(newTrack, timeSignature)\r\n\t\t}\r\n\t}\r\n\r\n\tonVolumeChange(newVolume) {\r\n\t\tthis.tone.Master.volume.value = -60 + (newVolume * 60 / 100) + 6\r\n\t\t// this.soundLibrary.setVolume(newVolume / 100)\r\n\t}\r\n\r\n\tonReverbChange(value) {\r\n\t\tthis.soundLibrary.setReverb(value / 100)\r\n\t\t// console.log('reverb',value)\r\n\t}\r\n\r\n\thandleKey(key, e) {\r\n\t\te.preventDefault();\r\n\t\tswitch (key) {\r\n\r\n\t\t\tcase 's':\r\n\t\t\tcase 'space':\r\n\t\t\t\tthis.toggle();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'esc':\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\t\tthis.refs.planner.stepBackward()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tthis.refs.planner.stepForward()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'up':\r\n\t\t\t\tif (this.state.bpm < 600) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm + 10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'down':\r\n\t\t\t\tif (this.state.bpm > 10) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm - 10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<>\r\n\t\t\t\t<KeyboardEventHandler handleKeys={['s', 'space', 'esc', 'left', 'right', 'up', 'down']} onKeyEvent={(key, e) => this.handleKey(key, e)} />\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SimplePanel title={Tr('Control')}>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t// color=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggle()}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={this.state.isPlaying ? 'secondary' : 'light'}\r\n\t\t\t\t\t\t\t\t\t\t\t// outline\r\n\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{Tr(\"Start / Stop\")}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t<Row><Col><h2><span ref=\"bpmInfo\" className='badge badge-dark bpm-info'>BPM: {Tone.Transport.bpm.value.toFixed(0)}</span></h2></Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{Tr(\"Volume\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\t\t\t\t\t\tref=\"volumeSlider\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// included={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisableBtns={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbtnStep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={90}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// marks={{ 30:k '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// value={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(newVolume) => this.onVolumeChange(newVolume)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{Tr(\"Reverb\")}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\t\t\t\t\t\tref=\"reverbSlider\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// included={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisableBtns={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbtnStep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// marks={{ 30:k '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// value={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(newVolume) => this.onReverbChange(newVolume)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t</SimplePanel>\r\n\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col style={{ margin: 'auto' }}>\r\n\t\t\t\t\t\t\t<SvgClock ref=\"svgClock\" soundLibrary={this.soundLibrary} timeSignature={this.state.timeSignature} track={this.state.track} />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<ModePanel\r\n\t\t\t\t\t\t\tref=\"modePanel\"\r\n\t\t\t\t\t\t\ttransport={this.transport}\r\n\t\t\t\t\t\t\tonChange={() => this.onControlChange()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<TrackView\r\n\t\t\t\t\t\t\t\tref='trackView'\r\n\t\t\t\t\t\t\t\tsoundLibrary={this.soundLibrary}\r\n\t\t\t\t\t\t\t\ttrack={this.state.track}\r\n\t\t\t\t\t\t\t\t// partProgress={this.state.partProgress}\r\n\t\t\t\t\t\t\t\tinstrument={this.state.instrument}\r\n\t\t\t\t\t\t\t\t// instrumentLib={this.instrumentLib}\r\n\t\t\t\t\t\t\t\ttimeSignature={this.state.timeSignature}\r\n\t\t\t\t\t\t\t\t// onInstrumentChanged={(trackIdx, instrument) => this.onInstrumendChanged(trackIdx, instrument)}\r\n\t\t\t\t\t\t\t\tonChange={(track, timeSignature) => this.onTrackChange(track, timeSignature)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Planner\r\n\t\t\t\t\t\t\t\ttransport={this.transport}\r\n\t\t\t\t\t\t\t\tonChange={() => this.onControlChange()}\r\n\t\t\t\t\t\t\t\tonPlanStep={(bpm) => this.onPlanStep(bpm)}\r\n\t\t\t\t\t\t\t\tonPlanEnd={() => this.stop()}\r\n\t\t\t\t\t\t\t\tref=\"planner\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<PresetsManager\r\n\t\t\t\t\t\t\t\tref=\"presetsManager\"\r\n\t\t\t\t\t\t\t\tgetPreset={() => this.getConfig()}\r\n\t\t\t\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t</Container >\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tthis.transport.stop();\r\n\t\tthis.transport.position = 0;\r\n\t\tthis.setState({ isPlaying: false });\r\n\t}\r\n\r\n\tstart() {\r\n\t\tthis.transport.start(\"+.1\");\r\n\t\tthis.part.start();\r\n\t\tthis.setState({ isPlaying: true });\r\n\t}\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tinstrument: InitPreset.instrument,\r\n\ttrack: InitPreset.track,\r\n\ttimeSignature: InitPreset.timeSignature,\r\n\tonReady: function () { }\r\n};","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n// import \"./components/SoundMachine\";\r\nimport SoundMachine from \"./components/SoundMachine\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Badge, Container, Row, Col } from \"reactstrap\";\r\nimport SimplePanel from \"./components/SimplePanel\";\r\nimport ReactGA from 'react-ga';\r\nimport Tr from './components/Locale'\r\n\r\nclass App extends Component {\r\n\r\n\tstate = {\r\n\t\tshowMask: true\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// google analytics\r\n\t\tReactGA.initialize({\r\n\t\t\ttrackingId: 'UA-151010848-1',\r\n\t\t\tdebug: false,\r\n\t\t\tgaOptions: {\r\n\t\t\t\tcookieDomain: 'none'\r\n\t\t\t}\r\n\t\t});\r\n\t\tReactGA.pageview(window.location.pathname + window.location.search);\r\n\t}\r\n\r\n\tremoveLoadMask() {\r\n\t\tthis.setState({ showMask: false })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Container className=\"app-container \">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SoundMachine ref=\"sm\" onReady={() => this.removeLoadMask()} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SimplePanel title={Tr(\"Keyboard controls\")} className=\"about\">\r\n\t\t\t\t\t\t\t\t<div><code>{Tr(\"arrow up/down\")}</code> - {Tr(\"higher/lower BPM\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>{Tr(\"arrow left/right\")}</code> - {Tr(\"previous/next step according to plan\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>space, s</code> - {Tr(\"start/stop\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>esc</code> - {Tr(\"stop\")}</div>\r\n\t\t\t\t\t\t\t</SimplePanel>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<div className=\"footer\">\r\n\t\t\t\t\t\t\t\t{/* TODO: i18n */}\r\n\t\t\t\t\t\t\t\t<div><h6>If you like this app consider donation to a developer using following <Badge href=\"https://www.buymeacoffee.com/indiebubbler\" target=\"blank\">link</Badge></h6></div>\r\n\t\t\t\t\t\t\t\t<div>Join discord using <Badge href=\"https://discord.gg/fAwnmVh\" target=\"blank\">this link</Badge> for feedback and improvement suggestions.</div>\r\n\t\t\t\t\t\t\t\t<div>By using this site you agree to the use of cookies to store user defined presets and analytics.</div>\r\n\r\n\t\t\t\t\t\t\t\t<div>If you want help translating this page please contact <Badge href=\"mailto:indiebubbler@gmail.com?subject=Feedback\">indiebubbler@gmail.com</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>Made using <Badge href=\"https://reactjs.org/\" target=\"blank\" >React</Badge> and <Badge href=\"https://tonejs.github.io/\" target=\"blank\">Tone.js</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>Ideas for visualisation and presets taken from <Badge href=\"http://www.ethanhein.com/wp/my-nyu-masters-thesis\" target=\"blank\">Ethan Hein's site</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>&#169; IndieBubbler 2019-2020. Version 2.2</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<div ref=\"loadMask\" className={this.state.showMask === true ? 'loadmask ' : 'loadmask fadeOut'} />\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(   <App  />  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}