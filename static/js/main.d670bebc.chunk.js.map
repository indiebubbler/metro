{"version":3,"sources":["components/SimplePanel.jsx","components/PlayModes.jsx","components/PlaybackModes.jsx","components/Instruments.jsx","components/PresetsLib.jsx","localization/pl-pl.jsx","components/Locale.jsx","components/SimpleProgress.jsx","components/Utils.jsx","components/Planner.jsx","components/EditPresetModal.jsx","components/ImportDialog.jsx","components/Config.jsx","components/PresetsManager.jsx","components/SvgClock.jsx","components/Sliders/GeometricSlider.jsx","components/Sliders/RangeEditInPlace.jsx","components/Sliders/AdvancedRange.jsx","components/Sliders/EditInPlace.jsx","components/Sliders/AdvancedSlider.jsx","components/Sliders/DiscreteSlider.jsx","components/ModePanel.jsx","components/TrackView/TrackRow.jsx","components/TrackView/TrackView.jsx","components/SoundLibrary.jsx","components/SoundMachine.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SimplePanel","Component","render","Container","className","this","props","Row","title","children","defaultProps","PlayModes","PlaybackModes","Instruments","TABLA","key","label","ELECTRO_KIT","METRONOME","BASIC_DRUM_KIT","YAMAHA_RX5","Samples","file","instrumentKey","InstrumentsByKey","Object","keys","map","item","idx","PresetsLib","playMode","byTimeInterval","bpmStep","bpmRange","track","playbackMode","byBarInterval","stepsNum","isHidden","InitPreset","pl","1","2","3","4","5","GetNavigatorLanguage","navigator","languages","length","userLanguage","language","browserLanguage","locale","Tr","text","TrRange","number","l","SimpleProgress","state","style","width","value","display","Utils","toLocaleDateTime","dateTime","Date","toLocaleString","dateStyle","timeStyle","padTime","t","formatTime","timeInSeconds","formatTimeFull","formatTimeLong","hLabel","mLabel","sLabel","usePad","setSeconds","h","getHours","m","getMinutes","s","getSeconds","o","trim","storageAvailable","type","storage","window","x","setItem","removeItem","e","DOMException","code","name","Planner","steps","currentStepIdx","stepProgress","planProgress","isUpDown","isPaused","barRender","b","cls","stepIdx","onClick","startStep","duration","Infinity","durationFormatted","durationBars","Math","floor","bpm","toFixed","makePlan","segments","max","segment","push","constantBpmSlider","exerciseTime","rev","slice","reverse","shift","concat","isRandom","shuffle","array","temporaryValue","randomIndex","currentIndex","random","onPlanStep","setState","stepChanged","updateProgress","step","getStep","transport","ticks","startTimeTicks","Tone","Time","toTicks","endTime","clamp","min","setPlan","config","plan","baseBpm","timeSignature","events","totalPlanTime","i","beatDuration","schedule","time","durationInBars","bar","calcTimeForBpm","Error","onPlanEnd","prevState","seconds","stepForward","stepBackward","getCurrentStep","onPlaybackChange","newPlaybackMode","onChange","onUpDownBtn","onRandomBtn","height","overflow","Collapse","isOpen","ButtonGroup","size","Button","outline","active","NaN","EditPresetModal","modal","nestedModal","preset","presetId","showDelete","toggle","toggleNested","handleSave","onSave","edit","titleChanged","newTitle","target","handleDelete","onDeleteBtn","renderDelete","color","marginTop","onSaveBtn","Modal","ModalHeader","ModalBody","Input","placeholder","defaultValue","ModalFooter","ImportDialog","showInvalidFileAlert","open","close","onPresetsLoaded","json","JSON","parse","result","onJsonReady","onUploadBtn","reader","FileReader","onload","readAsText","files","onImportBtn","Alert","hidden","Config","TRACKS_NUMBER","MAXIMUM_TIMESIGNATURE","MIN_BPM","MAX_BPM","PROGRESS_UPDATE_FPS","COLOR_PALETTE","0","PresetsManager","constructor","super","showEdit","userPresets","storedPresets","localStorage","getItem","Array","fill","validatePreset","interval","accents","beatIdx","beats","beat","samples","convertInstrumentKeyToSamples","filter","el","onPresetClick","onSelect","onSavePreset","undefined","apply","p","savedDtm","findIndex","saveInLocalStorage","presets","stringify","showDeleteBtn","showEditBtn","hideEditBtn","onPresetDelete","newPresets","splice","onPresetEdit","getPreset","refs","presetEditor","importDialog","renderUserPresets","Col","textAlign","xs","onExport","a","document","createElement","Blob","href","URL","createObjectURL","download","click","onPresetsImport","forEach","userPresetsJson","isHeader","justifyContent","ref","SvgClock","colorEmpty","strokeColor","strokeWidth","setAccents","getCoordinatesForPercent","percent","r","cos","PI","sin","drawSlices","radius","trackIdx","pctStep","slices","volume","subIdx","cumulativePercent","paths","startX","startY","endX","endY","largeArcFlag","pathData","join","d","stroke","drawText","labels","y","textAnchor","transform","setProgress","progress","line","radiusIncrement","circles","cx","cy","container","viewBox","svg","strokeLinecap","x1","y1","x2","y2","partProgress","GeometricSlider","regression","onMinusClick","newValue","btnStep","onPlusClick","exponential","precision","prepareMarks","marks","marksAt","findX","v","predict","log","equation","setValue","Badge","onBadgeClick","badgeFormatter","included","marksNum","marksStyle","desc","markFormatter","RangeEditInPlace","showInvalidRange","onOk","onMinValueChange","Number","onMaxValueChange","InputGroup","InputGroupAddon","addonType","AdvancedRange","Range","editor","onEdit","bounds","onAfterChange","editInPlace","assign","EditInPlace","onValueChange","val","AdvancedSlider","Slider","disableBtns","DiscreteSlider","innerValue","innerMarks","values","componentDidUpdate","prevProps","theValue","indexOf","onSliderChange","sliderValue","margin","whiteSpace","ModePanel","bpmStepDropdownOpen","onBpmSliderChange","onModeChange","newMode","newState","onBpmRangeChange","onBpmStepChange","onBpmStepSelect","byBarSlider","byTimeSlider","onTimeIntervalChange","onBarIntervalChange","byBarFormatter","barsNum","renderIncreaseBpmDropdown","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","onStepsSliderChange","onExerciseTimeSliderChange","renderTimeSlider","renderStepsSlider","10","15","20","30","40","50","60","70","80","90","100","renderSpeedRange","pushable","200","400","600","800","1000","1200","TrackRow","activeIdx","componentDidMount","instrument","onSampleSelect","addBeat","trackRow","onMeasureChange","removeBeat","onSampleChange","sampleDropdownOpen","filename","soundLibrary","use","playersArr","fullLabel","sample","alignSelf","vertical","backgroundColor","TrackView","rowRefs","handleCellClick","sampleIdx","columnIdx","indicator","left","minLeft","maxRight","updateDimensions","cellsBBtop","trackRow_0","cellsDiv","getBoundingClientRect","cellsBBbottom","trackRow_3","box","top","bottom","right","offsetLeft","offsetWidth","addEventListener","pop","onTrackRowSignatureChange","trackId","newTimeSignature","indicatorProgress","padding","SoundLibrary","players","Players","reverb","Reverb","toMaster","decay","predelay","generate","wet","connect","add","player","get","find","getSamples","play","loaded","start","setReverb","SoundMachine","initialized","Transport","tone","repeat","setBpm","isNaN","documentTitle","lookAhead","part","Part","note","loop","getConfig","initProgressUpdate","onReady","modePanel","setInterval","onProgress","cancel","position","setTrack","planner","createPoly","setTimeSignature","removeAll","loopEnd","debug","innerHTML","svgClock","trackView","stop","onControlChange","onPresetSelect","onTrackChange","newTrack","onVolumeChange","newVolume","Master","onReverbChange","handleKey","preventDefault","handleKeys","onKeyEvent","isPlaying","block","App","showMask","ReactGA","initialize","trackingId","gaOptions","cookieDomain","pageview","location","pathname","search","removeLoadMask","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","ReactDOM","getElementById","process","origin","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d670bebc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Container, Row} from 'reactstrap'\r\n\r\nclass SimplePanel extends Component {\r\n    render() { \r\n        return (\r\n            <Container className={\"pane \" + this.props.className}>\r\n\t\t\t\t<Row className=\"pane-title\">{this.props.title}</Row>\r\n\t\t\t\t<Row className=\"pane-body\">{this.props.children}</Row>\r\n            </Container>\r\n            );\r\n    }\r\n}\r\n \r\nexport default SimplePanel;\r\n\r\n\r\nSimplePanel.defaultProps = {\r\n    title: 'title',\r\n    children: [],\r\n    className: ''\r\n };","\r\n// NOTE: If we change any of existing string names we will screw up user presets on client's side\r\nexport const PlayModes = {\r\n\tBY_BAR: \"by_bar\",\r\n\tBY_TIME: \"by_time\",\r\n\tSET_TIME: \"set_time\",\r\n\tCONSTANT: \"constant\"\r\n};","export const PlaybackModes = {\r\n\tSTOP: \"stop\",\r\n\tCYCLE: \"cycle\",\r\n\tREPEAT: \"repeat\",\r\n\tCONTINUE: \"continue\"\r\n};","export const Instruments = {\r\n    TABLA: {\r\n        key: 'tabla',\r\n        label: 'Tabla'\r\n    },\r\n    ELECTRO_KIT: {\r\n        key: 'electrokit',\r\n        label: 'Electronic Kit'\r\n        \r\n    },\r\n    METRONOME: {\r\n        key: 'metronome',\r\n        label: 'Metronome'\r\n        \r\n    },\r\n    BASIC_DRUM_KIT: {\r\n        key: 'basicdrumkit',\r\n        label: 'Basic Drum Kit'\r\n        \r\n    },\r\n    YAMAHA_RX5: {\r\n        key: 'yamaha_rx5',\r\n        label: 'Yamaha RX 5'\r\n    }\r\n};\r\n\r\n\r\nexport const Samples = [\r\n{\r\n        file: \"dha-slide.wav\",\r\n        label: \"Dha\",\r\n        instrumentKey: 'tabla'\r\n    }, {\r\n        file: \"dhin-slide.wav\",\r\n        label: \"Dhin\",\r\n        instrumentKey: 'tabla'\r\n    }, {\r\n        file: \"tin.wav\",\r\n        label: \"Tin\",\r\n        instrumentKey: 'tabla'\r\n    },{\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"Snare.wav\",\r\n        label: \"Snare\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"HiHat.wav\",\r\n        label: \"Hi Hat\",\r\n        instrumentKey: 'electrokit'\r\n    }, {\r\n        file: \"tap.wav\",\r\n        label: \"Tap\",\r\n        instrumentKey: 'metronome'\r\n    }, {\r\n        file: \"down.wav\",\r\n        label: \"Down\",\r\n        instrumentKey: 'metronome'\r\n    }, {\r\n        file: \"up.wav\",\r\n        label: \"Up\",\r\n        instrumentKey: 'metronome'\r\n    },\r\n    {\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"Snare.wav\",\r\n        label: \"Snare\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"ClosedHat.wav\",\r\n        label: \"Closed Hat\",\r\n        instrumentKey: 'basicdrumkit'\r\n    }, {\r\n        file: \"OpenHat.wav\",\r\n        label: \"Open Hat\",\r\n        instrumentKey: 'basicdrumkit'\r\n    },\r\n    {\r\n        file: \"Kick.wav\",\r\n        label: \"Kick\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Rim.wav\",\r\n        label: \"Rim\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Ride.wav\",\r\n        label: \"Ride\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Cowbell.wav\",\r\n        label: \"Cowbell\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }, {\r\n        file: \"Shaker.wav\",\r\n        label: \"Shaker\",\r\n        instrumentKey: 'yamaha_rx5'\r\n    }\r\n];\r\n\r\n\r\n\r\nconst InstrumentsByKey = {}\r\nObject.keys(Instruments).map(function (item, idx) {\r\n    InstrumentsByKey[Instruments[item].key] = Instruments[item];\r\n    // expected to return a value from arrow func\r\n    return true;\r\n});\r\nexport { InstrumentsByKey };\r\n\r\nexport const InstrumentsArray = Object.keys(Instruments)\r\n    .map(item => {\r\n        return Instruments[item]\r\n    });\r\n","import { PlayModes } from \"./PlayModes\"\r\nimport { PlaybackModes } from \"./PlaybackModes\"\r\nimport { Instruments } from \"./Instruments\";\r\n\r\nexport const PresetsLib = [\r\n    { \"isHeader\": true, title: \"Basic\" },\r\n    { title: \"Metronome 2/4\", \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"interval\": 300, \"track\": [[2], [1]], \"instrumentKey\": \"metronome\" },\r\n\r\n    {\r\n        title: \"Metronome 4/4\",\r\n        instrumentKey: Instruments.METRONOME.key,\r\n        playMode: PlayModes.BY_TIME,\r\n        byTimeInterval: 60,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 200],\r\n        track: [[2], [1], [1], [1]]\r\n    },\r\n    {\r\n        title: \"Metronome 3/4\",\r\n        instrumentKey: Instruments.METRONOME.key,\r\n        playMode: PlayModes.BY_TIME,\r\n        byTimeInterval: 60,\r\n        bpmStep: 20,\r\n        bpmRange: [100, 200],\r\n        track: [[2], [1], [1]]\r\n    },\r\n    { \"isHeader\": true, title: \"Drum Patterns\" },\r\n    {\r\n        title: \"Levee Break\",\r\n        instrumentKey: 'electrokit',\r\n        bpmRange: [300, 400],\r\n        track: [[0, 2], [0], [2], [], [1, 2], [], [2], [0], [2], [], [0, 2], [0], [1, 2], [], [2], []],\r\n        playMode: PlayModes.BY_BAR,\r\n        playbackMode: PlaybackModes.STOP,\r\n        byTimeInterval: 5,\r\n        byBarInterval: 10,\r\n        stepsNum: 10,\r\n        bpmStep: 10,\r\n        isHidden: true\r\n    },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [0, 2], [], [2, 1], [], [0, 2], [], [2, 0], [], [2, 0], [], [1, 2], [], [2, 0], []], \"instrumentKey\": \"electrokit\", \"title\": \"Basic Rock\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2], [], [2, 1], [], [2], [0, 2], [2, 0], [], [0, 2], [], [1, 2], [], [2, 0], []], \"instrumentKey\": \"electrokit\", \"title\": \"Impeach the President\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [350, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [2], [0, 2], [2], [2, 1], [2], [0, 2], [3, 1], [2], [2, 1], [0, 2], [2, 1], [2, 1], [0, 3], [2], [2, 1]], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Funky Drummer\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2], [], [1, 2], [], [2], [0], [2, 0], [], [0, 2], [], [1, 2], [], [2], []], \"instrumentKey\": \"electrokit\", \"title\": \"Walk This Way\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0, 2], [], [2, 0], [], [1, 2], [], [2], [], [2], [], [0, 2], [0], [1, 2], [], [2], [0]], \"instrumentKey\": \"electrokit\", \"title\": \"It's a New Day\" },\r\n    { \"bpmStep\": 10, \"bpmRange\": [300, 400], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_bar\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 5, \"byBarInterval\": 10, \"constantBpmSlider\": 300, \"track\": [[0], [], [], [0], [1, 2], [], [0], [], [0], [], [], [], [1, 2], [], [], []], \"instrumentKey\": \"electrokit\", \"title\": \"The Big Beat\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [300, 500], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 300, \"interval\": 120, \"track\": [[0, 2], [], [0, 2], [], [1, 2], [], [0, 2], [], [0, 2], [], [0, 2], [], [1, 2], [], [0, 2], []], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Rock\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [528, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"constant\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 600, \"interval\": 120, \"track\": [[0], [], [3], [], [1, 0], [], [3], [], [0], [2], [3], [], [1, 0], [], [0, 3], []], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Techno\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [528, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"constant\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 50, \"constantBpmSlider\": 400, \"interval\": 120, \"track\": [[0, 2], [], [2], [], [1, 2], [], [2], [0], [2], [], [0, 2], [], [1, 2], [0], [2], [0]], \"instrumentKey\": \"basicdrumkit\", \"title\": \"Hip Hop\" },\r\n\r\n    // Afro-Cuban\r\n    { \"isHeader\": true, title: \"Afro-Cuban\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"interval\": 120, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [1, 2], [0, 2], [0, 2], [2], [1, 2], [0, 2], [1, 2, 0], [2], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Son Clave\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [2], [0, 2, 1], [0, 2], [2], [2, 1], [0, 2], [2, 0, 1], [2], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Rumba\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 2], [2], [2], [0, 1, 2], [2, 0], [2], [2, 1], [0, 2], [0, 2], [2], [2, 1], [0, 2], [2, 0], [2, 1], [2], [0, 2]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Bossa Nova\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 1, 3], [], [], [1, 3], [0], [], [1, 3], [], [0, 1], [3], [3], [1], [0], [], [0, 1], []], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Soukous\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 3], [], [1], [1, 3], [0], [], [1, 3], [1], [0], [], [3, 1], [1], [0], [], [0, 1, 3], [1]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Gahu\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [400, 600], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 120, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[0, 3], [], [1], [1], [0, 3], [], [1, 3, 0], [1], [0], [], [3, 1], [1], [0, 3], [], [0, 1], [1]], \"instrumentKey\": \"yamaha_rx5\", \"title\": \"Shiko\" },\r\n\r\n    // Polyrhythms\r\n    { \"isHeader\": true, title: \"Polyrhythms\" },\r\n    { \"title\": \"3 over 4\", \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 100, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"constantBpmSlider\": 300, \"track\": [[1, 0, 0, 0], [0, 1, 1], [1, 1, 1, 1], [0, 0, 0, 0]], \"timeSignature\": 4, \"instrumentKey\": \"basicdrumkit\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [100, 200], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"by_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 300, \"track\": [[1, 1, 0], [0, 0, 1], [1, 1, 1, 1], [0, 0, 0]], \"timeSignature\": 3, \"instrumentKey\": \"basicdrumkit\", \"title\": \"4 over 3\" },\r\n    { \"bpmStep\": 20, \"bpmRange\": [121, 359], \"currentBpm\": 300, \"playbackMode\": \"stop\", \"playMode\": \"set_time\", \"stepsNum\": 10, \"exerciseTime\": 1800, \"bpmStepDropdownOpen\": false, \"byTimeInterval\": 60, \"byBarInterval\": 2, \"constantBpmSlider\": 122, \"track\": [[1, 0, 1, 0, 1, 0], [1, 1, 1, 1], [1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0]], \"timeSignature\": 6, \"instrumentKey\": \"basicdrumkit\", \"title\": \"2 over 3\" },\r\n\r\n    // ancient ones, but leave them for compaitibility\r\n    { \"isHeader\": true, title: \"Other\" },\r\n    { title: \"Balkan 1\", \"bpmRange\": [241, 400], \"accents\": [0, 2, 1, 0, 2, 1, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_bar\", \"interval\": 20, \"bpmStep\": 30 },\r\n    { title: \"Balkan 2\", \"bpmRange\": [293, 400], \"accents\": [0, 1, 2, 0, 1, 2, 1], \"instrument\": Instruments.TABLA, \"playMode\": \"by_bar\", \"interval\": 300, \"bpmStep\": 30 },\r\n    { title: \"Groove 1\", \"bpmRange\": [222, 262], \"accents\": [0, 1, 2, 1, 2, 0, 2, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_time\", \"interval\": 600, \"bpmStep\": 30 },\r\n    { title: \"Groove 2\", \"bpmRange\": [222, 400], \"accents\": [0, 1, 0, 1, 1, 1, 0, 2], \"instrument\": Instruments.ELECTRO_KIT, \"playMode\": \"by_bar\", \"interval\": 20, \"bpmStep\": 30 },\r\n\r\n];\r\n\r\n\r\n\r\nexport const InitPreset_debug = {\r\n    \"bpmStep\": 50,\r\n    \"bpmRange\": [\r\n        300,\r\n        400\r\n    ],\r\n    // \"currentBpm\": 100,\r\n    \"playbackMode\": \"stop\",\r\n    \"playMode\": PlayModes.CONSTANT,\r\n\r\n    \"exerciseTime\": 60 * 30,    // 30 minutes\r\n    \"stepsNum\": 30,             // 1 minutes per step\r\n    \"byTimeInterval\": 5,\r\n    \"byBarInterval\": 2,\r\n    \"constantBpmSlider\": 300,\r\n    \"track\": [[1, 1, 0, 1], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]],\r\n    \"samples\": [{ instrumentKey: 'tabla', file: 'dha-slide.wav' }, { instrumentKey: 'electrokit', file: 'Kick.wav' }, { instrumentKey: 'metronome', file: 'tap.wav' }],\r\n    \"timeSignature\": 4,\r\n    \"instrumentKey\": Instruments.ELECTRO_KIT.key\r\n}\r\n\r\n\r\nexport const InitPreset = {\r\n    \"bpmStep\": 50,\r\n    \"bpmRange\": [\r\n        300,\r\n        400\r\n    ],\r\n    \"playbackMode\": \"stop\",\r\n    \"playMode\": \"constant\",\r\n    \"stepsNum\": 10,\r\n    \"exerciseTime\": 600,\r\n    \"bpmStepDropdownOpen\": false,\r\n    \"byTimeInterval\": 5,\r\n    \"byBarInterval\": 2,\r\n    \"constantBpmSlider\": 300,\r\n    \"track\": [\r\n        [\r\n            1,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            1,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ],\r\n        [\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            1,\r\n            0,\r\n            0,\r\n            0\r\n        ],\r\n        [\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0,\r\n            1,\r\n            0\r\n        ],\r\n        [\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0,\r\n            0\r\n        ]\r\n    ],\r\n    \"timeSignature\": 16,\r\n    \"samples\": [\r\n        {\r\n            \"file\": \"Kick.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"Snare.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"ClosedHat.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        },\r\n        {\r\n            \"file\": \"OpenHat.wav\",\r\n            \"instrumentKey\": \"basicdrumkit\"\r\n        }\r\n    ]\r\n}\r\n","const pl = {\r\n    /* App */\r\n    \"(shift) arrow up/down\": \"(shift) strzałki góra/dół\",\r\n    \"higher/lower BPM\": \"zwiększ/zmniejsz BPM\",\r\n    \"arrow left/right\": \"strzałki lewa/prawa\",\r\n    \"previous/next step according to plan\": \"poprzedni/następny krok wg planu\",\r\n    \"start/stop\": \"zacznij/zatrzymaj\",\r\n    \"stop\": \"zatrzymaj\",\r\n\r\n    /* SoundMachine */\r\n    \"Control\": \"Kontrola\",\r\n    \"Start / Stop\": \"Zacznij / Zatrzymaj\",\r\n    \"Volume\": \"Głośność\",\r\n    // \"Reverb\": \"Reverb\",\r\n    \"Instrument\": \"Instrument\",\r\n    \"Mode\": \"Tryb\",\r\n    \"Increase speed\": \"Zwiększaj prędkość\",\r\n    \"BPM range\": \"Zakres BPM\",\r\n    \"By bar\": \"Co kilka taktów\",\r\n    \"bar\": \"takt\",\r\n    \"By time\": \"Co jakiś czas\",\r\n    \"Set time\": \"W ustalonym czasie ćwiczeń\",\r\n    \"Constant\": \"Nie zwiększaj\",\r\n    \"Increase speed every\": \"Zwiększ prędkość co\",\r\n    \"Number of steps\": \"Ilość kroków\",\r\n    \"Up and Down\": \"Szybciej i wolniej\",\r\n    \"Shuffle\": \"Losowo\",\r\n    \"Exercise Time\": \"Czas ćwiczenia\",\r\n    \"Total time:\": \"Całkowity czas:\",\r\n    \"Please select\": \"Proszę wybrać\",\r\n    \"Select\": \"Wybierz\",\r\n    // \"BPM\": \"BPM\"\r\n\r\n    /* Planner */\r\n    \"Stop\": \"Zatrzymaj\",\r\n    \"Continue\": \"Kontynuuj\",\r\n    \"Repeat\": \"Od początku\",\r\n    \"After plan\": \"Po zakończeniu\",\r\n    \"Step order\": \"Kolejność\",\r\n\r\n    \"Plan progress\": \"Postęp planu\",\r\n    \"Step progress\": \"Postęp kroku\",\r\n\r\n    /* Presets */\r\n    \"Title\": \"Nazwa\",\r\n    \"Save current settings\": \"Zapisz bieżące ustawienia\",\r\n    \"Edit\": \"Edytuj\",\r\n    \"User presets\": \"Zapisane ustawienia\",\r\n    \"Presets\": \"Presety\",\r\n    \"Delete\": \"Usuń\",\r\n    \"Save Preset\": \"Zapisz Ustawienia\",\r\n    \"Cancel\": \"Anuluj\",\r\n    \"Are you sure?\": \"Czy aby na pewno?\",\r\n    \"Are you sure to delete current preset?\": \"Czy jesteś pewien, że chcesz usunąć to ustawienie?\",\r\n    \"Save\": \"Zapisz\",\r\n    \"Polyrhythms\": \"Polirytmy\",\r\n    \"Basic\": \"Podstawowe\",\r\n    \"Drum Patterns\": \"Motywy perkusyjne\",\r\n    \"Afro-Cuban\": \"Afro-Kubańskie\",\r\n    \"Other\": \"Inne\",\r\n\r\n    /* Import Dialog */\r\n    \"Import Presets\": \"Wczytaj Presety\",\r\n    \"I can't read this file\": \"Nie potrafię odczytać tego pliku\",\r\n    \"Import from file\": \"Importuj z pliku\",\r\n    \"Export to file\": \"Eksportuj do pliku\",\r\n    \"Confirm\": \"Potwierdź\",\r\n\r\n    /* TrackView */\r\n    \"Sequencer\": \"Sekwencer\",\r\n\r\n    /* Keyboard control panel */\r\n    \"Keyboard controls\": \"Skróty klawiszowe\",\r\n\r\n    /* Utils */\r\n\r\n    \"bars\": {\r\n        1: \"takt\",\r\n        2: \"takty\",\r\n        3: \"takty\",\r\n        4: \"takty\",\r\n        5: \"taktów\"\r\n    },\r\n\r\n    \"hours\": {\r\n        1: \"godzina\",\r\n        2: \"godziny\",\r\n        3: \"godziny\",\r\n        4: \"godziny\",\r\n        5: \"godzin\"\r\n    },\r\n\r\n    \"minutes\": {\r\n        1: \"minuta\",\r\n        2: \"minuty\",\r\n        3: \"minuty\",\r\n        4: \"minuty\",\r\n        5: \"minut\"\r\n    },\r\n\r\n    \"seconds\": {\r\n        1: \"sekunda\",\r\n        2: \"sekundy\",\r\n        3: \"sekundy\",\r\n        4: \"sekundy\",\r\n        5: \"sekund\"\r\n    },\r\n\r\n    \"hr\": \"godz.\",\r\n    \"hrs\": \"godz.\"\r\n}\r\n\r\nexport default pl;","import pl from '../localization/pl-pl'\r\n// import it from '../localization/it-it'\r\n\r\n// A bit rough attempt to i18n\r\nexport function GetNavigatorLanguage() {\r\n    return (navigator.languages && navigator.languages.length) ? navigator.languages[0] : navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\r\n}\r\n\r\n// set language for the app\r\nlet locale;\r\nswitch ( GetNavigatorLanguage() )\r\n{\r\n    case 'pl':\r\n    case 'pl-PL':\r\n    case 'pl-pl':\r\n        locale = pl;\r\n        break;\r\n    default:\r\n        locale = {};    // this will default to en\r\n        break;\r\n}\r\n\r\nfunction Tr(text) {\r\n    if (locale[text]) {\r\n        return locale[text];\r\n    }\r\n    else {\r\n        return text;\r\n    }\r\n}\r\nexport default Tr;\r\n\r\nexport function TrRange(number, label) {\r\n    if (!locale[label]) {\r\n        return label\r\n    }\r\n    else if (locale[label][number]) {\r\n        return locale[label][number]\r\n    }\r\n    else {\r\n        const l =  locale[label];\r\n        // If it's not specified then return last defined term\r\n        // Bit dodgy, but should do the job.\r\n        return l[Object.keys(l)[Object.keys(l).length -1]]\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {Container} from 'reactstrap';\r\n\r\nclass SimpleProgress extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <Container className=\"SimpleProgress\">\r\n            <div className=\"bar\" style={{width: this.props.value  + \"%\", display: 'block'}} />\r\n        </Container> );\r\n    }\r\n}\r\n \r\nexport default SimpleProgress;","import { TrRange, GetNavigatorLanguage } from './Locale'\r\n\r\nconst Utils = {\r\n\r\n\ttoLocaleDateTime: function (dateTime) {\r\n\t\t// safety\r\n\t\tif (!dateTime) return '';\r\n\r\n\t\t// go for it\r\n\t\treturn new Date(dateTime).toLocaleString(GetNavigatorLanguage(), {\r\n\t\t\tdateStyle: \"long\",\r\n\t\t\ttimeStyle: \"short\"\r\n\t\t});\r\n\r\n\t},\r\n\r\n\tpadTime: function (t) {\r\n\t\treturn t < 10 ? \"0\" + t : t;\r\n\t},\r\n\r\n\tformatTime: function (timeInSeconds) {\r\n\t\tif (timeInSeconds) {\r\n\t\t\treturn Utils.formatTimeFull(timeInSeconds, 'h', 'm', 's', true);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTimeLong: function (timeInSeconds) {\r\n\t\tif (timeInSeconds) {\r\n\t\t\treturn Utils.formatTimeFull(timeInSeconds, 'hours', 'minutes', 'seconds', false);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTimeFull: function (timeInSeconds, hLabel, mLabel, sLabel, usePad) {\r\n\t\tlet t = new Date(0, 0, 0, 0, 0, 0, 0);\r\n\t\tt.setSeconds(timeInSeconds);\r\n\t\tconst h = t.getHours();\r\n\t\tconst m = t.getMinutes();\r\n\t\tconst s = t.getSeconds();\r\n\r\n\t\tlet o = \"\";\r\n\r\n\t\tif (h !== 0) {\r\n\t\t\to += h + ' ' + TrRange(h, hLabel) + \" \";\r\n\t\t}\r\n\r\n\t\tif (m !== 0 || h !== 0) {\r\n\t\t\tif (h !== 0 && m !== 0) {\r\n\t\t\t\to += (usePad ? Utils.padTime(m) : m) + ' ' + TrRange(m, mLabel) + \" \";\r\n\t\t\t}\r\n\t\t\telse if (m !== 0) {\r\n\t\t\t\to += (usePad ? Utils.padTime(m) : m) + ' ' + TrRange(m, mLabel) + \" \";\r\n\t\t\t}\r\n\t\t\tif (s !== 0) {\r\n\t\t\t\to += \"\" + (usePad ? Utils.padTime(s) : s) + ' ' + TrRange(s, sLabel)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\to += t.getSeconds() + ' ' + TrRange(s, sLabel)\r\n\t\t}\r\n\t\treturn o.trim();\r\n\t},\r\n\r\n\tstorageAvailable: function (type) {\r\n\t\tvar storage;\r\n\t\ttry {\r\n\t\t\tstorage = window[type];\r\n\t\t\tvar x = '__storage_test__';\r\n\t\t\tstorage.setItem(x, x);\r\n\t\t\tstorage.removeItem(x);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\treturn e instanceof DOMException && (\r\n\t\t\t\t// everything except Firefox\r\n\t\t\t\te.code === 22 ||\r\n\t\t\t\t// Firefox\r\n\t\t\t\te.code === 1014 ||\r\n\t\t\t\t// test name field too, because code might not be present\r\n\t\t\t\t// everything except Firefox\r\n\t\t\t\te.name === 'QuotaExceededError' ||\r\n\t\t\t\t// Firefox\r\n\t\t\t\te.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n\t\t\t\t// acknowledge QuotaExceededError only if there's something already stored\r\n\t\t\t\t(storage && storage.length !== 0);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { Component } from \"react\";\r\nimport Tone from 'tone'\r\nimport Tr, { TrRange } from './Locale'\r\nimport { Collapse, ButtonGroup, Button } from \"reactstrap\";\r\nimport SimplePanel from \"./SimplePanel\"\r\nimport { PlayModes } from \"./PlayModes\";\r\nimport { PlaybackModes } from \"./PlaybackModes\";\r\nimport SimpleProgress from \"./SimpleProgress\";\r\nimport Utils from \"./Utils\";\r\nimport { InitPreset } from \"./PresetsLib\";\r\n\r\n// import Control from \"./Control\"\r\nclass Planner extends Component {\r\n\tstate = {\r\n\t\tplaybackMode: this.props.playbackMode,\r\n\t\tplayMode: this.props.playMode,\r\n\t\tsteps: [],\r\n\t\tcurrentStepIdx: this.props.currentStepIdx,\r\n\t\tstepProgress: 0,\r\n\t\tplanProgress: 0,\r\n\t\tisUpDown: false,\r\n\t\tisPaused: false\r\n\t};\r\n\r\n\tmakePlan(s) {\r\n\t\tlet segments = [];\r\n\t\t// some helpful variables\r\n\t\tconst max = s.bpmRange[1];\r\n\t\tlet bpm = s.bpmRange[0];\r\n\r\n\t\tif (s.playMode === PlayModes.BY_BAR) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tbpm: bpm,\r\n\t\t\t\t\tduration: s.byBarInterval\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (s.playMode === PlayModes.BY_TIME) {\r\n\t\t\twhile (bpm <= max) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tduration: s.byTimeInterval,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += s.bpmStep;\r\n\t\t\t}\r\n\t\t} else if (s.playMode === PlayModes.CONSTANT) {\r\n\t\t\tconst segment = {\r\n\t\t\t\tduration: Infinity,\r\n\t\t\t\tbpm: s.constantBpmSlider\r\n\t\t\t};\r\n\t\t\tsegments.push(segment);\r\n\t\t}\r\n\t\telse if (s.playMode === PlayModes.SET_TIME) {\r\n\r\n\t\t\tconst duration = s.exerciseTime / (s.stepsNum);\r\n\r\n\t\t\tlet bpm = s.bpmRange[0];\r\n\t\t\tconst bpmStep = (s.bpmRange[1] - s.bpmRange[0]) / (s.stepsNum - 1);\r\n\t\t\t// we compare against max+1 as there might be some fractions that will make last step ignored\r\n\t\t\twhile (bpm <= max + 1) {\r\n\t\t\t\tconst segment = {\r\n\t\t\t\t\tduration: duration,\r\n\t\t\t\t\tbpm: bpm\r\n\t\t\t\t};\r\n\t\t\t\tsegments.push(segment);\r\n\t\t\t\tbpm += bpmStep;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.state.isUpDown) {\r\n\t\t\tconst rev = segments.slice().reverse();\r\n\t\t\trev.shift()\r\n\t\t\tsegments = segments.concat(rev);\r\n\t\t}\r\n\t\tif (this.state.isRandom) {\r\n\t\t\tsegments = this.shuffle(segments.slice())\r\n\t\t}\r\n\t\treturn segments;\r\n\t}\r\n\r\n\tshuffle(array) {\r\n\t\tvar currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n\t\t// While there remain elements to shuffle...\r\n\t\twhile (0 !== currentIndex) {\r\n\r\n\t\t\t// Pick a remaining element...\r\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\t\tcurrentIndex -= 1;\r\n\r\n\t\t\t// And swap it with the current element.\r\n\t\t\ttemporaryValue = array[currentIndex];\r\n\t\t\tarray[currentIndex] = array[randomIndex];\r\n\t\t\tarray[randomIndex] = temporaryValue;\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\t}\r\n\r\n\tonPlanStep(idx) {\r\n\t\tthis.setState({ currentStepIdx: idx }, this.stepChanged)\r\n\t}\r\n\r\n\tupdateProgress() {\r\n\t\tconst step = this.getStep(this.state.currentStepIdx);\r\n\t\tconst stepProgress = (this.props.transport.ticks - step.startTimeTicks) / (Tone.Time(step.duration).toTicks());\r\n\t\tconst planProgress = this.props.transport.ticks / this.endTime;\r\n\t\tthis.setState({ stepProgress: this.clamp(stepProgress), planProgress: this.clamp(planProgress) })\r\n\t}\r\n\r\n\tclamp(value, min = 0, max = 1) {\r\n\t\treturn Math.min(Math.max(value, min), max);\r\n\t}\r\n\r\n\tsetPlan(config, stepIdx = 0) {\r\n\t\tconst plan = this.makePlan(config);\r\n\t\tthis.baseBpm = this.props.transport.bpm.value\r\n\r\n\t\tconst timeSignature = config.timeSignature;\r\n\t\tlet t = 0;\r\n\t\tthis.events = [];\r\n\t\tlet steps = []\r\n\t\tlet totalPlanTime = 0;\r\n\r\n\t\tfor (let i = 0; i < plan.length; i++) {\r\n\t\t\tconst s = plan[i];\r\n\t\t\tconst beatDuration = 60 / s.bpm;\r\n\r\n\t\t\t// create  step end event\r\n\t\t\tthis.props.transport.schedule((time) => this.onPlanStep(i), t)\r\n\r\n\t\t\tconst duration = config.playMode === PlayModes.BY_BAR ? beatDuration * timeSignature * s.duration : s.duration;\r\n\t\t\tconst durationInBars = config.playMode === PlayModes.BY_BAR ? s.duration : s.duration / (beatDuration * timeSignature);\r\n\r\n\t\t\tconst bar = {\r\n\t\t\t\tbpm: s.bpm,\r\n\t\t\t\tduration: duration,\r\n\t\t\t\tdurationBars: durationInBars.toFixed(1),\r\n\t\t\t\tdurationFormatted: Utils.formatTime(duration),\r\n\t\t\t\tstepIdx: i,\r\n\t\t\t\ttrack: config.track,\r\n\t\t\t\tplayMode: s.playMode,\r\n\t\t\t\tstartTimeTicks: Tone.Time(t).toTicks()\r\n\t\t\t};\r\n\r\n\r\n\t\t\tswitch (config.playMode) {\r\n\t\t\t\tcase PlayModes.BY_TIME:\r\n\t\t\t\tcase PlayModes.SET_TIME:\r\n\t\t\t\t\tt += this.calcTimeForBpm(s.duration, s.bpm);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase PlayModes.BY_BAR:\r\n\t\t\t\t\tt = s.duration * (i + 1) + \"m\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase PlayModes.CONSTANT:\r\n\t\t\t\t\tt = Infinity\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error('Invalid playMode: ' + config.playMode)\r\n\t\t\t}\r\n\r\n\t\t\ttotalPlanTime += duration\r\n\t\t\tsteps.push(bar);\r\n\r\n\t\t}\r\n\r\n\t\tthis.props.transport.schedule((time) => this.onPlanEnd(time), t);\r\n\t\tthis.endTime = Tone.Time(t).toTicks();\r\n\r\n\t\tthis.setState(\r\n\t\t\tprevState => ({\r\n\t\t\t\ttotalPlanTime: totalPlanTime,\r\n\t\t\t\t// hmm this is shit as change in currentStepIdx doesn't move transport, this needs some thinking \r\n\t\t\t\tcurrentStepIdx: 0,\r\n\t\t\t\tsteps: steps,\r\n\t\t\t\tplayMode: config.playMode\r\n\t\t\t}),\r\n\t\t\tthis.stepChanged\r\n\t\t);\r\n\t}\r\n\r\n\tcalcTimeForBpm(seconds, bpm) {\r\n\t\treturn Tone.Time(seconds * bpm / this.baseBpm);\r\n\r\n\t}\r\n\r\n\tstartStep(stepIdx) {\r\n\t\tif (this.state.currentStepIdx !== stepIdx) {\r\n\t\t\tconst s = this.getStep(stepIdx);\r\n\t\t\tthis.props.transport.ticks = s.startTimeTicks;\r\n\t\t\tthis.setState({ currentStepIdx: stepIdx }, this.stepChanged)\r\n\t\t}\r\n\t}\r\n\r\n\tgetStep(idx) {\r\n\t\treturn this.state.steps[idx];\r\n\t}\r\n\r\n\tstepForward() {\r\n\t\t// check if we're not at the end of plan\r\n\t\tif (this.state.currentStepIdx + 1 < this.state.steps.length) {\r\n\t\t\tthis.startStep(this.state.currentStepIdx + 1)\r\n\t\t}\r\n\t}\r\n\r\n\tstepBackward() {\r\n\t\tif (this.state.currentStepIdx - 1 >= 0) {\r\n\t\t\tthis.startStep(this.state.currentStepIdx - 1)\r\n\t\t}\r\n\t}\r\n\r\n\tonPlanEnd(time) {\r\n\t\tif (this.state.playbackMode === PlaybackModes.STOP) {\r\n\t\t\tthis.props.onPlanEnd();\r\n\t\t}\r\n\t\telse if (this.state.playbackMode === PlaybackModes.REPEAT) {\r\n\t\t\tthis.startStep(0)\r\n\t\t}\r\n\t}\r\n\tstepChanged() {\r\n\t\tconst bpm = this.getCurrentStep().bpm\r\n\t\tthis.props.onPlanStep(bpm)\r\n\t}\r\n\r\n\tgetCurrentStep() {\r\n\t\tif (this.state.currentStepIdx >= this.state.steps.length) {\r\n\t\t\tthrow new Error(\"Trying to get step that doesn't exists\");\r\n\t\t}\r\n\t\treturn this.state.steps[this.state.currentStepIdx];\r\n\t}\r\n\r\n\tonPlaybackChange(newPlaybackMode) {\r\n\t\tthis.setState({ playbackMode: newPlaybackMode }, this.props.onChange);\r\n\t}\r\n\r\n\tbarRender = b => {\r\n\t\tconst cls = this.state.currentStepIdx === b.stepIdx ? \"current-step\" : \"\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => this.startStep(b.stepIdx)}\r\n\t\t\t\tclassName={\"step clickable \" + cls}\r\n\t\t\t\tkey={\"key_\" + b.stepIdx}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tb.duration !== Infinity\r\n\t\t\t\t\t\t? <>{b.durationFormatted} ({b.durationBars} {TrRange(Math.floor(b.durationBars), \"bars\")}) </>\r\n\t\t\t\t\t\t: ''}\r\n\t\t\t\t@ {b.bpm.toFixed(0)} bpm\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\tonUpDownBtn() {\r\n\t\tthis.setState({ isUpDown: !this.state.isUpDown, isRandom: false }, this.props.onChange)\r\n\t}\r\n\r\n\tonRandomBtn() {\r\n\t\tthis.setState({ isRandom: !this.state.isRandom, isUpDown: false }, this.props.onChange)\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.playMode === PlayModes.CONSTANT) {\r\n\t\t\treturn <div />\r\n\t\t}\r\n\t\treturn (\r\n\r\n\t\t\t<SimplePanel title={\"Plan\"}>\r\n\t\t\t\t<div className=\"Planner\">\r\n\t\t\t\t\t{/* <div>Next step in {this.state.stepProgress.toFixed(1)} seconds</div> */}\r\n\t\t\t\t\t<div>{Tr(\"Step progress\")} <SimpleProgress value={this.state.stepProgress * 100} /></div>\r\n\t\t\t\t\t<div>{Tr(\"Plan progress\")} <SimpleProgress value={this.state.planProgress * 100} /></div>\r\n\r\n\t\t\t\t\t{/* <Button onClick={() => this.togglePause()}>\r\n\t\t\t\t\tisPaused:\r\n\t\t\t\t\t{this.state.isPaused === true ? \"paused\" : \"normal\"}\r\n\t\t\t\t</Button> */}\r\n\r\n\t\t\t\t\t<div style={{ height: '200px', overflow: 'auto' }}>\r\n\t\t\t\t\t\t{this.state.steps.map(bar => this.barRender(bar))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"Total time:\")} {Utils.formatTime(this.state.totalPlanTime)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT}>\r\n\t\t\t\t\t<div>{Tr(\"After plan\")}</div>\r\n\t\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.STOP)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.STOP}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Stop\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.CONTINUE)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.CONTINUE}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Continue\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={() => this.onPlaybackChange(PlaybackModes.REPEAT)}\r\n\t\t\t\t\t\t\tactive={this.state.playbackMode === PlaybackModes.REPEAT}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Repeat\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t<div>{Tr(\"Step order\")}</div>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\tonClick={(e) => this.onUpDownBtn(e)}\r\n\t\t\t\t\t\t\tactive={this.state.isUpDown}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Up and Down\")}\r\n\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\toutline\r\n\t\t\t\t\t\t\t// toggle\r\n\t\t\t\t\t\t\tonClick={() => this.onRandomBtn()}\r\n\t\t\t\t\t\t\tactive={this.state.isRandom}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Shuffle\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t</SimplePanel>\r\n\r\n\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Planner;\r\n\r\nPlanner.defaultProps = {\r\n\tplaybackMode: InitPreset.playbackMode,\r\n\tplayMode: InitPreset.playMode,\r\n\tonChange: () => { },\r\n\tonPlanStep: () => { },\r\n\tonPlanEnd: () => { },\r\n\tcurrentStepIdx: NaN\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n\tInput,\r\n\tButton,\r\n\tModal,\r\n\tModalHeader,\r\n\tModalBody,\r\n\tModalFooter\r\n} from \"reactstrap\";\r\nimport Tr from \"./Locale\"\r\n\r\nclass EditPresetModal extends Component {\r\n\tstate = {\r\n\t\tmodal: false,\r\n\t\tnestedModal: false,\r\n\t\tpreset: null,\r\n\t\tpresetId: null,\r\n\t\tshowDelete: false\r\n\t};\r\n\r\n\ttoggle = () => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tmodal: !prevState.modal,\r\n\t\t\tnestedModal: false\r\n\t\t}));\r\n\t}\r\n\r\n\ttoggleNested = () => {\r\n\t\tthis.setState({ nestedModal: !this.state.nestedModal })\r\n\t}\r\n\r\n\r\n\thandleSave() {\r\n\t\tconst preset = this.state.preset;\r\n\t\tconst title = this.state.preset.title;\r\n\t\tif (title && title.length > 0) {\r\n\t\t\tthis.props.onSave(title, preset);\r\n\t\t\tthis.toggle();\r\n\t\t}\r\n\t}\r\n\r\n\tedit(preset, presetId, title) {\r\n\r\n\t\t// preset = {...presetId};\r\n\t\tif (presetId && title) {\r\n\t\t\tpreset.presetId = presetId;\r\n\t\t\tpreset.title = title;\r\n\r\n\t\t}\r\n\t\t// debugger;\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpreset: preset,\r\n\t\t\t\tshowDelete: presetId ? true : false\r\n\t\t\t},\r\n\t\t\tthis.toggle\r\n\t\t);\r\n\t}\r\n\r\n\ttitleChanged(e) {\r\n\t\tconst newTitle = e.target.value;\r\n\t\tlet preset = { ...this.state.preset };\r\n\t\tpreset.title = newTitle;\r\n\t\tthis.setState({ preset });\r\n\t}\r\n\r\n\thandleDelete() {\r\n\t\tthis.props.onDeleteBtn(this.state.preset);\r\n\t\tthis.toggle();\r\n\t}\r\n\r\n\trenderDelete() {\r\n\t\tif (this.state.showDelete === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<Button color=\"warning\" onClick={this.toggleNested}>{Tr(\"Delete\")}</Button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ marginTop: '0.5em' }}\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\tonClick={this.props.onSaveBtn}\r\n\t\t\t\t>\r\n\t\t\t\t\t{Tr(\"Save current settings\")}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tisOpen={this.state.modal}\r\n\t\t\t\t\ttoggle={this.toggle}\r\n\t\t\t\t\tclassName={this.props.className}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader toggle={this.toggle}>{Tr(\"Save Preset\")}</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tonChange={e => this.titleChanged(e)}\r\n\t\t\t\t\t\t\tplaceholder={Tr(\"Title\")}\r\n\t\t\t\t\t\t\tdefaultValue={\r\n\t\t\t\t\t\t\t\t(this.state.preset &&\r\n\t\t\t\t\t\t\t\t\tthis.state.preset.title) ||\r\n\t\t\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{/* <div className=\"code\">\r\n\t\t\t\t\t\t\t{JSON.stringify(this.state.preset)}\r\n\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t<Modal isOpen={this.state.nestedModal} toggle={this.toggleNested}>\r\n\t\t\t\t\t\t\t<ModalHeader toggle={this.toggleNested}>{Tr(\"Are you sure?\")}</ModalHeader>\r\n\t\t\t\t\t\t\t<ModalBody>{Tr(\"Are you sure to delete current preset?\")}</ModalBody>\r\n\t\t\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t\t\t<Button color=\"warning\" onClick={() => this.handleDelete()}>{Tr(\"Delete\")}</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={this.toggleNested}>{Tr(\"Cancel\")}</Button>\r\n\t\t\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={() => this.handleSave()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{Tr(\"Save\")}\r\n\t\t\t\t\t\t</Button>{\" \"}\r\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle}>\r\n\t\t\t\t\t\t\t{Tr(\"Cancel\")}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t{this.renderDelete()}\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditPresetModal;\r\n\r\n\r\nEditPresetModal.defaultProps = {\r\n\tonDeleteBtn: function (preset) { },\r\n\tonSave: function (title, preset) { },\r\n\tonSaveBtn: function (e, idx) { }\r\n};","import React, { Component } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport Tr from \"./Locale\"\r\n\r\nclass ImportDialog extends Component {\r\n    state = {\r\n        modal: false,\r\n        showInvalidFileAlert: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n\r\n    open() {\r\n        this.toggle();\r\n    }\r\n\r\n    close() {\r\n        this.setState({modal: false, showInvalidFileAlert: false})\r\n    }\r\n\r\n    onPresetsLoaded(e) {\r\n        try {\r\n            let json = JSON.parse(e.target.result);\r\n            this.setState({showInvalidFileAlert: false})\r\n            this.props.onJsonReady(json);                \r\n        }\r\n        catch (e) {\r\n            this.setState({showInvalidFileAlert: true})\r\n        }\r\n    }\r\n\r\n\r\n    onUploadBtn(e) {\r\n        var reader = new FileReader();\r\n        reader.onload = (reader) => this.onPresetsLoaded(reader);\r\n        reader.readAsText(e.target.files[0]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button\r\n                    style={{ marginTop: '0.5em' }}\r\n                    outline\r\n                    size=\"sm\"\r\n                    color=\"light\"\r\n                    onClick={this.props.onImportBtn}\r\n                >\r\n                    {Tr(\"Import from file\")}\r\n                </Button>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    toggle={this.toggle}\r\n                    className={this.props.className}\r\n                >\r\n                    <ModalHeader toggle={this.toggle}>{Tr(\"Import Presets\")}</ModalHeader>\r\n                    <ModalBody>\r\n                        <Input type='file' onChange={(e) => this.onUploadBtn(e)} />\r\n                        <Alert hidden={!this.state.showInvalidFileAlert} color=\"danger\">\r\n                            {Tr(\"I can't read this file\")}\r\n                        </Alert>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={this.toggle}>\r\n                            {Tr(\"Cancel\")}\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default ImportDialog;\r\n\r\n\r\nImportDialog.defaultProps = {\r\n\tonJsonReady: function () { }\r\n};\r\n","\r\nconst ColorThemes = {\r\n    'ambient' : {\r\n        3: '#FF6355',\r\n        2: '#E1537F',\r\n        1: '#AC5696',\r\n        0: '#705A94'\r\n        // 1: '#40557B',\r\n        // 0: '#2F4858'\r\n    },\r\n    'blueish' : {\r\n        0: '#D1D2F9',\r\n        1: '#A3BCF9',\r\n        2: '#7796CB',\r\n        3: '#576490'\r\n    },\r\n    'rainbow': {\r\n        0: '#FF715B',\r\n        1: '#F9CB40',\r\n        2: '#BCED09',\r\n        3: '#2F52E0'\r\n    }\r\n}\r\n\r\nconst Config = {\r\n    TRACKS_NUMBER: 4,\r\n    MAXIMUM_TIMESIGNATURE: 24,\r\n    MIN_BPM: 10,\r\n    MAX_BPM: 1200,\r\n    PROGRESS_UPDATE_FPS: 30, // TODO: Set this according to device. higher values might cause slower devices to stutter\r\n    COLOR_PALETTE: ColorThemes['rainbow']\r\n}\r\nexport default Config;\r\n\r\n\r\n// old \r\n// 0: '#ff6355',\r\n// \t1: '#ff7155',\r\n// \t2: '#ff8055',\r\n// \t3: '#ff8e55',\r\n// \t4: '#ff9955',\r\n// \t5: '#ff9c55',\r\n// \t6: '#ffaa55'","import React, { Component } from \"react\";\r\nimport { Button, Container, Row, Col } from \"reactstrap\";\r\nimport EditPresetModal from \"./EditPresetModal\"\r\nimport ImportDialog from \"./ImportDialog\"\r\nimport { PresetsLib, InitPreset } from './PresetsLib'\r\nimport { Samples } from \"./Instruments\"\r\nimport Tr from './Locale'\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport Utils from \"./Utils\"\r\nimport Config from \"./Config\";\r\n\r\nclass PresetsManager extends Component {\r\n\tstate = {\r\n\t\tshowDelete: [],\r\n\t\tshowEdit: [],\r\n\t\tuserPresets: []\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst storedPresets = localStorage.getItem('userPresets');\r\n\t\tthis.state.userPresets = storedPresets ? JSON.parse(storedPresets) : [];\r\n\r\n\t\tthis.state.showDelete = this.state.userPresets ? Array(this.state.userPresets.length).fill(false) : []\r\n\t\tthis.state.showEdit = this.state.userPresets ? Array(this.state.userPresets.length).fill(false) : []\r\n\t}\r\n\r\n\t// Old version of app didn't use certain properties.\r\n\t// If user did store some ancient presets in cookie this will make it work again\r\n\tvalidatePreset(preset) {\r\n\r\n\t\tpreset.byBarInterval = preset.byBarInterval || preset.interval || InitPreset.byBarInterval;\r\n\t\tpreset.byTimeInterval = preset.byTimeInterval || preset.interval || InitPreset.byTimeInterval;\r\n\t\t// change from accents into track\r\n\t\tif (!preset.track) {\r\n\t\t\tlet track = [];\r\n\t\t\tpreset.accents.map(item => {\r\n\t\t\t\ttrack.push([item])\r\n\t\t\t\t// expected te return value in arrow function\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\tpreset.track = track;\r\n\t\t}\r\n\r\n\r\n\t\t// if no timeSignature then we're dealing with tracks made before polyrythm support. Fix them now.\r\n\t\tif (!preset.timeSignature) {\r\n\t\t\tconst timeSignature = preset.track.length\r\n\t\t\tpreset.timeSignature = timeSignature\r\n\r\n\t\t\tvar track = new Array(Config.TRACKS_NUMBER).fill(0).map(x => new Array(timeSignature).fill(0));\r\n\r\n\r\n\t\t\tfor (let beatIdx = 0; beatIdx < preset.track.length; beatIdx++) {\r\n\t\t\t\tconst beats = preset.track[beatIdx];\r\n\t\t\t\tfor (let beat = 0; beat < beats.length; beat++) {\r\n\t\t\t\t\ttrack[beats[beat]][beatIdx] = 1;\t// set volume to one, effectively enabling it\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpreset.track = track;\r\n\t\t}\r\n\r\n\t\tif (!preset.samples) {\r\n\t\t\tpreset.samples = this.convertInstrumentKeyToSamples(preset.instrumentKey)\r\n\t\t}\r\n\r\n\t\treturn preset;\r\n\t}\r\n\r\n\tconvertInstrumentKeyToSamples(instrumentKey) {\r\n\t\t// desired result: \"samples\": [{instrumentKey: 'tabla', file: 'dha-slide.wav' }, {instrumentKey: 'electrokit', file: 'Kick.wav'}, {instrumentKey: 'metronome', file: 'tap.wav'}],\r\n\t\tconst samples = Samples.filter(el => el.instrumentKey === instrumentKey);\r\n\t\treturn samples;\r\n\t}\r\n\r\n\tonPresetClick(preset) {\r\n\t\tthis.props.onSelect(this.validatePreset(preset));\r\n\t}\r\n\r\n\tonSavePreset(title, o) {\r\n\t\tconst preset = { title: title, ...o }\r\n\r\n\t\t// if it's got presetId then overwrite preset with such id\r\n\t\t// if no presetId then create it here\r\n\t\tif (preset.presetId === undefined) {\r\n\t\t\tlet presetId = 1;\r\n\t\t\tif (this.state.userPresets.length > 0) {\r\n\t\t\t\t// find max and add 1\r\n\t\t\t\tpresetId = Math.max.apply(Math, this.state.userPresets.map(function (p) { return p.presetId; }));\r\n\t\t\t\tpresetId++\r\n\t\t\t}\r\n\r\n\t\t\t// assign id\r\n\t\t\tpreset.presetId = presetId;\r\n\t\t}\r\n\r\n\r\n\t\t// update date\r\n\t\tpreset.savedDtm = new Date();\r\n\r\n\t\tlet userPresets = this.state.userPresets;\r\n\r\n\t\t// if (!userPresets) {\r\n\t\t// \tuserPresets = [];\r\n\t\t// }\r\n\r\n\t\t// overwrite by presetId\r\n\t\tlet idx = this.state.userPresets.findIndex(o => o.presetId === preset.presetId);\r\n\r\n\t\tif (idx < 0) {\r\n\t\t\tuserPresets.push(preset)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tuserPresets[idx] = preset;\r\n\t\t}\r\n\r\n\r\n\t\tthis.saveInLocalStorage(userPresets);\r\n\t\t// window.localStorage.setItem(preset.title, preset);\r\n\t}\r\n\r\n\tsaveInLocalStorage(presets) {\r\n\t\tlocalStorage.setItem('userPresets', JSON.stringify(presets))\r\n\t\tthis.setState({ userPresets: presets })\r\n\t}\r\n\r\n\tshowDeleteBtn(e, idx) {\r\n\t\tlet showDelete = { ...this.state };\r\n\t\tshowDelete[idx] = true;\r\n\t\tthis.setState({ showDelete });\r\n\t}\r\n\r\n\tshowEditBtn(e, idx, presetId) {\r\n\t\tlet showEdit = { ...this.state };\r\n\t\tshowEdit[idx] = true;\r\n\t\tthis.setState({ showEdit });\r\n\t}\r\n\thideEditBtn(e) {\r\n\t\tthis.setState({ showEdit: false })\r\n\t}\r\n\r\n\tonPresetDelete(preset) {\r\n\t\tlet idx = this.state.userPresets.findIndex(o => o.presetId === preset.presetId);\r\n\t\tlet newPresets = this.state.userPresets.slice();\r\n\r\n\t\t// let idx = this.state.userPresets.indexOf(preset)\r\n\t\tif (idx < 0) {\r\n\t\t\tthrow new Error(\"Selected preset \" + preset.title + \" has not been found in the store\")\r\n\t\t}\r\n\r\n\t\t// remove preset\r\n\t\tnewPresets.splice(idx, 1);\r\n\t\tthis.saveInLocalStorage(newPresets);\r\n\t}\r\n\r\n\tonPresetEdit(e, idx) {\r\n\t\tvar p = this.props.getPreset();\r\n\r\n\t\tif (idx !== undefined) {\r\n\r\n\t\t\tthis.refs.presetEditor.edit(p, this.state.userPresets[idx].presetId, this.state.userPresets[idx].title)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.refs.presetEditor.edit(p)\r\n\t\t}\r\n\t}\r\n\r\n\tonImportBtn(e) {\r\n\t\tthis.refs.importDialog.open()\r\n\t}\r\n\r\n\trenderUserPresets(userPresets) {\r\n\t\tif (userPresets.length === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{Tr(\"User presets\")}:\r\n\t\t\t\t</Row>\r\n\t\t\t\t{userPresets.map((item, idx) => (\r\n\t\t\t\t\t<Row className=\"presetItem clickable\"\r\n\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Col style={{ textAlign: 'left' }} >\r\n\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col xs=\"auto\" className=\"userPresetSavedDtm\">\r\n\t\t\t\t\t\t\t{Utils.toLocaleDateTime(item.savedDtm)}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Button size=\"sm\" outline\r\n\t\t\t\t\t\t\t\tonClick={(e) => this.onPresetEdit(e, idx)}>\r\n\t\t\t\t\t\t\t\t{Tr(\"Edit\")}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t{/* // <div className='editBtn clickable' onClick={(e) =>}></div> */}\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t))}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonExport() {\r\n\r\n\t\tconst a = document.createElement('a');\r\n\t\tconst file = new Blob([JSON.stringify(this.state.userPresets)], { type: 'application/json' });\r\n\t\ta.href = URL.createObjectURL(file);\r\n\t\ta.download = 'presets.json';\r\n\t\ta.click();\r\n\t}\r\n\r\n\tonPresetsImport(presets) {\r\n\t\tpresets.forEach(p => {\r\n\t\t\tp = this.validatePreset(p);\r\n\t\t\t// unset presetId so we won't overwrite anything that's there already\r\n\t\t\tp.presetId = undefined\r\n\t\t\tthis.onSavePreset(p.title, p);\r\n\t\t})\r\n\t\t\r\n\t\tthis.refs.importDialog.close();\r\n\t\t// onSavePreset(preset.title, presets)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst userPresetsJson = localStorage.getItem('userPresets');\r\n\t\tlet userPresets = userPresetsJson ? JSON.parse(userPresetsJson) : [];\r\n\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"PresetsManager\" title={Tr(\"Presets\")}>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t{PresetsLib.map((item, idx) => {\r\n\t\t\t\t\t\tif (item.isHeader) {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tclassName={\"presetHeader\"}\r\n\t\t\t\t\t\t\t\t\tkey={\"header_\" + idx}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{Tr(item.title)}:\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Row\r\n\t\t\t\t\t\t\t\t\tonClick={() => this.onPresetClick(item)}\r\n\t\t\t\t\t\t\t\t\tclassName={\"presetItem clickable\"}\r\n\t\t\t\t\t\t\t\t\tkey={\"preset_\" + idx}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{item.title}\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{this.renderUserPresets(userPresets)}\r\n\t\t\t\t\t{/* center button */}\r\n\t\t\t\t\t<Row style={{ justifyContent: 'center' }}>\r\n\t\t\t\t\t\t<EditPresetModal ref='presetEditor' onDeleteBtn={(preset) => this.onPresetDelete(preset)} onSaveBtn={(e, idx) => this.onPresetEdit(e, idx)} onSave={(title, preset) => this.onSavePreset(title, preset)} />\r\n\t\t\t\t\t\t<ImportDialog ref='importDialog' onImportBtn={() => this.onImportBtn()} onJsonReady={(presets) => this.onPresetsImport(presets)}/>\r\n\t\t\t\t\t\t<Button style={{ marginTop: '0.5em' }} outline  size=\"sm\" color=\"light\" onClick={() => this.onExport()}>{Tr(\"Export to file\")}</Button>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PresetsManager;\r\n\r\nPresetsManager.defaultProps = {\r\n\tonSelect: function (preset) { }\r\n};\r\n","import React, { Component } from 'react';\r\n// import { accentColor } from './AccentTypes';\r\nimport { InitPreset } from './PresetsLib'\r\nimport Config from './Config';\r\n\r\nclass SvgClock extends Component {\r\n    state = {\r\n        track: this.props.track,\r\n        timeSignature: this.props.timeSignature\r\n    }\r\n    colorEmpty = \"#333\";\r\n    strokeColor = \"#444\";\r\n    strokeWidth = \"0.001em\"\r\n\r\n    setAccents(track) {\r\n        this.setState({ track: track })\r\n        // this.drawSvg()\r\n    }\r\n\r\n    getCoordinatesForPercent(percent, r = 1) {\r\n        const x = r * Math.cos(2 * Math.PI * percent);\r\n        const y = r * Math.sin(2 * Math.PI * percent);\r\n        return [x, y];\r\n    }\r\n\r\n    drawSlices(radius, trackIdx) {\r\n        // Drawing pie charts by David Gilbertson, taken from https://medium.com/hackernoon/a-simple-pie-chart-in-svg-dbdd653b6936\r\n        // if (this.props.track[trackIdx] === undefined) {\r\n        //     // debugger\r\n        // }\r\n        let pctStep = 1 / this.props.track[trackIdx].length;\r\n        let slices = [];\r\n        // let step = pctStep;\r\n        this.props.track[trackIdx].forEach((volume, subIdx) => {\r\n            slices.push({ percent: pctStep, color: volume > 0 ? Config.COLOR_PALETTE[trackIdx] : this.colorEmpty });\r\n\r\n            // if (trackColumn > 0)\r\n\r\n            // step += pctStep;\r\n        })\r\n        let cumulativePercent = 0;\r\n\r\n        let paths = [];\r\n        slices.forEach((slice, idx) => {\r\n            // destructuring assignment sets the two variables at once\r\n            const [startX, startY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n            // each slice starts where the last slice ended, so keep a cumulative percent\r\n            cumulativePercent += slice.percent;\r\n\r\n            const [endX, endY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n            // if the slice is more than 50%, take the large arc (the long way around)\r\n            const largeArcFlag = slice.percent > .5 ? 1 : 0;\r\n\r\n            // create an array and join it just for code readability\r\n            const pathData = [\r\n                `M ${startX} ${startY}`, // Move\r\n                `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY}`, // Arc\r\n                `L 0 0`, // Line\r\n            ].join(' ');\r\n\r\n            // create a <path> and append it to the <svg> element\r\n            paths.push(\r\n                <path key={\"pie_\" + idx} d={pathData} fill={slice.color} stroke={this.strokeColor} strokeWidth={this.strokeWidth} />\r\n            )\r\n        });\r\n        return paths\r\n    }\r\n\r\n    // OLD_drawSlices(radius, filter) {\r\n    //     // Drawing pie charts by David Gilbertson, taken from https://medium.com/hackernoon/a-simple-pie-chart-in-svg-dbdd653b6936\r\n    //     let pctStep = 1 / this.props.track.length;\r\n    //     let slices = [];\r\n    //     // let step = pctStep;\r\n    //     this.props.track.forEach(trackColumn => {\r\n    //         const idx = trackColumn.indexOf(filter);\r\n    //         slices.push({ percent: pctStep, color: idx >= 0 ? accentColor[filter] : this.colorEmpty });\r\n    //         // step += pctStep;\r\n    //     })\r\n    //     let cumulativePercent = 0;\r\n\r\n    //     let paths = [];\r\n    //     slices.forEach((slice, idx) => {\r\n    //         // destructuring assignment sets the two variables at once\r\n    //         const [startX, startY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n    //         // each slice starts where the last slice ended, so keep a cumulative percent\r\n    //         cumulativePercent += slice.percent;\r\n\r\n    //         const [endX, endY] = this.getCoordinatesForPercent(cumulativePercent, radius);\r\n\r\n    //         // if the slice is more than 50%, take the large arc (the long way around)\r\n    //         const largeArcFlag = slice.percent > .5 ? 1 : 0;\r\n\r\n    //         // create an array and join it just for code readability\r\n    //         const pathData = [\r\n    //             `M ${startX} ${startY}`, // Move\r\n    //             `A ${radius} ${radius} 0 ${largeArcFlag} 1 ${endX} ${endY}`, // Arc\r\n    //             `L 0 0`, // Line\r\n    //         ].join(' ');\r\n\r\n    //         // create a <path> and append it to the <svg> element\r\n    //         paths.push(\r\n    //             <path key={\"pie_\" + idx} d={pathData} fill={slice.color} stroke={this.strokeColor} strokeWidth={this.strokeWidth}  />\r\n    //         )\r\n    //     });\r\n    //     return paths\r\n    // }\r\n\r\n    drawText() {\r\n        let labels = [];\r\n        const pctStep = 1 / this.props.timeSignature;\r\n        let cumulativePercent = 0;\r\n\r\n        for (let i = 0; i < this.props.timeSignature; i++) {\r\n\r\n            let [x, y] = this.getCoordinatesForPercent(cumulativePercent, 0.9);\r\n            // tweak position of labels\r\n            x -= 0.06\r\n            labels.push(\r\n                <text x={x} y={y} key={\"label_\" + i} textAnchor=\"middle\" transform={\"rotate(90, \" + x + \", \" + y + \")\"} className=\"svgText\">{i + 1}</text>\r\n            )\r\n            cumulativePercent += pctStep\r\n        }\r\n\r\n        return <g>{labels}</g>;\r\n    }\r\n\r\n    setProgress(progress) {\r\n        this.line.style.transform = 'rotate(' + progress * 360 + 'deg)'\r\n    }\r\n    render() {\r\n        let radiusIncrement = 0.5 / Config.TRACKS_NUMBER;\r\n\r\n        let circles = [];\r\n\r\n        for (let i = 0; i < this.props.track.length; i++) {\r\n            // main circles\r\n            circles.push(this.drawSlices(0.8 - radiusIncrement * i, i));\r\n        }\r\n        // inner gray circle\r\n        circles.push(\r\n            <circle key=\"innerCircle\" cx=\"0\" cy=\"0\" r={0.8 - radiusIncrement * Config.TRACKS_NUMBER} fill={this.colorEmpty} stroke={this.strokeColor} strokeWidth={this.strokeWidth} />\r\n        )\r\n\r\n        return (\r\n            <div ref={el => (this.container = el)} className=\"visClockContainer\">\r\n                <svg viewBox=\"-1 -1 2 2\" ref={el => (this.svg = el)}>\r\n                    <g style={{ transform: 'rotate(-90deg)' }}>\r\n                        {\r\n                            circles\r\n                        }\r\n                        {this.drawText()}\r\n                        <line ref={el => (this.line = el)} strokeLinecap=\"round\" x1=\"0\" y1=\"0\" x2=\".7\" y2=\"0\" stroke=\"rgba(255,255,255,0.5)\" strokeWidth=\"0.1\" style={{ transform: 'rotate(' + this.props.partProgress * 360 + 'deg)' }} />\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SvgClock;\r\n\r\nSvgClock.defaultProps = {\r\n    track: InitPreset.track,\r\n    timeSignature: InitPreset.timeSignature\r\n}","import React, { Component } from 'react';\r\nimport Slider from 'rc-slider'\r\nimport regression from 'regression';\r\nimport { Badge, Button } from 'reactstrap'\r\n\r\n\r\nclass GeometricSlider extends Component {\r\n    state = {\r\n        value: this.props.defaultValue,\r\n        regression: undefined\r\n    };\r\n\r\n    constructor(props) {\r\n        // TODO:  \r\n        // currently it works only for min=1 only\r\n        super(props);\r\n\r\n        const d = [[0, this.props.min], [100, this.props.max]];\r\n\r\n        this.state.regression = regression.exponential(d, { precision: 10 })\r\n\r\n        this.prepareMarks();\r\n\r\n        this.state.value = this.props.defaultValue;\r\n\r\n        this.state.btnStep = props.btnStep || 1;\r\n    }\r\n\r\n    onMinusClick = () => {\r\n        const newValue = this.state.value - this.state.btnStep;\r\n        this.setState({ value: newValue }, this.props.onChange(newValue))\r\n    }\r\n\r\n    onPlusClick = () => {\r\n        const newValue = this.state.value + this.state.btnStep;\r\n        this.setState({ value: newValue }, this.props.onChange(newValue))\r\n    }\r\n\r\n\r\n    prepareMarks() {\r\n        this.marks = {};\r\n\r\n        for (let i = 0; i < this.props.marksAt.length; i++) {\r\n            this.marks[this.findX(this.props.marksAt[i])] = this.props.marksAt[i];\r\n        }\r\n    }\r\n\r\n    onChange(v) {\r\n        const value = Math.floor(this.state.regression.predict(v)[1]);\r\n        this.setState({ value: value })\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    findX(y) {\r\n        // y = e^bx ==> x = ln(y) / b\r\n        return Math.log(y) / this.state.regression.equation[1];\r\n    }\r\n\r\n    setValue(v) {\r\n        this.setState({ value: v })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onMinusClick}>-</Button>\r\n                    <Badge color=\"light\" onClick={this.onBadgeClick} className=\"d-i\">\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n                    </Badge>\r\n                    <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onPlusClick}>+</Button>\r\n                </div>\r\n                <Slider ref=\"slider\" included={false} value={this.findX(this.state.value)} style={{ height: '45px' }} onChange={(v) => this.onChange(v)} min={0} max={100} step={0.5} marks={this.marks} />\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default GeometricSlider;\r\n\r\nGeometricSlider.defaultProps = {\r\n    marksNum: 6,\r\n    marksStyle: {\r\n        color: '#ccc'\r\n    },\r\n    desc: '',\r\n    badgeFormatter: function (v) { return v; },\r\n    markFormatter: function (v) { return v; },\r\n    marksAt: []\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Alert\r\n} from \"reactstrap\";\r\nimport Tr from \"../Locale\"\r\n\r\nclass RangeEditInPlace extends Component {\r\n    state = {\r\n        modal: false,\r\n        value: this.props.value,\r\n        showInvalidRange: false\r\n    };\r\n\r\n    open() {\r\n        this.setState({ modal: true, value: this.props.value, showInvalidRange: false })\r\n    }\r\n\r\n    close() {\r\n        this.setState({ modal: false })\r\n    }\r\n\r\n    onOk() {\r\n        if (this.state.value.min >= this.state.value.max) {\r\n            this.setState({ showInvalidRange: true })\r\n            return\r\n        }\r\n        this.props.onChange(this.state.value)\r\n        this.close();\r\n\r\n    }\r\n\r\n    onMinValueChange(e) {\r\n        let v = Number(e.target.value);\r\n\r\n        let value = this.state.value;\r\n        value.min = v;\r\n        this.setState({ value: value })\r\n    }\r\n\r\n    onMaxValueChange(e) {\r\n        let v = Number(e.target.value);\r\n\r\n        let value = this.state.value;\r\n        value.max = v;\r\n        this.setState({ value: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    className={this.props.className}\r\n                >\r\n                    <ModalBody>\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\">{Tr(\"From\")}</InputGroupAddon>\r\n                            <Input min={this.props.min} max={this.props.max} type=\"number\" value={this.state.value.min} onChange={(e) => this.onMinValueChange(e)} step=\"1\" />\r\n                        </InputGroup>\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\">{Tr(\"To\")}</InputGroupAddon>\r\n                            <Input min={this.props.min} max={this.props.max} type=\"number\" value={this.state.value.max} onChange={(e) => this.onMaxValueChange(e)} step=\"1\" />\r\n                        </InputGroup>\r\n                        <Alert hidden={!this.state.showInvalidRange} color=\"danger\">\r\n                            {Tr(\"Invalid range!\")}\r\n                        </Alert>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={() => this.onOk()}>\r\n                            {Tr(\"OK\")}\r\n                        </Button>\r\n\r\n                        <Button color=\"secondary\" onClick={() => this.close()}>\r\n                            {Tr(\"Cancel\")}\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default RangeEditInPlace;\r\n\r\nRangeEditInPlace.defaultProps = {\r\n    onChange: function () { },\r\n    title: ''\r\n};\r\n","import React from \"react\";\r\nimport { Range } from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\nimport RangeEditInPlace from \"./RangeEditInPlace\";\r\n\r\nclass AdvancedRange extends Range {\r\n\tonBadgeClick() {\r\n\t\tthis.refs.editor.open();\r\n\t}\r\n\r\n\tonEdit(v) {\r\n\t\tthis.setState({ bounds: [v.min, v.max] }, () => this.props.onAfterChange(this.state.bounds))\r\n\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tonClick={this.props.editInPlace ? () => this.onBadgeClick() : function () { }}\r\n\t\t\t\t\t\tclassName={this.props.editInPlace ? \"clickable\" : ''}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.bounds[0]} - {this.state.bounds[1]}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t\t<RangeEditInPlace\r\n\t\t\t\t\t\tref={\"editor\"}\r\n\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t\tvalue={{ min: this.state.bounds[0], max: this.state.bounds[1] }}\r\n\t\t\t\t\t\tmin={this.props.min}\r\n\t\t\t\t\t\tmax={this.props.max}\r\n\t\t\t\t\t\tonChange={(v) => this.onEdit(v)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t{super.render()}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AdvancedRange;\r\n\r\n// inherit props from base class\r\nAdvancedRange.defaultProps = Object.assign({}, Range.defaultProps, {\r\n\teditInPlace: false,\r\n\ttitle: ''\r\n});","import React, { Component } from \"react\";\r\nimport {\r\n    Input,\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from \"reactstrap\";\r\nimport Tr from \"./../Locale\"\r\n\r\nclass EditInPlace extends Component {\r\n    state = {\r\n        modal: false,\r\n        value: this.props.value\r\n    };\r\n\r\n    open() {\r\n        this.setState({modal: true, value: this.props.value})\r\n    }\r\n\r\n    close() {\r\n        this.setState({ modal: false })\r\n    }\r\n\r\n    onOk() {\r\n        this.props.onChange(this.state.value)\r\n        this.close();\r\n    }\r\n\r\n    onValueChange(e, v) {\r\n        let val = Number(e.target.value);\r\n        this.setState({ value: val })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    isOpen={this.state.modal}\r\n                    className={this.props.className}\r\n                >\r\n                    <ModalBody>\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\">{this.props.title}</InputGroupAddon>\r\n                            <Input min={this.props.min} max={this.props.max} type=\"number\" value={this.state.value} onChange={(e) => this.onValueChange(e)} step=\"1\" />\r\n                        </InputGroup>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"secondary\" onClick={() => this.onOk()}>\r\n                            {Tr(\"OK\")}\r\n                        </Button>\r\n\r\n                        <Button color=\"secondary\" onClick={() => this.close()}>\r\n                            {Tr(\"Cancel\")}\r\n                        </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default EditInPlace;\r\n\r\n\r\nEditInPlace.defaultProps = {\r\n    onChange: function () { },\r\n    title: ''\r\n};\r\n","import React from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge, Button } from \"reactstrap\";\r\nimport EditInPlace from \"./EditInPlace\"\r\n\r\nclass AdvancedSlider extends Slider {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state.btnStep = props.btnStep || 1;\r\n\t}\r\n\tonMinusClick = () => {\r\n\t\tconst newValue = this.state.value - this.state.btnStep;\r\n\t\tthis.setState({ value: newValue }, this.props.onChange(newValue))\r\n\t}\r\n\r\n\tonPlusClick = () => {\r\n\t\tconst newValue = this.state.value + this.state.btnStep;\r\n\t\tthis.setState({ value: newValue }, this.props.onChange(newValue))\r\n\t}\r\n\r\n\tonEdit(value) {\r\n\t\tif (value >= this.props.min && value <= this.props.max) {\r\n\t\t\tthis.setState({ value: value }, this.props.onChange(value));\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"advancedSlider\">\r\n\t\t\t\t\t{this.props.disableBtns === true ? '' : <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onMinusClick}>-</Button>}\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tonClick={this.props.editInPlace ? (e) => this.onBadgeClick(e) : function(){}}\r\n\t\t\t\t\t\tcolor=\"light\"\r\n\t\t\t\t\t\tclassName={this.props.editInPlace? \"clickable\" : ''}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state.value}\r\n\t\t\t\t\t\t{/* {this.props.badgeFormatter(this.state.value)} */}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t\t{this.props.editInPlace ? <EditInPlace ref={\"editor\"} title={this.props.title} value={this.state.value} min={this.props.min} max={this.props.max} onChange={(v) => this.onEdit(v)} /> : ''}\r\n\t\t\t\t\t{this.props.disableBtns === true ? '' : <Button size=\"sm\" outline className=\"inlineBtn\" onClick={this.onPlusClick}>+</Button>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: \"30px\" }}>\r\n\t\t\t\t\t<div>{super.render()}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonBadgeClick(e) {\r\n\t\tif (this.refs.editor) {\r\n\t\t\tthis.refs.editor.open();\r\n\t\t}\r\n\t\t// TODO attach editorInPlace\r\n\t}\r\n}\r\n\r\nexport default AdvancedSlider;\r\n\r\n// inherit props from base class\r\nAdvancedSlider.defaultProps = Object.assign({}, Slider.defaultProps, {\r\n\teditInPlace: false,\r\n\ttitle: ''\r\n});","import React, { Component } from \"react\";\r\nimport Slider from \"rc-slider\";\r\nimport { Badge } from \"reactstrap\";\r\n\r\nclass DiscreteSlider extends Component {\r\n\r\n    state = {\r\n        value: undefined,\r\n        innerValue: 0\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        // helpful to display marks properly (need to be an object)\r\n        this.state.innerMarks = {};\r\n        Object.values(this.props.marks).map((el, idx)  => {\r\n            this.state.innerMarks[idx] = {label: el.label};\r\n            return true;\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // TODO: apply this componentDidUpdate to remaining custom sliders\r\n        var value = this.props.value;\r\n        var theValue = value !== undefined ? value : prevState.value;\r\n        var innerValue = Object.keys(this.props.marks).indexOf(theValue+ '');\r\n        \r\n        if ( innerValue !== prevState.innerValue) {\r\n            this.setState({innerValue: innerValue, value: value});\r\n        }\r\n    }\r\n\r\n    onSliderChange(sliderValue) {\r\n        const value = Object.values(this.props.marks)[sliderValue].value;\r\n        this.setState({ innerValue: sliderValue, value: value })\r\n        this.props.onChange(value)\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <Badge\r\n                        color=\"light\"\r\n                        className=\"d-i\"\r\n                    >\r\n                        {this.props.badgeFormatter(this.state.value)}\r\n                    </Badge>\r\n                </div>\r\n                {/* render it slightly narrower so we fit marks which usually falls outside the container */}\r\n                <div style={{ height: \"3.5em\", width: '95%', margin: 'auto', whiteSpace: 'nowrap' }}>\r\n                    <Slider ref=\"slider\"\r\n                        included={false}\r\n                        value={this.state.innerValue}\r\n                        style={{ height: '3.5em' }}\r\n                        onChange={(v) => this.onSliderChange(v)}\r\n                        min={0}\r\n                        max={Object.keys(this.props.marks).length - 1}\r\n                        step={1}\r\n                        marks={this.state.innerMarks} />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default DiscreteSlider;\r\n\r\n\r\nDiscreteSlider.defaultProps = {\r\n    badgeFormatter: function (v) { return v; },\r\n    markFormatter: function (v) { return v; },\r\n    defaultValue: 0\r\n}","import React, { Component } from \"react\";\r\nimport SimplePanel from \"./SimplePanel\";\r\nimport {\r\n\tButtonGroup,\r\n\tButton,\r\n\tCollapse,\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownItem,\r\n\tDropdownMenu\r\n} from \"reactstrap\";\r\nimport { PlayModes } from \"./PlayModes\";\r\nimport GeometricSlider from \"./Sliders/GeometricSlider\";\r\nimport AdvancedRange from \"./Sliders/AdvancedRange\"\r\nimport AdvancedSlider from \"./Sliders/AdvancedSlider\"\r\nimport DiscreteSlider from \"./Sliders/DiscreteSlider\"\r\nimport Utils from \"./Utils\";\r\nimport { InitPreset } from \"./PresetsLib\";\r\nimport Tr, { TrRange } from \"./Locale\"\r\nimport Config from \"./Config\";\r\nclass ModePanel extends Component {\r\n\tstate = {\r\n\t\tbpmStep: this.props.bpmStep,\r\n\t\tbpmRange: this.props.bpmRange,\r\n\t\t// currentBpm: this.props.bpmRange[0],\r\n\t\tplaybackMode: this.props.playbackMode,\r\n\t\tplayMode: this.props.playMode,\r\n\t\tstepsNum: this.props.stepsNum,\r\n\t\texerciseTime: this.props.exerciseTime,\r\n\t\tbpmStepDropdownOpen: false,\r\n\t\tbyTimeInterval: this.props.byTimeInterval,\r\n\t\tbyBarInterval: this.props.byBarInterval,\r\n\t\tconstantBpmSlider: this.props.constantBpmSlider\r\n\t}\r\n\r\n\tonAfterChange(e) {\r\n\t\tthis.props.onChange()\r\n\t}\r\n\r\n\tonModeChange(newMode) {\r\n\r\n\t\tlet newState = {...this.state};\r\n\r\n\t\t// maintain current bpm when changing to CONSTANT playmode\r\n\t\tif (newMode === PlayModes.CONSTANT && newMode !== this.state.playMode) {\r\n\t\t\tnewState.constantBpmSlider =  this.props.transport.bpm.value;\r\n\t\t}\r\n\t\tnewState.playMode = newMode;\r\n\t\tthis.setState(newState, this.onAfterChange);\r\n\t}\r\n\r\n\r\n\r\n\tonBpmRangeChange(bpmRange) {\r\n\t\tthis.setState({ bpmRange: bpmRange }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBpmSliderChange = (value) => {\r\n\t\tthis.setState({ constantBpmSlider: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBpmStepChange() {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tbpmStepDropdownOpen: !prevState.bpmStepDropdownOpen\r\n\t\t}));\r\n\t}\r\n\r\n\tonBpmStepSelect(value) {\r\n\t\tthis.setState({ bpmStep: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tsetValue(o) {\r\n\t\tthis.refs.byBarSlider.setValue(o.byBarInterval || InitPreset.byBarInterval)\r\n\t\tthis.refs.byTimeSlider.setValue(o.byTimeInterval || InitPreset.byTimeInterval)\r\n\t\t// this.refs.exerciseTimeSlider.setValue(o.exerciseTime || InitPreset.exerciseTime);\r\n\r\n\t\tthis.refs.bpmRange.setState({ bounds: o.bpmRange })\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tplayMode: o.playMode,\r\n\t\t\t\tplaybackMode: o.playbackMode || this.state.playbackMode,\r\n\t\t\t\tbpmStep: o.bpmStep,\r\n\t\t\t\texerciseTime: o.exerciseTime || this.state.exerciseTime,\r\n\t\t\t\tstepsNum: o.stepsNum || this.state.stepsNum,\r\n\t\t\t\tbyBarInterval: o.byBarInterval,// || this.state.byBarInterval,\r\n\t\t\t\tbyTimeInterval: o.byTimeInterval, //|| this.state.byTimeInterval,\r\n\t\t\t\tbpmRange: o.bpmRange,\r\n\r\n\t\t\t\tconstantBpmSlider: o.constantBpmSlider || this.state.constantBpmSlider\r\n\r\n\t\t\t},\r\n\t\t\tthis.onAfterChange\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tonTimeIntervalChange(v) {\r\n\t\tthis.setState({ byTimeInterval: v, interval: v }, this.onAfterChange);\r\n\t}\r\n\r\n\tonBarIntervalChange(v) {\r\n\t\tthis.setState({ byBarInterval: v, interval: v }, this.onAfterChange);\r\n\t}\r\n\r\n\tbyBarFormatter(barsNum) {\r\n\t\treturn barsNum + \" \" + TrRange(barsNum, \"bars\");\r\n\t}\r\n\r\n\trenderIncreaseBpmDropdown() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ButtonDropdown\r\n\t\t\t\t\tstyle={{ margin: \"0px 5px\" }}\r\n\t\t\t\t\tisOpen={this.state.bpmStepDropdownOpen}\r\n\t\t\t\t\ttoggle={() => this.onBpmStepChange()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DropdownToggle caret size=\"sm\" outline color=\"light\">\r\n\t\t\t\t\t\t{this.state.bpmStep}\r\n\t\t\t\t\t</DropdownToggle>\r\n\t\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t\t{[1,2,3,5,10,15,20,30,50,100].map(el => {\r\n\t\t\t\t\t\t\treturn <DropdownItem key={\"bpm_\"+el} onClick={() => {this.onBpmStepSelect(el)}}>{el}</DropdownItem>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</DropdownMenu>\r\n\t\t\t\t</ButtonDropdown>\r\n\t\t\t\tbpm\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tonStepsSliderChange(value) {\r\n\t\tthis.setState({ stepsNum: value }, this.onAfterChange);\r\n\t}\r\n\r\n\tonExerciseTimeSliderChange(value) {\r\n\t\tthis.setState({ exerciseTime: value }, this.onAfterChange);\r\n\t}\r\n\r\n\r\n\r\n\trenderTimeSlider() {\r\n\t\tconst marks = {}\r\n\t\tconst mArr = [300,600,900,1200,1800,3600,7200,10800]\r\n\r\n\t\tmArr.map(el => {\r\n\t\t\tmarks[el] = {value: el, label: Utils.formatTime(el)};\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"Exercise Time\")}\r\n\t\t\t<DiscreteSlider\r\n\t\t\t\tref=\"exerciseTimeSlider\"\r\n\t\t\t\tbadgeFormatter={Utils.formatTimeLong}\r\n\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\tmarks={marks}\r\n\t\t\t\tvalue={this.state.exerciseTime}\r\n\t\t\t\tonChange={(value) => this.onExerciseTimeSliderChange(value)}\r\n\t\t\t/>\r\n\r\n\t\t</div>);\r\n\t}\r\n\r\n\trenderStepsSlider() {\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"Number of steps\")}\r\n\t\t\t<AdvancedSlider\r\n\t\t\t\tref=\"stepsSlider\"\r\n\t\t\t\tmin={2}\r\n\t\t\t\tincluded={false}\r\n\t\t\t\tmax={100}\r\n\t\t\t\tmarks={{ 1: '1', 5: '5', 10: '10', 15: '15', 20: '20', 30: '30', 40: '40', 50: '50', 60: '60', 70: '70', 80: '80', 90: '90', 100: '100' }}\r\n\t\t\t\tvalue={this.state.stepsNum}\r\n\t\t\t\tonChange={(value) => this.onStepsSliderChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\trenderSpeedRange() {\r\n\t\treturn (<div>\r\n\t\t\t{Tr(\"BPM range\")}\r\n\t\t\t<AdvancedRange\r\n\t\t\t\tref=\"bpmRange\"\r\n\t\t\t\tmin={Config.MIN_BPM}\r\n\t\t\t\tmax={Config.MAX_BPM}\r\n\t\t\t\tdefaultValue={[\r\n\t\t\t\t\tthis.state.bpmRange[0],\r\n\t\t\t\t\tthis.state.bpmRange[1]\r\n\t\t\t\t]}\r\n\t\t\t\teditInPlace={true}\r\n\t\t\t\tpushable={true}\r\n\t\t\t\tonAfterChange={(value) => this.onBpmRangeChange(value)}\r\n\t\t\t/>\r\n\t\t</div>);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<SimplePanel className=\"ModePanel\" title=\"Mode\" width=\"300px\">\r\n\t\t\t\t<h6>{Tr('Increase speed')}</h6>\r\n\t\t\t\t<ButtonGroup size=\"sm\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.SET_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.SET_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"Set time\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.BY_BAR)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.BY_BAR}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"By bar\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.BY_TIME)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.BY_TIME}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"By time\")}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\toutline\r\n\t\t\t\t\t\tonClick={() => this.onModeChange(PlayModes.CONSTANT)}\r\n\t\t\t\t\t\tactive={this.state.playMode === PlayModes.CONSTANT}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Tr(\"Constant\")}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</ButtonGroup>\r\n\r\n\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT}>\r\n\t\t\t\t\t{this.renderSpeedRange()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.SET_TIME}>\r\n\t\t\t\t\t{this.renderTimeSlider()}\r\n\t\t\t\t\t{this.renderStepsSlider()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.BY_BAR}>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"Increase speed every\")}\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byBarSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byBarInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={this.byBarFormatter}\r\n\t\t\t\t\t\t\tonChange={v => this.onBarIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={301}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 20, 50, 100, 300]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.BY_TIME}>\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t{Tr(\"Increase speed every\")}\r\n\t\t\t\t\t\t<GeometricSlider\r\n\t\t\t\t\t\t\tref=\"byTimeSlider\"\r\n\t\t\t\t\t\t\tdefaultValue={this.state.byTimeInterval}\r\n\t\t\t\t\t\t\tbadgeFormatter={Utils.formatTimeLong}\r\n\t\t\t\t\t\t\tmarkFormatter={Utils.formatTime}\r\n\t\t\t\t\t\t\tonChange={v => this.onTimeIntervalChange(v)}\r\n\t\t\t\t\t\t\tmin={1}\r\n\t\t\t\t\t\t\tmax={1200}\r\n\t\t\t\t\t\t\tmarksAt={[1, 2, 5, 10, 30, 60, 120, 240, 600, 1200]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode !== PlayModes.CONSTANT && this.state.playMode !== PlayModes.SET_TIME}>\r\n\t\t\t\t\t{this.renderIncreaseBpmDropdown()}\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t\t<Collapse isOpen={this.state.playMode === PlayModes.CONSTANT}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{Tr(\"BPM\")}\r\n\r\n\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\tref=\"constantBpmSlider\"\r\n\t\t\t\t\t\t\ttitle= {Tr(\"BPM\")}\r\n\t\t\t\t\t\t\tincluded={false}\r\n\t\t\t\t\t\t\teditInPlace={true}\r\n\t\t\t\t\t\t\tmin={Config.MIN_BPM}\r\n\t\t\t\t\t\t\tbtnStep={10}\r\n\t\t\t\t\t\t\tmax={Config.MAX_BPM}\r\n\t\t\t\t\t\t\tmarks={{ 30: '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\tvalue={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\tonChange={this.onBpmSliderChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Collapse>\r\n\r\n\t\t\t</SimplePanel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ModePanel;\r\n\r\nModePanel.defaultProps = {\r\n\tplayMode: InitPreset.playMode,\r\n\tplaybackMode: InitPreset.playbackMode,\r\n\tinterval: InitPreset.interval,\r\n\tbpmStep: InitPreset.bpmStep,\r\n\tbpmRange: InitPreset.bpmRange,\r\n\tbyTimeInterval: InitPreset.byTimeInterval,\r\n\tbyBarInterval: InitPreset.byBarInterval,\r\n\tstepsNum: InitPreset.stepsNum,\r\n\texerciseTime: InitPreset.exerciseTime,\r\n\tconstantBpmSlider: InitPreset.constantBpmSlider,\r\n\t// currentBpm: InitPreset.bpmRange[0],\r\n\tonAfterChange: null\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Badge, ButtonGroup, Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Samples, InstrumentsByKey } from '../Instruments'\r\nimport { InitPreset } from '../PresetsLib'\r\nimport Tr from './../Locale'\r\nimport Config from \"../Config\";\r\nclass TrackRow extends Component {\r\n\r\n    state = {\r\n        activeIdx: null,\r\n        label: Tr(\"Please select\")\r\n\r\n        // instrument: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        // load initial sample defined in InitPreset\r\n        if (!InitPreset.samples[this.props.idx]) {\r\n            return\r\n        }\r\n\r\n        // TODO: I think I can find better place for this code. It's doing the job though and I'm lazy so...\r\n        const instrument = InstrumentsByKey[InitPreset.samples[this.props.idx].instrumentKey];\r\n        const file = InitPreset.samples[this.props.idx].file;\r\n        this.onSampleSelect(instrument.key, file);\r\n    }\r\n\r\n    addBeat() {\r\n        if (this.props.trackRow.length < Config.MAXIMUM_TIMESIGNATURE) {\r\n            this.props.onMeasureChange(this.props.trackRow.length + 1)\r\n        }\r\n    }\r\n\r\n    removeBeat() {\r\n        if (this.props.trackRow.length > 1) {\r\n            this.props.onMeasureChange(this.props.trackRow.length - 1)\r\n        }\r\n    }\r\n\r\n    onSampleChange() {\r\n        this.setState(prevState => ({\r\n            sampleDropdownOpen: !prevState.sampleDropdownOpen\r\n        }));\r\n\r\n    }\r\n\r\n    onSampleSelect(instrumentKey, filename) {\r\n        this.props.soundLibrary.use(this.props.idx, instrumentKey, filename)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"trackRow\">\r\n                <div className=\"label\">\r\n                    <ButtonDropdown\r\n                        isOpen={this.state.sampleDropdownOpen}\r\n                        toggle={() => this.onSampleChange()}\r\n                    >\r\n                        <DropdownToggle\r\n                            caret\r\n                            size=\"sm\"\r\n                            outline\r\n                            // className='w-100'\r\n                            style={{ width: '6rem' }}\r\n                            color=\"light\"\r\n                            ref=\"dropdown\"\r\n                        >\r\n                            {this.props.soundLibrary.playersArr[this.props.idx] ? this.props.soundLibrary.playersArr[this.props.idx].fullLabel : Tr('Select')}\r\n                            {/* {(this.props.instrument && this.props.instrument.file) || 'Please select'} */}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            {\r\n                                Samples.map((sample, idx) => {\r\n                                    return (\r\n                                        <DropdownItem key={'row_' + idx} onClick={() => this.onSampleSelect(sample.instrumentKey, sample.file)}>\r\n                                            {InstrumentsByKey[sample.instrumentKey].label} - {sample.label}\r\n                                        </DropdownItem>);\r\n                                })\r\n                            }\r\n                        </DropdownMenu>\r\n                    </ButtonDropdown>\r\n\r\n                    <Badge color=\"outline\" style={{ alignSelf: 'center', width: '1.2rem'}}>{ this.props.trackRow.length }</Badge>\r\n                    {/* <Badge color=\"outline\">{this.props.trackRow.length != this.props.timeSignature ? this.props.trackRow.length : ''}</Badge> */}\r\n                    \r\n                    <ButtonGroup size=\"xs\" vertical>\r\n                        <Button onClick={() => this.addBeat()}>+</Button>\r\n                        <Button onClick={() => this.removeBeat()}>-</Button>\r\n                    </ButtonGroup>\r\n                </div>\r\n\r\n                <div className=\"cells\" ref=\"cellsDiv\">\r\n                    {/* <div className='indicator' style={{ left: this.props.progress + '%', position: 'relative' }}>|</div> */}\r\n                    {\r\n                        this.props.trackRow.map((el, idx) => {\r\n                            const style = {}\r\n                            if (this.props.trackRow[idx]) {\r\n                                style.backgroundColor = Config.COLOR_PALETTE[this.props.idx]\r\n                            }\r\n                            return (\r\n                                <div\r\n                                    key={\"cell_\" + idx}\r\n                                    className=\"clickable cell\"\r\n                                    style={style}\r\n                                    onClick={() => this.props.onClick(this.props.idx, idx)} />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackRow;\r\n\r\nTrackRow.defaultProps = {\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport TrackRow from './TrackRow'\r\nimport SimplePanel from \"../SimplePanel\";\r\nimport { Badge, Button, ButtonGroup } from 'reactstrap'\r\nimport { InitPreset } from \"../PresetsLib\";\r\nimport Tr from \"../Locale\"\r\nimport Config from \"../Config\";\r\n\r\nclass TrackView extends Component {\r\n    state = {\r\n        // track: this.props.track,\r\n        // trackInstruments: [],\r\n        timeSignature: this.props.timeSignature\r\n    }\r\n\r\n    rowRefs = [];\r\n\r\n    handleCellClick(sampleIdx, columnIdx) {\r\n        // copy array\r\n        let track = [...this.props.track];\r\n\r\n        let v = track[sampleIdx][columnIdx];\r\n\r\n        if (v > 0) {\r\n            track[sampleIdx][columnIdx] = 0;\r\n        }\r\n        else {\r\n            track[sampleIdx][columnIdx] = 1;\r\n        }\r\n        this.props.onChange(track, this.props.timeSignature);\r\n    }\r\n\r\n    setProgress(progress) {\r\n        this.indicator.style.left = this.indicator.minLeft + progress * (this.indicator.maxRight - this.indicator.minLeft) + 'px'\r\n    }\r\n\r\n    updateDimensions() {\r\n        // TODO: this is quite ugly\r\n        const cellsBBtop = this.refs.trackRow_0.refs.cellsDiv.getBoundingClientRect();\r\n        const cellsBBbottom = this.refs.trackRow_3.refs.cellsDiv.getBoundingClientRect();\r\n        const box = { left: cellsBBtop.left, top: cellsBBtop.top, bottom: cellsBBbottom.bottom, right: cellsBBbottom.right };\r\n        const indicator = this.refs.indicator;\r\n\r\n        const left = this.refs.trackRow_0.refs.cellsDiv.offsetLeft;\r\n        indicator.minLeft = this.refs.trackRow_0.refs.cellsDiv.offsetLeft;\r\n        const right = left + this.refs.trackRow_0.refs.cellsDiv.offsetWidth;\r\n        indicator.style.left = left + 'px'\r\n        indicator.maxRight = right;\r\n\r\n        indicator.style.height = box.bottom - box.top + 'px'\r\n        this.indicator = indicator;\r\n\r\n\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('resize', () => this.updateDimensions());\r\n        this.updateDimensions();\r\n    }\r\n\r\n    addBeat() {\r\n        // add silent beat to each track, make sure we don't exceed max allowed timesignature\r\n\r\n        if (this.props.timeSignature < Config.MAXIMUM_TIMESIGNATURE) {\r\n            let track = [...this.props.track]\r\n\r\n            for (let i = 0; i < track.length; i++) {\r\n                if (track[i].length < Config.MAXIMUM_TIMESIGNATURE) {\r\n                    track[i].push(0)\r\n                }\r\n            }\r\n            this.props.onChange(track, this.props.timeSignature + 1)\r\n        }\r\n    }\r\n\r\n    removeBeat() {\r\n        // remove a beat from each track, making sure there won't be negative timeSignatures on any track\r\n\r\n        if (this.props.timeSignature > 1) {\r\n            let track = [...this.props.track];\r\n\r\n            for (let i = 0; i < track.length; i++) {\r\n                if (track[i].length > 1) {\r\n                    track[i].pop()\r\n                }\r\n            }\r\n            this.props.onChange(track, this.props.timeSignature - 1)\r\n\r\n        }\r\n    }\r\n\r\n    onTrackRowSignatureChange(trackId, newTimeSignature) {\r\n\r\n        if (newTimeSignature < 24) {\r\n            let track = [...this.props.track]\r\n            if (newTimeSignature > track[trackId].length) {\r\n                // add silent beat\r\n                track[trackId].push(0);\r\n\r\n            }\r\n            else {\r\n                track[trackId].pop();\r\n            }\r\n\r\n            this.props.onChange(track, this.props.timeSignature)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updateDimensions();\r\n    }\r\n\r\n    render() {\r\n\r\n        let indicatorProgress = 0;\r\n        if (this.indicator) {\r\n            indicatorProgress = this.indicator.minLeft + this.props.partProgress * (this.indicator.maxRight - this.indicator.minLeft) + 'px';\r\n        }\r\n\r\n        return (\r\n            <SimplePanel style={{ padding: '15px' }} title={Tr(\"Sequencer\")}>\r\n                <div className=\"trackView\">\r\n                    <div className=\"trackContainer\">\r\n                        <div className=\"indicator\" ref='indicator' style={{ left: indicatorProgress }} />\r\n                        {\r\n                            // TODO: get rid of this hardcoded stuff\r\n                            [0, 1, 2, 3].map(idx => {\r\n                                return (\r\n                                    <TrackRow\r\n                                        idx={idx}\r\n                                        ref={\"trackRow_\" + idx}\r\n                                        soundLibrary={this.props.soundLibrary}//.use(idx, instrument, file);\r\n                                        onMeasureChange={(newTimeSignature) => this.onTrackRowSignatureChange(idx, newTimeSignature)}\r\n                                        key={\"trackRow_\" + idx}\r\n                                        timeSignature={this.props.timeSignature}\r\n                                        progress={this.props.progress}\r\n                                        trackRow={this.props.track[idx]}\r\n                                        onClick={(sampleIdx, trackIdx) => this.handleCellClick(sampleIdx, trackIdx)}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"btnContainer\">\r\n                        <ButtonGroup size=\"sm\" vertical>\r\n                            <Button onClick={() => this.addBeat()}>+</Button>\r\n                            <Button onClick={() => this.removeBeat()}>-</Button>\r\n                        </ButtonGroup>\r\n                        <div height=\"1em\">\r\n                            <Badge className=\"beatsCntBadge\" color=\"dark\">{this.props.timeSignature}</Badge>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </SimplePanel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackView;\r\n\r\nTrackView.defaultProps = {\r\n    track: InitPreset.track\r\n}\r\n\r\n","import Tone from 'tone'\r\nimport { Samples, InstrumentsByKey } from './Instruments';\r\n\r\nclass SoundLibrary  {\r\n    players = new Tone.Players({})\r\n    playersArr = []; \r\n  \r\n    reverb = new Tone.Reverb().toMaster();\r\n\r\n    constructor(props) {\r\n        // this is required for convolution rever to generate IR profile\r\n        this.reverb.decay = 4;\r\n        this.reverb.predelay = 0.05;\r\n        this.reverb.generate();\r\n\r\n        this.reverb.wet.value = 0;\r\n        this.players.connect(this.reverb);\r\n        this.players.toMaster();\r\n    }\r\n\r\n   \r\n    use(idx, instrumentKey, file) {\r\n        const instrument = InstrumentsByKey[instrumentKey];\r\n\r\n        // console.log('process', process)\r\n        this.players.add('player_' + idx, './audio/' + instrumentKey + '/' + file);// (player) => this.onLoad(player));\r\n        \r\n        let player = this.players.get('player_' + idx);\r\n        player.instrument = instrument;\r\n        player.file = file;\r\n        player.idx = idx;\r\n        player.fullLabel = Samples.find(el => el.file === file).label;\r\n        this.playersArr[idx] = player;\r\n    }\r\n\r\n    getSamples() {\r\n        let samples = [];\r\n        this.playersArr.map(player => {\r\n            samples.push({\r\n                file: player.file,\r\n                instrumentKey: player.instrument.key\r\n            })\r\n            // expected to return value from arrow func\r\n            return true;\r\n        });\r\n        return samples;\r\n    }\r\n\r\n    play(trackIdx, time) {\r\n        const player = this.playersArr[trackIdx];\r\n        if (player && player.loaded) {\r\n            player.start(time);\r\n        }\r\n    }\r\n\r\n    setReverb(wet) {\r\n        this.reverb.wet.value = wet;\r\n    }\r\n}\r\nexport default SoundLibrary;","import React, { Component } from \"react\";\r\nimport Tone from \"tone\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport SimplePanel from './SimplePanel'\r\nimport { Button } from 'reactstrap'\r\nimport { InitPreset } from './PresetsLib'\r\nimport Planner from './Planner'\r\nimport Tr from './Locale'\r\nimport PresetsManager from './PresetsManager'\r\nimport SvgClock from \"./SvgClock\";\r\nimport ModePanel from './ModePanel'\r\nimport TrackView from './TrackView/TrackView'\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler'\r\nimport Config from './Config'\r\nimport SoundLibrary from \"./SoundLibrary\";\r\nimport AdvancedSlider from \"./Sliders/AdvancedSlider\";\r\n\r\nclass SoundMachine extends Component {\r\n\tsoundLibrary = new SoundLibrary();\r\n\r\n\tstate = {\r\n\t\tinitialized: false,\r\n\t\tconfig: InitPreset,\r\n\t\ttrack: this.props.track,\r\n\t\ttimeSignature: this.props.timeSignature\r\n\t};\r\n\r\n\ttransport = Tone.Transport;\r\n\ttone = Tone;\r\n\r\n\tcomponentDidMount() {\r\n\t\tTone.Transport.lookAhead = 10;\r\n\r\n\t\t// initialize main loop\r\n\t\tthis.part = new Tone.Part((time, note) => this.repeat(time, note), [])\r\n\t\tthis.part.loop = true;\r\n\t\t// this.part.humanize = true;\r\n\t\tthis.part.start(0)\r\n\r\n\r\n\t\tconst config = this.getConfig();\r\n\t\tthis.setPlan(config);\r\n\r\n\t\tthis.initProgressUpdate();\r\n\t\tthis.documentTitle = document.title;\r\n\r\n\t\tthis.setState({ initialized: true })\r\n\t\tthis.props.onReady();\r\n\t}\r\n\r\n\tgetConfig() {\r\n\t\treturn { ...this.refs.modePanel.state, ...{ track: this.state.track }, ...{ timeSignature: this.state.timeSignature }, ...{ samples: this.soundLibrary.getSamples() } };\r\n\t}\r\n\r\n\tinitProgressUpdate() {\r\n\t\tsetInterval(() => this.onProgress(), 1000 / Config.PROGRESS_UPDATE_FPS)\r\n\t}\r\n\r\n\tsetPlan(config) {\r\n\t\t// cancel all events\r\n\t\tthis.transport.cancel();\r\n\t\tthis.transport.position = 0;\r\n\t\tthis.setTrack(config.track.slice(), config.timeSignature);\t// TODO: Unsure why we need to pass copy\r\n\t\tthis.refs.planner.setPlan(config);\r\n\r\n\t}\r\n\r\n\t// trackRow.length determine polyrhythm measure, timeSignature is main time signature we relate polyrythms to\r\n\tcreatePoly(trackRow, trackIdx, timeSignature) {\r\n\t\tconst ticks = this.tone.Time(\"1m\").toTicks();\r\n\t\tconst interval = ticks / trackRow.length;\r\n\r\n\t\tfor (let i = 0; i < trackRow.length; i++) {\r\n\t\t\tif (trackRow[i] > 0) {\r\n\t\t\t\tthis.part.add(interval.toFixed(0) * i + 'i', trackIdx);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tsetTrack(track, timeSignature) {\r\n\t\tif (this.state.track === track) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// make sure we have 4 tracks\r\n\t\tif (track.length < Config.TRACKS_NUMBER) {\r\n\t\t\ttrack.push(new Array(timeSignature).fill(0));\r\n\t\t}\r\n\t\tthis.setTimeSignature(timeSignature);\r\n\r\n\t\tthis.part.removeAll();\r\n\r\n\t\tfor (let i = 0; i < track.length; i++) {\r\n\t\t\tthis.createPoly(track[i], i, timeSignature)\r\n\t\t}\r\n\t\tthis.part.loopEnd = '1m'\r\n\t\tthis.part.start(0);\r\n\r\n\t\tthis.setState({ track: track, timeSignature: timeSignature })\r\n\r\n\t}\r\n\r\n\tonProgress() {\r\n\t\tif (this.transport.state === 'stopped') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.refs.debug) {\r\n\t\t\tthis.refs.debug.innerHTML = this.transport.seconds.toFixed(1)\r\n\t\t}\r\n\r\n\t\tif (this.refs.planner) { this.refs.planner.updateProgress() }\r\n\r\n\t\tthis.refs.svgClock.setProgress(this.part.progress)\r\n\t\tthis.refs.trackView.setProgress(this.part.progress)\r\n\t}\r\n\r\n\trepeat = (time, trackIdx) => {\r\n\t\tthis.soundLibrary.play(trackIdx, time)\r\n\t}\r\n\r\n\tcalcTimeForBpm(seconds, bpm) {\r\n\t\treturn Tone.Time(seconds * bpm / this.baseBpm);\r\n\t}\r\n\r\n\tsetTimeSignature(timeSignature) {\r\n\t\tif (timeSignature !== this.transport.timeSignature) {\r\n\t\t\tthis.transport.timeSignature = timeSignature;\r\n\t\t}\r\n\t}\r\n\r\n\tsetBpm = bpm => {\r\n\r\n\t\tif (isNaN(bpm) || bpm <= 0 || bpm > 1200) {\r\n\t\t\tthrow new Error(\"Invalid BPM value: \" + bpm)\r\n\t\t}\r\n\r\n\t\tif (bpm !== this.transport.bpm.value) {\r\n\t\t\tTone.Transport.bpm.value = bpm;\r\n\r\n\t\t\tdocument.title = bpm.toFixed(0) + ' | ' + this.documentTitle;\r\n\r\n\t\t\t// the animation and overflow retrigger seems to make metronome bit jiggery, unsure if we should implement it\r\n\t\t\t// this.refs.bpmInfo.classList.remove('bump')\r\n\t\t\t// void this.refs.bpmInfo.offsetWidth;\r\n\t\t\t// this.refs.bpmInfo.classList.add('bump');\r\n\t\t\t// const bpmInfo = this.refs.bpmInfo\r\n\t\t\t// bpmInfo.addEventListener( \"animationend\",  function() {\r\n\t\t\t// \tbpmInfo.classList.remove(\"bump\");\r\n\t\t\t//   } );\r\n\t\t\tthis.setState({ bpm: bpm })\r\n\t\t}\r\n\t};\r\n\r\n\ttoggle() {\r\n\t\tTone.Transport.state === 'started' ? this.stop() : this.start();\r\n\t};\r\n\r\n\tonPlanStep(bpm) {\r\n\t\tthis.setBpm(bpm);\r\n\t}\r\n\r\n\tonControlChange() {\r\n\t\tconst v = this.getConfig();\r\n\t\tthis.setPlan(v);\r\n\t}\r\n\r\n\tonPresetSelect(preset) {\r\n\t\t// set preset's stuff\r\n\t\tthis.setState({ track: preset.track, timeSignature: preset.timeSignature }, function () {\r\n\t\t\tthis.refs.modePanel.setValue(preset)\r\n\t\t});\r\n\r\n\t\t// set instruments\r\n\t\tfor (let i = 0; i < preset.samples.length; i++) {\r\n\t\t\tthis.soundLibrary.use(i, preset.samples[i].instrumentKey, preset.samples[i].file)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tonTrackChange(newTrack, timeSignature) {\r\n\t\tif (this.state.timeSignature !== timeSignature) {\r\n\t\t\t// length changed so after setting track, recreate Plan\r\n\t\t\tconst config = this.getConfig();\r\n\t\t\tconfig.track = newTrack;\r\n\t\t\tconfig.timeSignature = timeSignature;\r\n\t\t\tthis.setPlan(config);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.setTrack(newTrack, timeSignature)\r\n\t\t}\r\n\t}\r\n\r\n\tonVolumeChange(newVolume) {\r\n\t\tthis.tone.Master.volume.value = -60 + (newVolume * 60 / 100) + 6\r\n\t}\r\n\r\n\tonReverbChange(value) {\r\n\t\tthis.soundLibrary.setReverb(value / 100)\r\n\t}\r\n\r\n\thandleKey(key, e) {\r\n\t\te.preventDefault();\r\n\t\tswitch (key) {\r\n\t\t\tcase 's':\r\n\t\t\tcase 'space':\r\n\t\t\t\tthis.toggle();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'esc':\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\t\tthis.refs.planner.stepBackward()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tthis.refs.planner.stepForward()\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'up':\r\n\t\t\t\tif (this.state.bpm < 1200) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm + 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'down':\r\n\t\t\t\tif (this.state.bpm > 10) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm - 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shift+up':\r\n\t\t\t\tif (this.state.bpm < 1200) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm + 10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shift+down':\r\n\t\t\t\tif (this.state.bpm > 10) {\r\n\t\t\t\t\tthis.setBpm(this.state.bpm - 10);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\r\n\t\t\t<>\r\n\t\t\t\t<KeyboardEventHandler handleKeys={['s', 'space', 'esc', 'left', 'right', 'up', 'down', 'shift+up', 'shift+down']} onKeyEvent={(key, e) => this.handleKey(key, e)} />\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SimplePanel title={Tr('Control')}>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t// color=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.toggle()}\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={this.state.isPlaying ? 'secondary' : 'light'}\r\n\t\t\t\t\t\t\t\t\t\t\t// outline\r\n\t\t\t\t\t\t\t\t\t\t\tblock\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{Tr(\"Start / Stop\")}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t<Row><Col><h2><span ref=\"bpmInfo\" className='badge badge-dark bpm-info'>BPM: {Tone.Transport.bpm.value.toFixed(0)}</span></h2></Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{Tr(\"Volume\")}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\t\t\t\t\t\tref=\"volumeSlider\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// included={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisableBtns={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbtnStep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={90}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// marks={{ 30:k '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// value={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(newVolume) => this.onVolumeChange(newVolume)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{Tr(\"Reverb\")}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<AdvancedSlider\r\n\t\t\t\t\t\t\t\t\t\t\t\tref=\"reverbSlider\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// included={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisableBtns={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tbtnStep={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmax={100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// marks={{ 30:k '30', 200: '200', 400: '400', 600: '600', 800: '800', 1000: '1000',  1200: '1200' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// value={this.state.constantBpmSlider}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(newVolume) => this.onReverbChange(newVolume)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t</SimplePanel>\r\n\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col style={{ margin: 'auto' }}>\r\n\t\t\t\t\t\t\t<SvgClock ref=\"svgClock\" soundLibrary={this.soundLibrary} timeSignature={this.state.timeSignature} track={this.state.track} />\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<ModePanel\r\n\t\t\t\t\t\t\tref=\"modePanel\"\r\n\t\t\t\t\t\t\ttransport={this.transport}\r\n\t\t\t\t\t\t\tonChange={() => this.onControlChange()}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<TrackView\r\n\t\t\t\t\t\t\t\tref='trackView'\r\n\t\t\t\t\t\t\t\tsoundLibrary={this.soundLibrary}\r\n\t\t\t\t\t\t\t\ttrack={this.state.track}\r\n\t\t\t\t\t\t\t\t// partProgress={this.state.partProgress}\r\n\t\t\t\t\t\t\t\tinstrument={this.state.instrument}\r\n\t\t\t\t\t\t\t\t// instrumentLib={this.instrumentLib}\r\n\t\t\t\t\t\t\t\ttimeSignature={this.state.timeSignature}\r\n\t\t\t\t\t\t\t\t// onInstrumentChanged={(trackIdx, instrument) => this.onInstrumendChanged(trackIdx, instrument)}\r\n\t\t\t\t\t\t\t\tonChange={(track, timeSignature) => this.onTrackChange(track, timeSignature)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Planner\r\n\t\t\t\t\t\t\t\ttransport={this.transport}\r\n\t\t\t\t\t\t\t\tonChange={() => this.onControlChange()}\r\n\t\t\t\t\t\t\t\tonPlanStep={(bpm) => this.onPlanStep(bpm)}\r\n\t\t\t\t\t\t\t\tonPlanEnd={() => this.stop()}\r\n\t\t\t\t\t\t\t\tref=\"planner\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<PresetsManager\r\n\t\t\t\t\t\t\t\tref=\"presetsManager\"\r\n\t\t\t\t\t\t\t\tgetPreset={() => this.getConfig()}\r\n\t\t\t\t\t\t\t\tonSelect={preset => this.onPresetSelect(preset)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t</Container >\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tthis.transport.stop();\r\n\t\tthis.transport.position = 0;\r\n\t\tthis.setState({ isPlaying: false });\r\n\t}\r\n\r\n\tstart() {\r\n\t\tthis.transport.start(\"+.1\");\r\n\t\tthis.part.start();\r\n\t\tthis.setState({ isPlaying: true });\r\n\t}\r\n}\r\n\r\nexport default SoundMachine;\r\n\r\n\r\nSoundMachine.defaultProps = {\r\n\tinstrument: InitPreset.instrument,\r\n\ttrack: InitPreset.track,\r\n\ttimeSignature: InitPreset.timeSignature,\r\n\tonReady: function () { }\r\n};","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n// import \"./components/SoundMachine\";\r\nimport SoundMachine from \"./components/SoundMachine\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Badge, Container, Row, Col } from \"reactstrap\";\r\nimport SimplePanel from \"./components/SimplePanel\";\r\nimport ReactGA from 'react-ga';\r\nimport Tr from './components/Locale'\r\n\r\nclass App extends Component {\r\n\r\n\tstate = {\r\n\t\tshowMask: true\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// google analytics\r\n\t\tReactGA.initialize({\r\n\t\t\ttrackingId: 'UA-151010848-1',\r\n\t\t\tdebug: false,\r\n\t\t\tgaOptions: {\r\n\t\t\t\tcookieDomain: 'none'\r\n\t\t\t}\r\n\t\t});\r\n\t\tReactGA.pageview(window.location.pathname + window.location.search);\r\n\t}\r\n\r\n\tremoveLoadMask() {\r\n\t\tthis.setState({ showMask: false })\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Container className=\"app-container \">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SoundMachine ref=\"sm\" onReady={() => this.removeLoadMask()} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<SimplePanel title={Tr(\"Keyboard controls\")} className=\"about\">\r\n\t\t\t\t\t\t\t\t<div><code>{Tr(\"(shift) arrow up/down\")}</code> - {Tr(\"higher/lower BPM\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>{Tr(\"arrow left/right\")}</code> - {Tr(\"previous/next step according to plan\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>space, s</code> - {Tr(\"start/stop\")}</div>\r\n\t\t\t\t\t\t\t\t<div><code>esc</code> - {Tr(\"stop\")}</div>\r\n\t\t\t\t\t\t\t</SimplePanel>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<div className=\"footer\">\r\n\t\t\t\t\t\t\t\t{/* TODO: i18n */}\r\n\t\t\t\t\t\t\t\t<div><h6>If you like this app consider donation to a developer using following <Badge href=\"https://www.buymeacoffee.com/indiebubbler\" target=\"blank\">link</Badge></h6></div>\r\n\t\t\t\t\t\t\t\t<div>Join discord using <Badge href=\"https://discord.gg/fAwnmVh\" target=\"blank\">this link</Badge> for feedback and improvement suggestions.</div>\r\n\t\t\t\t\t\t\t\t<div>By using this site you agree to the use of cookies to store user defined presets and analytics.</div>\r\n\r\n\t\t\t\t\t\t\t\t<div>If you want help translating this page please contact <Badge href=\"mailto:indiebubbler@gmail.com?subject=Feedback\">indiebubbler@gmail.com</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>Made using <Badge href=\"https://reactjs.org/\" target=\"blank\" >React</Badge> and <Badge href=\"https://tonejs.github.io/\" target=\"blank\">Tone.js</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>Ideas for visualisation and presets taken from <Badge href=\"http://www.ethanhein.com/wp/my-nyu-masters-thesis\" target=\"blank\">Ethan Hein's site</Badge>.</div>\r\n\t\t\t\t\t\t\t\t<div>&#169; IndieBubbler 2019-2020. Version 2.2</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<div ref=\"loadMask\" className={this.state.showMask === true ? 'loadmask ' : 'loadmask fadeOut'} />\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(   <App  />  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}